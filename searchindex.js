Search.setIndex({"docnames": ["UIO", "context", "index", "install", "jit_in_wenet", "lm", "papers", "pretrained_models", "pretrained_models.en", "production", "python_api/modules", "python_api/wenet", "python_api/wenet.branchformer", "python_api/wenet.branchformer.cgmlp", "python_api/wenet.branchformer.encoder", "python_api/wenet.branchformer.encoder_layer", "python_api/wenet.dataset", "python_api/wenet.dataset.dataset", "python_api/wenet.dataset.kaldi_io", "python_api/wenet.dataset.processor", "python_api/wenet.dataset.wav_distortion", "python_api/wenet.efficient_conformer", "python_api/wenet.efficient_conformer.attention", "python_api/wenet.efficient_conformer.convolution", "python_api/wenet.efficient_conformer.encoder", "python_api/wenet.efficient_conformer.encoder_layer", "python_api/wenet.efficient_conformer.subsampling", "python_api/wenet.squeezeformer", "python_api/wenet.squeezeformer.attention", "python_api/wenet.squeezeformer.conv2d", "python_api/wenet.squeezeformer.convolution", "python_api/wenet.squeezeformer.encoder", "python_api/wenet.squeezeformer.encoder_layer", "python_api/wenet.squeezeformer.positionwise_feed_forward", "python_api/wenet.squeezeformer.subsampling", "python_api/wenet.transducer", "python_api/wenet.transducer.joint", "python_api/wenet.transducer.predictor", "python_api/wenet.transducer.transducer", "python_api/wenet.transformer", "python_api/wenet.transformer.asr_model", "python_api/wenet.transformer.attention", "python_api/wenet.transformer.cmvn", "python_api/wenet.transformer.convolution", "python_api/wenet.transformer.ctc", "python_api/wenet.transformer.decoder", "python_api/wenet.transformer.decoder_layer", "python_api/wenet.transformer.embedding", "python_api/wenet.transformer.encoder", "python_api/wenet.transformer.encoder_layer", "python_api/wenet.transformer.label_smoothing_loss", "python_api/wenet.transformer.positionwise_feed_forward", "python_api/wenet.transformer.subsampling", "python_api/wenet.transformer.swish", "python_api/wenet.utils", "python_api/wenet.utils.checkpoint", "python_api/wenet.utils.cmvn", "python_api/wenet.utils.common", "python_api/wenet.utils.config", "python_api/wenet.utils.ctc_util", "python_api/wenet.utils.executor", "python_api/wenet.utils.file_utils", "python_api/wenet.utils.init_model", "python_api/wenet.utils.mask", "python_api/wenet.utils.scheduler", "python_binding", "reference", "requirements", "runtime", "train", "tutorial_aishell", "tutorial_librispeech"], "filenames": ["UIO.md", "context.md", "index.rst", "install.md", "jit_in_wenet.md", "lm.md", "papers.md", "pretrained_models.md", "pretrained_models.en.md", "production.rst", "python_api/modules.rst", "python_api/wenet.rst", "python_api/wenet.branchformer.rst", "python_api/wenet.branchformer.cgmlp.rst", "python_api/wenet.branchformer.encoder.rst", "python_api/wenet.branchformer.encoder_layer.rst", "python_api/wenet.dataset.rst", "python_api/wenet.dataset.dataset.rst", "python_api/wenet.dataset.kaldi_io.rst", "python_api/wenet.dataset.processor.rst", "python_api/wenet.dataset.wav_distortion.rst", "python_api/wenet.efficient_conformer.rst", "python_api/wenet.efficient_conformer.attention.rst", "python_api/wenet.efficient_conformer.convolution.rst", "python_api/wenet.efficient_conformer.encoder.rst", "python_api/wenet.efficient_conformer.encoder_layer.rst", "python_api/wenet.efficient_conformer.subsampling.rst", "python_api/wenet.squeezeformer.rst", "python_api/wenet.squeezeformer.attention.rst", "python_api/wenet.squeezeformer.conv2d.rst", "python_api/wenet.squeezeformer.convolution.rst", "python_api/wenet.squeezeformer.encoder.rst", "python_api/wenet.squeezeformer.encoder_layer.rst", "python_api/wenet.squeezeformer.positionwise_feed_forward.rst", "python_api/wenet.squeezeformer.subsampling.rst", "python_api/wenet.transducer.rst", "python_api/wenet.transducer.joint.rst", "python_api/wenet.transducer.predictor.rst", "python_api/wenet.transducer.transducer.rst", "python_api/wenet.transformer.rst", "python_api/wenet.transformer.asr_model.rst", "python_api/wenet.transformer.attention.rst", "python_api/wenet.transformer.cmvn.rst", "python_api/wenet.transformer.convolution.rst", "python_api/wenet.transformer.ctc.rst", "python_api/wenet.transformer.decoder.rst", "python_api/wenet.transformer.decoder_layer.rst", "python_api/wenet.transformer.embedding.rst", "python_api/wenet.transformer.encoder.rst", "python_api/wenet.transformer.encoder_layer.rst", "python_api/wenet.transformer.label_smoothing_loss.rst", "python_api/wenet.transformer.positionwise_feed_forward.rst", "python_api/wenet.transformer.subsampling.rst", "python_api/wenet.transformer.swish.rst", "python_api/wenet.utils.rst", "python_api/wenet.utils.checkpoint.rst", "python_api/wenet.utils.cmvn.rst", "python_api/wenet.utils.common.rst", "python_api/wenet.utils.config.rst", "python_api/wenet.utils.ctc_util.rst", "python_api/wenet.utils.executor.rst", "python_api/wenet.utils.file_utils.rst", "python_api/wenet.utils.init_model.rst", "python_api/wenet.utils.mask.rst", "python_api/wenet.utils.scheduler.rst", "python_binding.md", "reference.rst", "requirements.txt", "runtime.md", "train.rst", "tutorial_aishell.md", "tutorial_librispeech.md"], "titles": ["Big Data Training: UIO", "Context Biasing", "Welcome to wenet\u2019s documentation!", "Install", "JIT in WeNet", "LM for WeNet", "Papers", "Pretrained Models in WeNet", "Pretrained Models in WeNet", "Production Runtime", "Python API Reference", "wenet package", "wenet.branchformer package", "wenet.branchformer.cgmlp module", "wenet.branchformer.encoder module", "wenet.branchformer.encoder_layer module", "wenet.dataset package", "wenet.dataset.dataset module", "wenet.dataset.kaldi_io module", "wenet.dataset.processor module", "wenet.dataset.wav_distortion module", "wenet.efficient_conformer package", "wenet.efficient_conformer.attention module", "wenet.efficient_conformer.convolution module", "wenet.efficient_conformer.encoder module", "wenet.efficient_conformer.encoder_layer module", "wenet.efficient_conformer.subsampling module", "wenet.squeezeformer package", "wenet.squeezeformer.attention module", "wenet.squeezeformer.conv2d module", "wenet.squeezeformer.convolution module", "wenet.squeezeformer.encoder module", "wenet.squeezeformer.encoder_layer module", "wenet.squeezeformer.positionwise_feed_forward module", "wenet.squeezeformer.subsampling module", "wenet.transducer package", "wenet.transducer.joint module", "wenet.transducer.predictor module", "wenet.transducer.transducer module", "wenet.transformer package", "wenet.transformer.asr_model module", "wenet.transformer.attention module", "wenet.transformer.cmvn module", "wenet.transformer.convolution module", "wenet.transformer.ctc module", "wenet.transformer.decoder module", "wenet.transformer.decoder_layer module", "wenet.transformer.embedding module", "wenet.transformer.encoder module", "wenet.transformer.encoder_layer module", "wenet.transformer.label_smoothing_loss module", "wenet.transformer.positionwise_feed_forward module", "wenet.transformer.subsampling module", "wenet.transformer.swish module", "wenet.utils package", "wenet.utils.checkpoint module", "wenet.utils.cmvn module", "wenet.utils.common module", "wenet.utils.config module", "wenet.utils.ctc_util module", "wenet.utils.executor module", "wenet.utils.file_utils module", "wenet.utils.init_model module", "wenet.utils.mask module", "wenet.utils.scheduler module", "Python Binding", "Reference", "&lt;no title&gt;", "Runtime for WeNet", "How to train models?", "Tutorial on AIShell", "Tutorial on LibriSpeech"], "terms": {"In": [0, 1, 5, 20, 50, 63, 68, 70, 71], "order": [0, 1, 45], "support": [0, 1, 5, 65, 71], "model": [0, 1, 2, 3, 4, 5, 14, 15, 17, 19, 23, 24, 30, 31, 38, 40, 43, 45, 46, 48, 50, 60, 65, 68], "industri": [0, 5, 68], "ten": 0, "million": 0, "hour": [0, 70, 71], "speech": [0, 3, 5, 6, 38, 40, 65, 68, 70, 71], "dataset": [0, 5, 7, 8, 11, 70, 71], "process": [0, 1, 70, 71], "method": [0, 4, 13, 37, 68, 70, 71], "unifi": [0, 5, 45, 49, 68, 71], "ha": [0, 5, 7, 8, 19, 68], "been": [0, 5, 7, 8], "updat": [0, 1, 4, 17], "wenet": [0, 1, 3, 6, 9, 10, 65, 69], "The": [0, 1, 5, 7, 8, 17, 20, 22, 28, 33, 41, 50, 51, 57, 61, 63, 64, 65, 68, 70, 71], "document": 0, "introduc": [0, 65], "from": [0, 1, 5, 17, 19, 20, 38, 40, 50, 61, 68, 70, 71], "follow": [0, 1, 3, 4, 5, 7, 8, 64, 65, 68, 70, 71], "section": [0, 19, 68], "old": [0, 71], "i": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 17, 19, 23, 24, 30, 31, 33, 37, 38, 40, 41, 43, 45, 46, 47, 48, 50, 51, 61, 63, 64, 65, 68, 70, 71], "base": [0, 1, 2, 5, 13, 14, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 63, 64, 68, 70, 71], "pytorch": [0, 4, 7, 8, 45, 68], "": [0, 1, 5, 7, 8, 38, 40, 49, 50, 63, 68, 71], "nativ": 0, "dure": [0, 1, 71], "need": [0, 1, 5, 14, 24, 29, 31, 32, 34, 37, 48, 63], "load": [0, 4], "all": [0, 5, 14, 24, 29, 31, 32, 34, 37, 38, 40, 48, 63, 64, 68], "audio": [0, 34, 70, 71], "path": [0, 1, 4, 38, 40, 61, 70, 71], "correspondingli": 0, "label": [0, 1, 19, 50, 57], "memori": [0, 45, 46, 70, 71], "one": [0, 1, 5, 14, 19, 24, 29, 31, 32, 34, 37, 40, 45, 48, 60, 63, 68, 70, 71], "time": [0, 1, 13, 14, 15, 19, 22, 23, 24, 25, 26, 28, 30, 31, 34, 38, 40, 41, 43, 47, 48, 49, 52, 65, 68, 70, 71], "randomli": [0, 20], "read": [0, 61], "case": [0, 41, 63, 68, 71], "grade": 0, "ultra": 0, "larg": [0, 1, 68, 70, 71], "scale": [0, 22, 28, 41], "eg": 0, "more": [0, 3, 6, 68, 70, 71], "than": [0, 19, 63, 68, 70, 71], "50": [0, 19, 20, 70, 71], "000": 0, "thi": [0, 1, 3, 5, 14, 20, 24, 29, 31, 32, 34, 37, 45, 47, 48, 63, 64, 65, 70, 71], "caus": [0, 70, 71], "fail": [0, 1, 4, 68], "run": [0, 29, 31, 32, 34, 37, 70, 71], "two": [0, 4, 5, 7, 8, 17, 68, 70, 71], "reason": [0, 5, 70, 71], "out": [0, 5, 13, 40, 70, 71], "oom": 0, "physic": 0, "gener": [0, 5, 20, 68], "machin": [0, 70, 71], "difficult": 0, "slow": 0, "down": 0, "perform": [0, 1, 29, 31, 32, 34, 37, 57], "cannot": 0, "us": [0, 1, 3, 4, 7, 8, 13, 14, 15, 19, 20, 23, 24, 25, 30, 31, 32, 38, 40, 43, 45, 46, 48, 49, 63, 65, 68], "file": [0, 1, 17, 19, 61, 65, 70, 71], "cach": [0, 13, 14, 15, 22, 23, 24, 25, 28, 30, 31, 37, 38, 40, 41, 43, 45, 46, 48, 49], "speed": [0, 5, 19], "greatli": 0, "reduc": [0, 7, 8, 44], "inspir": 0, "webdataset": 0, "tfrecord": 0, "redesign": 0, "Its": [0, 47], "core": [0, 5], "idea": 0, "make": [0, 14, 24, 31, 48, 63, 68], "multipl": [0, 40, 65], "small": [0, 14, 24, 31, 48, 68], "1000": 0, "piec": [0, 71], "compress": 0, "packet": 0, "tar": [0, 17, 19], "them": [0, 29, 31, 32, 34, 37, 71], "iterabledataset": [0, 17], "advantag": [0, 68], "onli": [0, 1, 5, 13, 14, 23, 24, 30, 31, 43, 45, 46, 47, 48, 63, 68, 71], "index": [0, 2, 57, 71], "inform": [0, 1], "packag": [0, 2, 10], "maintain": [0, 64], "which": [0, 1, 4, 5, 14, 19, 20, 24, 31, 40, 48, 50, 63, 64, 65, 68, 70, 71], "save": [0, 4, 7, 8, 71], "solv": 0, "problem": [0, 1, 70, 71], "fly": [0, 1, 70, 71], "decompress": 0, "same": [0, 1, 5, 14, 19, 31, 33, 38, 40, 48, 51, 63, 64, 65, 70, 71], "sequenc": [0, 5, 33, 44, 50, 51, 57, 63, 68, 70, 71], "random": [0, 14, 24, 48, 63], "differ": [0, 1, 5, 7, 8, 14, 24, 31, 41, 48, 63, 64, 68], "can": [0, 1, 3, 4, 5, 7, 8, 14, 19, 24, 25, 31, 32, 46, 48, 49, 65, 68, 70, 71], "ensur": [0, 4], "global": [0, 17, 70, 71], "new": [0, 1, 14, 31, 38, 40, 48], "take": [0, 14, 24, 29, 31, 32, 34, 37, 48, 70, 71], "account": [0, 14, 24, 31, 48], "both": [0, 5, 63, 68], "provid": [0, 7, 8, 65, 70, 71], "we": [0, 1, 4, 5, 7, 8, 14, 17, 19, 24, 31, 40, 47, 48, 63, 65, 68, 70, 71], "call": [0, 1, 29, 31, 32, 34, 37, 38, 40, 47, 68, 70, 71], "shown": [0, 5, 71], "figur": 0, "below": [0, 5, 61], "some": [0, 1, 14, 24, 31, 48, 50, 70, 71], "necessari": [0, 1, 63], "explan": 0, "about": [0, 70, 71], "abov": [0, 1, 3, 65], "mode": [0, 29, 63, 70, 71], "local": [0, 5, 19, 70, 71], "requir": [0, 3, 4, 5, 7, 8, 14, 24, 31, 38, 40, 47, 48, 65, 68, 70, 71], "must": [0, 15, 25, 49, 70, 71], "sort": [0, 16, 19, 71], "kaldi": [0, 1, 5, 71], "style": [0, 5, 14, 24, 31, 48, 70, 71], "wav": [0, 1, 5, 19, 65], "scp": [0, 5, 70, 71], "text": [0, 1, 5, 19, 38, 40, 70, 71], "It": [0, 1, 5, 68, 70, 71], "befor": [0, 1, 4, 19, 25, 32, 40, 45, 46, 49, 71], "share": [0, 68, 70, 71], "network": [0, 7, 8, 14, 24, 31, 48], "cloud": 0, "storag": 0, "txt": [0, 1, 3, 5, 19, 65, 70, 71], "ar": [0, 1, 5, 8, 14, 20, 24, 31, 33, 48, 50, 51, 65, 68, 70, 71], "store": 0, "singl": [0, 1, 46], "also": [0, 1, 5, 65, 68, 70, 71], "adopt": [0, 1, 68], "implement": [0, 14, 24, 31, 48], "practic": [0, 1, 68], "flexibl": 0, "easier": 0, "expand": [0, 19], "debug": 0, "exampl": [0, 1, 5, 7, 8, 57, 63, 65, 70, 71], "def": 0, "read_dataset": 0, "filenam": 0, "batch_siz": [0, 19, 37, 63, 70, 71], "tf": 0, "tfrecorddataset": 0, "map": [0, 70, 71], "_parse_image_funct": 0, "num_parallel_cal": 0, "experiment": 0, "autotun": 0, "shuffl": [0, 16, 17, 19], "500": [0, 19, 71], "batch": [0, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 28, 30, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 63], "drop_remaind": 0, "true": [0, 1, 13, 14, 17, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 65, 70, 71], "repeat": 0, "prefetch": 0, "buffer_s": 0, "return": [0, 1, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 63], "refer": [0, 2, 4, 13, 65, 70, 71], "dataflow": 0, "includ": [0, 1, 5, 45, 65], "modul": [0, 2, 4, 12, 16, 21, 27, 35, 39, 54, 68], "token": [0, 1, 16, 19, 45, 57], "convert": 0, "specifi": [0, 1, 65, 71], "unit": [0, 1, 5, 13, 19, 33, 45, 51, 65, 70, 71], "char": [0, 5, 19, 70, 71], "bpe": [0, 5, 17, 19, 71], "filter": [0, 16, 19, 34], "unqualifi": 0, "resampl": [0, 16, 19], "option": [0, 3, 5, 15, 19, 20, 63, 65], "comput": [0, 1, 14, 15, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 37, 41, 43, 46, 47, 48, 49, 50, 63, 68, 70, 71], "_": [0, 1, 5, 65, 68, 70, 71], "fbank": [0, 19], "featur": [0, 15, 19, 22, 25, 28, 41, 42, 46, 49], "extract": [0, 19], "spec": [0, 19], "augment": [0, 19], "enhanc": 0, "disrupt": 0, "organ": [0, 5, 70, 71], "pad": [0, 13, 14, 15, 16, 19, 23, 24, 25, 29, 30, 37, 40, 41, 43, 44, 45, 48, 49, 50, 57, 63], "what": [0, 4, 5], "There": [0, 5], "sever": [0, 14, 24, 31, 47, 48, 68, 70, 71], "paramet": [0, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 61, 63, 64, 65, 70, 71], "note": [0, 3, 64, 65], "first": [0, 5, 17, 40, 65, 68], "buffer": [0, 19], "size": [0, 7, 8, 13, 14, 15, 19, 22, 23, 24, 25, 28, 30, 31, 32, 34, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 63, 68, 70, 71], "recommend": 0, "larger": 0, "number": [0, 14, 19, 20, 22, 24, 28, 33, 41, 45, 48, 50, 51, 63, 64, 70, 71], "contain": [0, 1, 45, 63, 65, 70, 71], "each": [0, 1, 20, 25, 32, 33, 40, 45, 46, 49, 51, 70, 71], "equival": 0, "between": [0, 1, 15, 41, 50, 70], "increas": [0, 47], "you": [0, 3, 4, 5, 7, 8, 65, 68, 70, 71], "set": [0, 14, 20, 24, 38, 40, 48, 63, 68, 70, 71], "1500": 0, "accord": [0, 1, 5, 17, 19], "frame": [0, 1, 5, 19, 44, 68], "oper": [0, 19, 29], "veri": [0, 5, 14, 24, 31, 48, 65, 68], "import": [0, 65], "improv": [0, 1], "dataload": [0, 70], "pre": 0, "granular": 0, "final": [0, 1, 5, 65, 68, 71], "default": [0, 14, 20, 24, 48, 63], "2": [0, 1, 5, 6, 13, 14, 15, 19, 22, 24, 25, 26, 28, 31, 34, 37, 38, 40, 41, 45, 48, 49, 50, 57, 63, 65, 68], "due": 0, "exist": 0, "mai": [0, 1, 5, 63, 70, 71], "alreadi": [0, 40, 70, 71], "so": [0, 5, 19, 40, 47, 57, 65, 68, 70, 71], "real": [0, 63], "when": [0, 1, 4, 19, 41, 63, 65, 68, 70, 71], "insuffici": 0, "next": [0, 1, 14, 24, 31, 38, 40, 48], "fill": 0, "At": 0, "block": [0, 25, 32, 41, 45, 46, 49, 63], "word": [0, 1, 5, 40, 65, 68, 70, 71], "part": [0, 5, 17, 22, 28, 41, 50, 63, 68, 71], "becaus": 0, "previou": [0, 68], "still": 0, "therefor": [0, 5, 68], "avoid": [0, 1, 63, 68], "present": 0, "have": [0, 1, 3, 5, 17, 63, 70, 71], "verifi": 0, "accuraci": [0, 1, 57, 68], "200": [0, 19], "10000": [0, 19, 47], "respect": 0, "cer": 0, "4": [0, 5, 7, 8, 14, 20, 24, 26, 31, 34, 41, 45, 48, 52, 57, 63], "61": 0, "63": 0, "67": 0, "espnet": [0, 71], "similar": [0, 19], "structur": [0, 5, 8, 70, 71], "configur": 0, "thei": [0, 1, 70, 71], "achiev": [0, 68], "recognit": [0, 1, 3, 5, 6, 65, 68, 70, 71], "rate": [0, 14, 19, 20, 22, 24, 25, 26, 28, 31, 32, 33, 41, 45, 46, 47, 48, 49, 50, 51, 52, 64, 68, 70, 71], "show": [0, 5, 68, 70, 71], "correct": 0, "And": [0, 3, 5, 7, 8, 19], "observ": 0, "util": [0, 11, 71], "gpu": [0, 70, 71], "80": [0, 19, 20, 31, 34], "90": 0, "indic": [0, 1, 63, 70], "effici": [0, 15], "high": [0, 64], "For": [0, 5, 7, 8, 47, 65, 68, 70, 71], "detail": [0, 4, 5, 65, 70, 71], "pleas": [0, 3, 5, 7, 65, 68, 70, 71], "http": [0, 3, 4, 5, 7, 8, 13, 19, 22, 28, 37, 41, 47, 65, 71], "github": [0, 3, 5, 65, 70, 71], "com": [0, 3, 5, 65], "e2": [0, 3, 5, 65, 71], "blob": [0, 5, 65], "main": [0, 5, 65], "s0": [0, 70, 71], "sh": [0, 5, 70, 71], "prepar": [0, 5], "three": [0, 14, 24, 31, 48], "relat": [0, 5, 71], "script": [0, 4, 70, 71], "py": [0, 4, 5, 65, 68, 70, 71], "train_data": [0, 71], "cv_data": [0, 71], "test_data": [0, 71], "list": [0, 1, 14, 17, 19, 20, 24, 31, 37, 38, 40, 45, 57, 65, 68, 70, 71], "data_typ": [0, 17, 71], "symbol_t": [0, 17, 19, 40, 71], "python": [0, 2, 4, 7, 8, 66, 68, 71], "bin": [0, 4, 70, 71], "gpu_id": [0, 71], "config": [0, 54, 57, 70, 71], "train_config": [0, 71], "dict": [0, 5, 20, 38, 40, 70, 71], "feat_dir": 0, "train_set": [0, 71], "dev": [0, 71], "If": [0, 1, 3, 4, 22, 28, 41, 46, 63, 65, 70, 71], "type": [0, 4, 13, 14, 15, 17, 22, 23, 24, 25, 26, 28, 30, 31, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 63, 68, 70, 71], "format": [0, 5, 61], "kei": [0, 14, 15, 19, 22, 24, 25, 28, 31, 38, 40, 41, 48, 49, 70, 71], "bac009s0002w0122": [0, 70], "export": [0, 1, 4, 7, 8, 24, 38, 40, 68], "asr": [0, 1, 2, 65, 68, 70, 71], "openslr": [0, 7, 8, 70, 71], "33": [0, 70], "data_aishel": [0, 5, 70], "s0002": [0, 70], "\u800c\u5bf9\u697c\u5e02\u6210\u4ea4\u6291\u5236\u4f5c\u7528\u6700\u5927\u7684\u9650\u8d2d": [0, 70], "bac009s0002w0123": [0, 70], "\u4e5f\u6210\u4e3a\u5730\u65b9\u653f\u5e9c\u7684\u773c\u4e2d\u9489": [0, 70], "bac009s0002w0124": [0, 70], "\u81ea\u516d\u6708\u5e95\u547c\u548c\u6d69\u7279\u5e02\u7387\u5148\u5ba3\u5e03\u53d6\u6d88\u9650\u8d2d\u540e": [0, 70], "line": [0, 1, 19, 70, 71], "json": [0, 19, 70, 71], "serial": 0, "string": 0, "field": [0, 70, 71], "1": [0, 1, 5, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 57, 63, 64, 65, 68], "maryland": 0, "binbinzhang": 0, "code": [0, 1, 4, 5, 7, 8, 68, 71], "s3": 0, "raw_wav": [0, 70], "shards_000000000": 0, "gz": [0, 71], "shards_000000001": 0, "shards_000000002": 0, "oss": 0, "examplebucket": 0, "cn": [0, 7, 8], "hangzhou": 0, "aliyunc": 0, "exampledir": 0, "q1": 0, "how": [0, 1, 2, 4, 68, 70, 71], "distribut": [0, 50], "partit": [0, 17], "rank": [0, 17, 71], "num": [0, 71], "worker": 0, "segment": 0, "class": [0, 5, 13, 14, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 64], "distributedsampl": [0, 16, 17], "__init__": 0, "self": [0, 15, 24, 25, 32, 38, 41, 45, 46, 49, 50], "epoch": [0, 17, 60, 70, 71], "set_epoch": [0, 17], "sampl": [0, 17, 19, 20], "rang": [0, 5, 65], "len": [0, 57, 65], "world_siz": [0, 17, 71], "worker_id": 0, "num_work": [0, 17, 71], "q2": 0, "deal": 0, "unbalanc": 0, "join": [0, 4], "handl": [0, 68], "imbal": 0, "alloc": 0, "applic": [1, 3, 5], "effect": 1, "commonli": 1, "better": [1, 68, 70, 71], "uniqu": 1, "low": 1, "contextu": [1, 65], "inject": 1, "prior": 1, "knowledg": 1, "an": [1, 2, 5, 53, 63, 65, 68, 70, 71], "system": [1, 68, 71], "infer": [1, 24, 37, 68, 70, 71], "user": [1, 7, 8], "favorit": 1, "song": 1, "contact": [1, 5], "app": 1, "locat": 1, "convent": [1, 50], "build": [1, 2, 5, 71], "n": [1, 3, 5, 20, 65, 68, 70, 71], "gram": [1, 5, 71], "finit": 1, "state": [1, 44], "transduc": [1, 11, 57], "fst": [1, 5, 65, 71], "phrase": 1, "compos": [1, 5], "decod": [1, 5, 14, 19, 24, 31, 38, 39, 40, 41, 46, 48, 63, 65, 68, 70, 71], "help": 1, "bia": [1, 23, 29, 30, 37, 43], "result": [1, 7, 8, 14, 24, 31, 38, 40, 48, 63, 65, 68, 70, 71], "toward": 1, "thu": 1, "certain": 1, "scenario": [1, 5, 47, 68], "score": [1, 22, 28, 40, 41, 45, 63, 65, 68], "p": [1, 5, 22, 36, 71], "c": [1, 4, 38, 40, 68, 70, 71], "mathbf": 1, "y": [1, 45, 68], "interpol": 1, "x": [1, 13, 14, 15, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 57, 63, 68, 71], "shallow": 1, "fusion": 1, "mathrm": 1, "arg": [1, 4, 17, 19, 53, 57, 60, 68], "max": [1, 19, 20, 63], "log": [1, 5, 40, 44, 57, 68], "lambda": 1, "where": [1, 14, 22, 24, 26, 28, 31, 38, 40, 41, 48, 52, 68], "tunabl": [1, 70, 71], "hyperparamet": 1, "control": [1, 14, 24, 31, 48, 65], "much": [1, 4, 68], "lm": [1, 2, 3, 9, 65], "influenc": 1, "overal": [1, 68], "want": [1, 3, 4, 70, 71], "cat": [1, 71], "charact": [1, 44, 70], "0": [1, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 57, 63, 64, 65], "25": [1, 19], "construct": [1, 17, 53], "correspond": [1, 5, 7, 8, 40, 47], "match": 1, "reward": 1, "obtain": 1, "artifici": 1, "boost": [1, 70, 71], "earli": 1, "do": [1, 4, 5, 14, 17, 19, 24, 31, 34, 38, 40, 48, 63, 70, 71], "entir": 1, "add": [1, 36, 47, 57, 64], "special": [1, 14, 24, 31, 48], "failur": 1, "arc": 1, "remov": 1, "record": [1, 70, 71], "easili": [1, 68, 70, 71], "determin": 1, "boundari": 1, "hot": 1, "That": 1, "after": [1, 14, 17, 19, 24, 25, 32, 45, 46, 48, 49, 64, 70, 71], "succe": 1, "other": [1, 5, 46, 50, 65, 68, 70, 71], "start": [1, 47, 70, 71], "int": [1, 13, 14, 15, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 63, 64, 65], "contextgraph": 1, "getnextst": 1, "cur_stat": 1, "word_id": 1, "float": [1, 13, 14, 15, 19, 20, 22, 24, 25, 26, 28, 31, 32, 33, 34, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 64, 65], "bool": [1, 13, 14, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 65], "is_start_boundari": 1, "is_end_boundari": 1, "next_stat": 1, "travers": 1, "current": [1, 14, 24, 31, 38, 40, 41, 48, 63, 68], "arciter": 1, "stdfst": 1, "aiter": 1, "graph_": 1, "done": [1, 71], "const": 1, "stdarc": 1, "valu": [1, 14, 15, 20, 22, 24, 25, 28, 31, 37, 38, 40, 41, 45, 48, 49, 50, 57, 63], "ilabel": 1, "backoff": 1, "might": 1, "cover": 1, "weight": [1, 15, 22, 28, 29, 38, 40, 41], "els": [1, 65], "nextstat": 1, "check": [1, 4, 70, 71], "whether": [1, 5, 17, 34, 38, 40, 45, 63, 65], "One": 1, "break": 1, "append": 1, "output": [1, 14, 15, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 37, 38, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 65, 68, 70, 71], "chang": [1, 5, 20, 68, 70, 71], "function": [1, 4, 5, 20, 29, 31, 32, 33, 34, 37, 47, 51, 53, 57, 63, 70, 71], "end": [1, 2, 5, 6, 65, 68, 70, 71], "posit": [1, 15, 20, 22, 24, 25, 26, 28, 33, 34, 41, 45, 47, 48, 49, 51, 52], "insert": 1, "tag": 1, "bag": 1, "lattic": 1, "faster": [1, 68], "onlin": 1, "modifi": [1, 4, 5, 34], "cc": [1, 5, 7, 8, 68], "tlg": [1, 5, 65, 71], "input": [1, 14, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 63, 68, 70, 71], "decid": 1, "processemit": 1, "processnonemit": 1, "elem": 1, "e_next": 1, "findoraddtoken": 1, "tot_cost": 1, "tok": 1, "null": 1, "begin": [1, 40, 71], "fals": [1, 14, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 65, 70, 71], "context_scor": [1, 65], "context_graph_": 1, "olabel": 1, "val": 1, "context_st": 1, "graph_cost": 1, "forwardlink": 1, "next_tok": 1, "put": [1, 5], "head": [1, 14, 15, 22, 24, 25, 28, 31, 38, 40, 41, 45, 48, 49], "link": [1, 8], "forwardlinkt": 1, "ac_cost": 1, "accumul": [1, 5], "lead": 1, "cost": [1, 68, 70, 71], "too": 1, "void": 1, "latticefasterdecodertpl": 1, "pruneforwardlink": 1, "int32": [1, 57], "frame_plus_on": 1, "extra_costs_chang": 1, "links_prun": 1, "basefloat": 1, "delta": 1, "link_extra_cost": 1, "extra_cost": 1, "acoustic_cost": 1, "bracket": 1, "mean": [1, 13, 14, 15, 22, 23, 24, 25, 28, 30, 31, 38, 40, 41, 42, 43, 48, 49, 50, 61, 63, 65, 70, 71], "link_exta_cost": 1, "best": [1, 5, 38, 40, 65, 68, 70, 71], "through": [1, 70, 71], "sourc": [1, 13, 14, 15, 17, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 63, 64], "destin": 1, "context_path": 1, "split": [1, 5], "symbol": [1, 40, 61, 65, 68, 70, 71], "tabl": [1, 65, 67], "oov": 1, "cd": [1, 3, 65, 70, 71], "home": [1, 70], "runtim": [1, 2, 3, 5, 7, 8, 65], "libtorch": [1, 3, 65, 68, 70, 71], "glog_logtostderr": 1, "glog_v": 1, "wav_path": [1, 70, 71], "docker_resourc": 1, "test": [1, 5], "model_dir": [1, 4, 65, 71], "decoder_main": 1, "chunk_siz": [1, 14, 22, 24, 28, 31, 38, 40, 41, 48, 63], "model_path": 1, "zip": [1, 4, 5, 7, 8, 65, 71], "3": [1, 3, 5, 19, 22, 24, 38, 41, 57, 63, 65, 68], "unit_path": 1, "tee": 1, "tansform": 2, "toolkit": [2, 6, 65], "instal": [2, 70, 71], "prebuilt": 2, "train": [2, 4, 5, 7, 8, 13, 14, 15, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 63, 64, 68], "deploy": 2, "tutori": [2, 69], "librispeech": [2, 5, 7, 8, 69], "aishel": [2, 5, 7, 8, 69], "pretrain": [2, 65, 69, 71], "big": [2, 69, 70, 71], "data": [2, 5, 17, 19, 50, 69], "uio": [2, 69], "product": [2, 4, 5, 6, 22, 28, 41, 65], "context": [2, 9, 13, 14, 22, 23, 24, 28, 30, 31, 41, 43, 48, 63, 65, 68], "bias": [2, 9, 65], "jit": [2, 7, 8, 9, 68], "bind": [2, 66], "paper": [2, 22, 28, 41, 66, 70, 71], "api": [2, 45, 49, 65, 66], "search": [2, 5, 38, 40, 68, 70, 71], "page": 2, "just": [3, 5, 14, 24, 31, 47, 48, 49, 68, 70, 71], "pip": 3, "6": [3, 24, 45, 48, 52, 57, 65], "pip3": [3, 65], "wenetruntim": [3, 65], "see": [3, 4, 5, 7, 8, 38, 41, 47, 63, 68, 70, 71], "doc": [3, 65], "usag": 3, "clone": [3, 65], "repo": 3, "git": [3, 65], "conda": 3, "io": [3, 4], "en": [3, 4, 7, 8, 65, 71], "latest": [3, 4], "miniconda": 3, "html": [3, 4], "creat": [3, 63], "env": 3, "8": [3, 5, 20, 52, 57, 70, 71], "activ": [3, 23, 30, 33, 36, 37, 40, 43, 44, 51, 53, 57, 68], "r": 3, "x86": [3, 7, 8, 68], "languag": [3, 4, 5, 7, 8, 65, 70, 71], "otherwis": [3, 71], "ignor": [3, 29, 31, 32, 34, 37, 50, 57, 63], "step": [3, 37, 45, 63, 64, 70, 71], "cmake": 3, "14": 3, "mkdir": [3, 5, 71], "dgraph_tool": 3, "ON": [3, 71], "platform": 3, "o": [3, 4], "our": [4, 7, 8, 68, 71], "directli": [4, 5, 7, 8, 68], "torch": [4, 13, 14, 15, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 63, 65, 67, 68, 70, 71], "essenti": 4, "deploi": 4, "resourc": [4, 71], "introduct": [4, 68], "TO": [4, 71], "torchscript": [4, 65], "A": [4, 5, 20, 63, 71], "IN": [4, 71], "deep": 4, "dive": 4, "research": [4, 5], "To": [4, 5, 63], "try": [4, 70, 71], "stage": [4, 17, 64], "should": [4, 14, 19, 24, 29, 31, 32, 34, 37, 48, 50, 63, 64, 68], "satisfi": 4, "script_model": 4, "init": [4, 71], "principl": [4, 5], "taken": [4, 14, 24, 31, 48, 50], "consider": 4, "contribut": 4, "especi": [4, 5, 19], "subclass": [4, 29, 31, 32, 34, 37], "nn": [4, 14, 24, 25, 31, 32, 33, 34, 45, 46, 48, 49, 51, 52, 70, 71], "forward": [4, 13, 14, 15, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 68], "know": 4, "allow": [4, 63], "disallow": 4, "tensor": [4, 13, 14, 15, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 63], "unsupport": 4, "attribut": 4, "coverag": 4, "explicit": 4, "possibl": [4, 71], "forc": 4, "typeguard": [4, 67], "readthedoc": 4, "userguid": 4, "statist": [5, 70, 71], "wfst": 5, "framework": [5, 68], "custom": [5, 52, 70, 71], "why": 5, "question": 5, "mani": 5, "peopl": [5, 70, 71], "ask": [5, 70, 71], "now": 5, "rnn": [5, 37], "transform": [5, 11, 14, 22, 24, 28, 31, 38, 57, 68, 70, 71], "full": [5, 14, 24, 38, 40, 48, 63, 71], "swing": 5, "doe": [5, 49, 70, 71], "go": [5, 70, 71], "backward": 5, "simpl": [5, 68, 70, 71], "matur": 5, "complet": 5, "tool": [5, 65, 70, 71], "ani": [5, 61, 70, 71], "amount": 5, "corpu": [5, 71], "fast": [5, 68], "hotfix": 5, "easi": 5, "wide": 5, "actual": [5, 14, 24, 31, 38, 40, 48, 70, 71], "second": [5, 17, 65], "sinc": [5, 7, 8, 29, 31, 32, 34, 37, 68], "work": [5, 14, 24, 31, 48, 63, 68, 70, 71], "hard": 5, "abandon": 5, "tradit": [5, 68], "complex": 5, "technologi": 5, "back": 5, "standard": [5, 15, 50, 68], "power": 5, "solut": 5, "bug": 5, "fix": [5, 14, 24, 38, 40, 48, 63], "replac": 5, "person": 5, "like": [5, 14, 20, 24, 31, 48, 61, 70, 71], "goal": 5, "readi": [5, 65], "prioriti": 5, "draw": 5, "pure": 5, "As": 5, "describ": [5, 37, 68], "choos": 5, "your": [5, 70, 71], "whole": [5, 14, 24, 31, 47, 48, 68, 70, 71], "bellow": 5, "pictur": [5, 68], "wai": [5, 47, 68], "without": [5, 52, 70], "ctc": [5, 38, 39, 40, 68, 70, 71], "prefix": [5, 19, 38, 40, 68, 70, 71], "beam": [5, 38, 40, 68, 70, 71], "With": [5, 68], "graph": 5, "t": [5, 14, 24, 31, 36, 41, 48, 65, 68], "lexicon": [5, 71], "l": [5, 33, 41, 51, 63, 71], "g": [5, 20, 50, 70, 71], "typic": [5, 14, 24, 31, 48, 68, 71], "chines": [5, 7, 65], "english": [5, 17, 19, 65, 71], "its": [5, 63], "\u6211\u4eec": 5, "\u6211": 5, "\u4eec": 5, "appl": 5, "five": 5, "letter": 5, "e": [5, 20, 36, 50, 68, 70, 71], "phonem": 5, "pronunci": 5, "purpos": 5, "name": [5, 70, 71], "compil": 5, "represent": 5, "viterbi": 5, "algorithm": [5, 70, 71], "eas": 5, "keep": [5, 64], "independ": 5, "migrat": 5, "directori": [5, 65, 71], "minim": [5, 19], "remain": 5, "origin": [5, 14, 20, 31, 38, 40, 48, 70, 71], "glog": 5, "meet": [5, 70, 71], "lint": 5, "wrap": 5, "latticefasterdecod": 5, "blank": [5, 38, 57, 70, 71], "skip": [5, 70, 71], "up": [5, 64], "addit": [5, 25, 49, 68], "arpa2fst": 5, "fstdeterminizestar": 5, "fsttablecompos": 5, "fstminimizeencod": 5, "built": 5, "box": 5, "get": [5, 20, 40, 47, 65, 68, 70, 71], "consist": 5, "gain": [5, 20], "10": [5, 19, 40, 57, 71], "aishell2": [5, 7, 8], "here": [5, 7, 8, 14, 24, 31, 38, 40, 48, 49, 68, 70, 71], "dictionari": 5, "7": [5, 38, 57, 70], "unit_fil": [5, 71], "cp": [5, 71], "prepare_dict": [5, 71], "resource_aishel": 5, "filter_scp": 5, "pl": 5, "transcript": [5, 70, 71], "aishell_transcript_v0": 5, "aishell_train_lm": 5, "compile_lexicon_token_fst": [5, 71], "tmp": [5, 71], "lang": [5, 65, 71], "make_tlg": [5, 71], "lang_test": [5, 71], "exit": [5, 71], "nj": [5, 71], "16": [5, 19, 71], "15": [5, 20, 23, 24, 30, 43, 48], "lattice_beam": [5, 71], "5": [5, 14, 15, 31, 34, 38, 40, 57, 63, 64, 65], "max_act": [5, 71], "7000": [5, 71], "blank_skip_thresh": [5, 71], "98": [5, 71], "ctc_weight": [5, 38, 40, 71], "rescoring_weight": [5, 71], "fst_path": [5, 71], "dict_path": [5, 71], "dir": [5, 70, 71], "lm_with_runtim": 5, "orient": 6, "stream": [6, 14, 19, 24, 31, 38, 40, 47, 48, 63, 68], "non": [6, 7, 61, 63, 68, 71], "accept": 6, "interspeech": 6, "2021": 6, "2022": 6, "facilit": [7, 8], "checkpoint": [7, 8, 54, 70, 71], "suffix": [7, 8], "pt": [7, 8, 70, 71], "reproduc": [7, 8], "publish": [7, 8], "continu": [7, 8, 65, 68, 70, 71], "android": [7, 8, 68], "quantiz": [7, 8], "traffic": [7, 8], "BY": [7, 8], "org": [7, 8, 13, 19, 22, 28, 37, 41, 47, 71], "12": [7, 8, 14, 31, 71], "visit": 7, "download": [7, 8, 65], "contributor": [7, 8], "conform": [7, 8, 14, 22, 23, 24, 25, 30, 31, 38, 40, 43, 48, 49, 53, 68, 70, 71], "gigaspeech": [7, 8, 70, 71], "multi_cn": [7, 8], "wenetspeech": [7, 8, 70, 71], "given": [8, 65, 71], "subpackag": 10, "branchform": 11, "submodul": 11, "efficient_conform": 11, "squeezeform": 11, "cgmlp": [12, 15], "convolutionalgatingmlp": [12, 13, 15], "convolutionalspatialgatingunit": [12, 13], "encod": [12, 15, 21, 22, 25, 26, 27, 28, 32, 34, 38, 39, 40, 41, 45, 46, 47, 49, 52, 63, 68, 70, 71], "branchformerencod": [12, 14], "encoder_lay": [12, 21, 27, 39], "branchformerencoderlay": [12, 15], "mlp": 13, "convolut": [13, 14, 15, 21, 24, 25, 26, 27, 31, 32, 34, 39, 48, 49, 52, 63], "gate": 13, "definit": [13, 14, 15, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 41, 43, 45, 46, 48, 49, 51, 52], "openreview": 13, "net": 13, "forum": 13, "id": [13, 40, 44, 45, 50, 57, 68, 70, 71], "ra": 13, "zvvzlyii": 13, "arxiv": [13, 19, 22, 28, 37, 41, 47], "ab": [13, 19, 22, 28, 41, 47, 71], "2105": 13, "08050": 13, "linear_unit": [13, 24, 45, 48], "kernel_s": [13, 23, 29, 30, 34, 43], "dropout_r": [13, 14, 15, 22, 24, 25, 26, 28, 32, 33, 41, 44, 45, 46, 47, 48, 49, 51, 52], "use_linear_after_conv": [13, 14], "gate_activ": [13, 14], "str": [13, 14, 15, 17, 19, 23, 24, 29, 30, 31, 36, 37, 38, 40, 43, 45, 48, 57, 63, 65], "mask": [13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 34, 41, 43, 45, 46, 48, 49, 50, 52, 54], "tupl": [13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 52, 57], "channel": [13, 23, 30, 34, 43], "mask_pad": [13, 15, 23, 25, 30, 32, 34, 43, 49], "fake": [13, 15, 22, 23, 25, 28, 30, 41, 43, 49], "Not": 13, "yet": 13, "left": [13, 14, 23, 24, 30, 31, 40, 43, 45, 48, 63, 68], "causal": [13, 14, 23, 24, 30, 31, 43, 48, 68], "cache_t": [13, 22, 23, 28, 30, 41, 43], "mea": [13, 23, 30, 43], "spatial": 13, "csgu": 13, "espnet_initialization_fn": 13, "input_s": [14, 24, 31, 34, 48], "output_s": [14, 24, 31, 37, 48], "256": [14, 24, 31, 34, 48], "use_attn": 14, "attention_head": [14, 24, 31, 45, 48], "attention_layer_typ": 14, "rel_selfattn": [14, 48], "pos_enc_layer_typ": [14, 24, 31, 48], "rel_po": [14, 24, 31, 48], "use_cgmlp": 14, "cgmlp_linear_unit": 14, "2048": [14, 24, 45, 48], "cgmlp_conv_kernel": 14, "31": [14, 31], "ident": 14, "merge_method": [14, 15], "concat": [14, 15], "cgmlp_weight": [14, 15], "attn_branch_drop_r": [14, 15], "num_block": [14, 24, 31, 45, 48], "positional_dropout_r": [14, 24, 45, 48], "attention_dropout_r": [14, 24, 31, 48], "input_lay": [14, 24, 45, 48], "none": [14, 15, 17, 19, 20, 22, 24, 25, 29, 31, 32, 37, 38, 40, 45, 46, 47, 48, 49, 61, 64], "conv2d": [14, 24, 27, 48], "padding_idx": [14, 50], "stochastic_depth_r": [14, 15], "static_chunk_s": [14, 24, 31, 48, 63], "use_dynamic_chunk": [14, 24, 31, 48, 63], "global_cmvn": [14, 24, 31, 48, 71], "use_dynamic_left_chunk": [14, 24, 31, 48, 63], "ilen": 14, "decoding_chunk_s": [14, 24, 31, 38, 40, 48, 63, 71], "num_decoding_left_chunk": [14, 22, 24, 28, 31, 38, 40, 41, 48, 63], "calcul": [14, 44, 50, 57, 70, 71], "propag": 14, "b": [14, 24, 31, 33, 36, 37, 38, 40, 44, 47, 48, 51, 57, 63], "d": [14, 24, 33, 44, 48, 51, 57, 63, 71], "length": [14, 19, 24, 26, 34, 38, 40, 44, 45, 47, 48, 50, 52, 63], "chunk": [14, 24, 31, 38, 40, 48, 63, 68, 71], "dynam": [14, 19, 24, 31, 38, 40, 48, 63, 71], "subsampl": [14, 21, 24, 27, 31, 38, 39, 40, 48, 68], "subsample_r": [14, 24, 31, 38, 40, 48], "forward_chunk": [14, 24, 31, 48], "offset": [14, 24, 26, 31, 34, 38, 40, 47, 48, 52], "required_cache_s": [14, 24, 31, 38, 40, 48], "att_cach": [14, 15, 24, 25, 31, 32, 38, 40, 48, 49], "cnn_cach": [14, 15, 24, 25, 31, 32, 38, 40, 48, 49], "att_mask": [14, 24, 31, 48], "dtype": [14, 15, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 41, 43, 45, 48, 49, 57, 63], "shape": [14, 20, 24, 31, 38, 40, 41, 45, 47, 48, 50, 63], "mel": [14, 31, 38, 40, 48], "dim": [14, 24, 31, 33, 37, 38, 40, 45, 47, 48, 51], "right_context": [14, 31, 38, 40, 48, 68], "stamp": [14, 24, 31, 38, 40, 48, 68], "compuat": [14, 24, 31, 38, 40, 48], "histori": [14, 24, 31, 37, 38, 40, 48, 68], "attent": [14, 15, 21, 24, 25, 27, 31, 32, 38, 39, 40, 45, 46, 47, 48, 49, 63, 68, 70, 71], "elay": [14, 24, 31, 38, 40, 48], "cache_t1": [14, 15, 24, 25, 31, 38, 40, 48, 49], "d_k": [14, 15, 22, 24, 25, 28, 31, 38, 40, 41, 48, 49], "hidden": [14, 24, 31, 33, 38, 40, 44, 45, 48, 51], "cnn_modul": [14, 24, 31, 38, 40, 48], "cache_t2": [14, 15, 24, 25, 31, 38, 40, 48, 49], "cnn": [14, 24, 31, 38, 40, 48, 68], "lorder": [14, 24, 31, 38, 40, 48], "depend": [14, 31, 38, 40, 48, 63, 65, 70, 71], "forward_chunk_by_chunk": [14, 24, 31, 48], "fashion": [14, 24, 31, 38, 40, 47, 48], "pai": [14, 24, 31, 48], "thing": [14, 24, 31, 48, 65], "layer": [14, 15, 22, 24, 25, 26, 28, 31, 32, 33, 37, 41, 45, 46, 48, 49, 51, 52, 68], "howev": [14, 24, 31, 48, 68], "don": [14, 24, 31, 48], "right": [14, 24, 31, 40, 45, 48, 68], "overlap": [14, 24, 31, 48, 68], "instead": [14, 24, 29, 31, 32, 34, 37, 48], "even": [14, 24, 31, 48], "though": [14, 24, 31, 48], "wast": [14, 24, 31, 48], "fraction": [14, 24, 31, 48, 68], "covolut": [14, 24, 31, 48], "tricki": [14, 24, 31, 48], "complic": [14, 24, 31, 48], "sequenti": [14, 24, 31, 48], "stack": [14, 24, 31, 48], "rewrit": [14, 24, 31, 48], "prefer": [14, 24, 31, 48], "max_len": [14, 24, 31, 38, 40, 42, 47, 48, 63], "attn": [15, 38], "dimens": [15, 25, 26, 32, 34, 45, 46, 47, 49, 52, 71], "dropout": [15, 22, 25, 26, 28, 31, 32, 33, 37, 41, 45, 46, 47, 49, 51, 52], "probabl": [15, 20, 38, 50], "learned_av": 15, "fixed_av": 15, "branch": [15, 63], "drop": [15, 19], "stochast": 15, "depth": 15, "pos_emb": [15, 22, 25, 28, 32, 41, 49], "union": 15, "conv": [15, 25, 34, 49], "cnn_cahc": [15, 25, 49], "datalist": [16, 17], "processor": [16, 17], "kaldi_io": 16, "compute_fbank": [16, 19], "compute_mfcc": [16, 19], "dynamic_batch": [16, 19], "parse_raw": [16, 19], "spec_aug": [16, 19], "spec_sub": [16, 19], "spec_trim": [16, 19], "speed_perturb": [16, 19], "static_batch": [16, 19], "tar_file_and_group": [16, 19], "url_open": [16, 19], "wav_distort": 16, "amp2db": [16, 20], "db2amp": [16, 20], "distort": [16, 20], "distort_chain": [16, 20], "distort_wav_conf": [16, 20], "distort_wav_conf_and_sav": [16, 20], "generate_amp_mask": [16, 20], "make_amp_mask": [16, 20], "make_fence_distort": [16, 20], "make_gain_db": [16, 20], "make_jag_distort": [16, 20], "make_max_distort": [16, 20], "make_poly_distort": [16, 20], "make_quad_distort": [16, 20], "data_list_fil": 17, "conf": [17, 20, 70, 71], "bpe_model": [17, 19], "non_lang_sym": [17, 19], "argument": [17, 25, 32, 46, 49, 64], "shard": [17, 70, 71], "raw": [17, 70, 71], "level": [17, 20, 47, 65, 68], "term": 17, "object": [17, 53, 60], "f": [17, 20, 71], "kw": 17, "appli": [17, 19, 20, 40, 41, 44, 45, 47, 50, 63, 70, 71], "batch_typ": 19, "static": [19, 63], "max_frames_in_batch": 19, "12000": 19, "wrapper": 19, "num_mel_bin": 19, "23": 19, "frame_length": 19, "frame_shift": 19, "dither": 19, "iter": 19, "sample_r": 19, "feat": [19, 45], "num_cep": 19, "40": 19, "high_freq": 19, "low_freq": 19, "20": 19, "mfcc": 19, "until": 19, "total": [19, 64, 71], "reach": 19, "max_fram": 19, "max_length": 19, "10240": 19, "min_length": 19, "token_max_length": 19, "token_min_length": 19, "min_output_input_ratio": 19, "0005": 19, "max_output_input_ratio": 19, "inplac": 19, "utter": [19, 47, 70, 71], "greater": [19, 63, 70, 71], "10m": 19, "less": [19, 68, 70, 71], "ration": 19, "token_length": 19, "feats_length": 19, "maximum": [19, 47, 64], "pars": 19, "resample_r": 19, "16000": [19, 65], "target": [19, 50, 57], "shuffle_s": 19, "sort_siz": 19, "group": [19, 29, 68], "utt": 19, "num_t_mask": 19, "num_f_mask": 19, "max_t": 19, "max_f": 19, "max_w": 19, "freq": 19, "width": 19, "warp": 19, "num_t_sub": 19, "substitut": 19, "ref": 19, "u2": [19, 68, 70, 71], "2106": 19, "05642": 19, "trim": 19, "tail": [19, 71], "trimtail": 19, "2211": 19, "00522": 19, "perturb": 19, "open": [19, 65, 71], "content": 19, "src": 19, "split_with_spac": 19, "give": [19, 38, 40, 63, 68], "url": 19, "descriptor": 19, "amp": 20, "db": 20, "func": 20, "waveform": 20, "point": 20, "wavefrom": 20, "distort_typ": 20, "distort_conf": 20, "wav_in": 20, "wav_out": 20, "mask_num": 20, "amplitud": 20, "domain": 20, "100db": 20, "0db": 20, "slot": 20, "defin": [20, 29, 31, 32, 34, 37, 64, 71], "100": [20, 71], "65": 20, "60": 20, "30": 20, "db_mask": 20, "fenc": 20, "maxium": 20, "while": [20, 29, 31, 32, 34, 37, 64], "seper": 20, "neget": 20, "mask_numb": 20, "max_db": 20, "could": [20, 41, 63, 70, 71], "jag": 20, "ploynomi": 20, "m": 20, "groupedrelpositionmultiheadedattent": [21, 22], "convolutionmodul": [21, 23, 27, 30, 39, 43], "efficientconformerencod": [21, 24], "strideconformerencoderlay": [21, 25], "conv2dsubsampling2": [21, 26], "multi": [22, 28, 41, 45, 70, 71], "n_head": [22, 28, 37, 41], "n_feat": [22, 28, 41], "group_siz": [22, 24], "multiheadedattent": [22, 25, 28, 32, 39, 41, 46, 49], "rel": [22, 28, 41, 47], "1901": [22, 28, 41, 47], "02860": [22, 28, 41, 47], "2109": [22, 37], "01163": 22, "queri": [22, 28, 41], "dot": [22, 28, 41], "param": [22, 23, 24, 25, 28, 30, 32, 34, 37, 41, 43, 45, 47, 49, 52, 64], "time1": [22, 28, 41], "time2": [22, 28, 41], "embed": [22, 28, 37, 39, 41], "d_model": [22, 28, 41, 47, 64], "forward_attent": [22, 28, 41], "padding_q": 22, "vector": [22, 28, 41, 47], "groupedattent": 22, "effic": 22, "pad4group": 22, "q": 22, "k": [22, 71], "v": [22, 36, 71], "rel_shift": [22, 28, 41], "zero_triu": [22, 28, 41], "positin": [22, 28, 41], "lower": [22, 28, 41], "triangular": [22, 28, 41], "matrix": [22, 24, 28, 41], "relu": [23, 30, 33, 37, 43, 51], "norm": [23, 30, 37, 43], "batch_norm": [23, 24, 30, 31, 43, 48], "stride": [23, 24, 29, 34, 68], "normalize_befor": [24, 25, 31, 32, 45, 46, 48, 49], "macaron_styl": [24, 48], "activation_typ": [24, 31, 48], "swish": [24, 31, 37, 39, 48], "use_cnn_modul": [24, 48], "cnn_module_kernel": [24, 31, 48], "cnn_module_norm": [24, 48], "stride_layer_idx": 24, "group_layer_idx": 24, "stride_kernel": 24, "kwarg": [24, 53, 64], "calculate_downsampling_factor": [24, 31], "xs_len": [24, 31, 34, 48], "emb": [24, 37, 45, 48], "use_onnx": 24, "simul": 24, "onnx": 24, "set_global_chunk_s": 24, "self_attn": [25, 32, 46, 49], "feed_forward": [25, 46, 49], "feed_forward_macaron": [25, 49], "conv_modul": [25, 32, 49], "pointwise_conv_lay": 25, "instanc": [25, 29, 31, 32, 34, 37, 46, 49], "relpositionmultiheadedattent": [25, 27, 28, 32, 39, 41, 49], "feed": [25, 32, 33, 46, 49, 51], "positionwisefeedforward": [25, 27, 32, 33, 34, 39, 46, 49, 51], "convlutionmodul": [25, 32, 49], "layer_norm": [25, 32, 45, 46, 49], "sub": [25, 32, 45, 46, 49], "conformerencoderlay": [25, 39, 49], "idim": [26, 33, 34, 51, 52], "odim": [26, 34, 44, 52], "pos_enc_class": [26, 34, 45, 52], "basesubsampl": [26, 34, 39, 52], "2d": [26, 34, 44, 52], "x_mask": [26, 34, 52], "conv2dvalid": [27, 29], "squeezeformerencod": [27, 31], "squeezeformerencoderlay": [27, 32], "positionwise_feed_forward": [27, 39], "depthwiseconv2dsubsampling4": [27, 34], "timereductionlayer1d": [27, 34], "timereductionlayer2d": [27, 34], "timereductionlayerstream": [27, 34], "do_rel_shift": [28, 31], "adaptive_scal": [28, 30, 31, 33], "init_weight": [28, 30, 31, 33, 34], "valid": [29, 60, 70, 71], "in_channel": 29, "out_channel": 29, "dilat": 29, "padding_mod": 29, "zero": [29, 37, 47, 63], "devic": [29, 37, 60, 63, 68, 70, 71], "valid_trigx": 29, "valid_trigi": 29, "_convnd": 29, "everi": [29, 31, 32, 34, 37, 65, 68], "overridden": [29, 31, 32, 34, 37], "although": [29, 31, 32, 34, 37], "recip": [29, 31, 32, 34, 37, 70, 71], "pass": [29, 31, 32, 34, 37, 41, 46, 63, 64, 68], "within": [29, 31, 32, 34, 37], "afterward": [29, 31, 32, 34, 37], "former": [29, 31, 32, 34, 37], "care": [29, 31, 32, 34, 37], "regist": [29, 31, 32, 34, 37], "hook": [29, 31, 32, 34, 37], "latter": [29, 31, 32, 34, 37], "silent": [29, 31, 32, 34, 37, 71], "output_pad": 29, "transpos": 29, "encoder_dim": [31, 34], "reduce_idx": 31, "recover_idx": 31, "11": [31, 57, 71], "feed_forward_expansion_factor": 31, "dw_stride": [31, 34], "input_dropout_r": [31, 34], "time_reduction_layer_typ": 31, "conv1d": 31, "feed_forward_dropout_r": 31, "cnn_norm_typ": 31, "concat_aft": [31, 32], "check_ascending_list": 31, "feed_forward1": 32, "feed_forward2": 32, "positionwis": [33, 51], "hidden_unit": [33, 51], "feedforward": [33, 45, 51], "appi": [33, 51], "dimenst": [33, 51], "timereductionlay": 34, "depthwis": 34, "bank": 34, "out_dim": 34, "nemo": 34, "reduct": 34, "procedur": 34, "downsampl": 34, "multiheadattentionmechan": 34, "kernel": 34, "factor": 34, "joint": [35, 38, 68], "transducerjoint": [35, 36], "predictor": [35, 38, 57], "applypad": [35, 37], "convpredictor": [35, 37], "embeddingpredictor": [35, 37], "predictorbas": [35, 37, 38], "rnnpredictor": [35, 37], "voca_s": [36, 37], "enc_output_s": 36, "pred_output_s": 36, "join_dim": 36, "prejoin_linear": 36, "postjoin_linear": 36, "joint_mod": 36, "tanh": 36, "enc_out": [36, 38], "pred_out": [36, 38], "u": 36, "pad_valu": [37, 57], "max_time_step": 37, "embed_s": 37, "embed_dropout": 37, "history_s": 37, "layer_norm_epsilon": 37, "1e": [37, 64, 71], "05": [37, 50, 64], "batch_to_cach": 37, "history_1": 37, "history_2": 37, "history_3": 37, "new_ach": 37, "cache_to_batch": 37, "history3": 37, "new_caceh": 37, "forward_step": 37, "time_step": 37, "init_st": 37, "pdf": 37, "07513": 37, "proj": 37, "hidden_s": 37, "num_lay": 37, "rnn_type": [37, 57], "lstm": 37, "state_m": 37, "state_c": 37, "n_layer": 37, "state_m_1": 37, "state_c_1": 37, "state_m_2": 37, "state_c_2": 37, "new_cach": 37, "max_tim": 37, "vocab_s": [38, 40, 45, 71], "attention_decod": 38, "transformerdecod": [38, 39, 40, 45], "bitransformerdecod": [38, 39, 45], "ignore_id": [38, 40, 57], "reverse_weight": [38, 40, 45], "lsm_weight": [38, 40], "length_normalized_loss": [38, 40], "transducer_weight": 38, "attention_weight": 38, "asrmodel": [38, 39, 40], "hybrid": [38, 40], "beam_search": 38, "speech_length": [38, 40], "beam_siz": [38, 40, 63, 70, 71], "simulate_stream": [38, 40], "feat_dim": [38, 40, 42], "prohibit": [38, 40], "final_prob": 38, "ctc_prob": 38, "transducer_prob": 38, "text_length": [38, 40], "frontend": [38, 40], "loss": [38, 40, 44, 50, 70, 71], "forward_encoder_chunk": [38, 40, 68], "interfac": [38, 40, 47, 49], "forward_joint_step": 38, "forward_predictor_init_st": 38, "forward_predictor_step": 38, "greedy_search": 38, "n_step": 38, "64": 38, "greedi": [38, 40, 70, 71], "init_b": 38, "transducer_attention_rescor": 38, "attn_weight": 38, "search_ctc_weight": 38, "search_transducer_weight": 38, "beam_search_typ": 38, "rescor": [38, 40, 68, 70, 71], "rescore_prob": 38, "transducer_loss": 38, "attn_prob": 38, "rnnt": 38, "asr_model": 39, "cmvn": [39, 54], "globalcmvn": [39, 42], "decoder_lay": 39, "decoderlay": [39, 46], "nopositionalencod": [39, 47], "positionalencod": [39, 45, 47], "relpositionalencod": [39, 47], "baseencod": [39, 48], "conformerencod": [39, 48], "transformerencod": [39, 40, 48], "transformerencoderlay": [39, 49], "label_smoothing_loss": 39, "labelsmoothingloss": [39, 50], "conv2dsubsampling4": [39, 52], "conv2dsubsampling6": [39, 52], "conv2dsubsampling8": [39, 52], "linearnosubsampl": [39, 52], "lfmmi_dir": 40, "attention_rescor": [40, 70, 71], "nbest": [40, 65], "resor": 40, "ctc_activ": [40, 68], "linear": [40, 52, 68], "softmax": [40, 44, 45, 68], "ctc_greedy_search": [40, 70, 71], "ctc_prefix_beam_search": [40, 70, 71], "eos_symbol": [40, 68], "eo": [40, 57, 63, 68, 70, 71], "calc": 40, "forward_attention_decod": [40, 68], "hyp": [40, 57], "hyps_len": 40, "encoder_out": 40, "hypothesi": 40, "r_hyp": 40, "fo": 40, "verf": 40, "hlg_onebest": 40, "hlg": 40, "hlg_rescor": 40, "lm_scale": 40, "decoder_scal": 40, "r_decoder_scal": 40, "is_bidirectional_decod": 40, "load_hlg_resource_if_necessari": 40, "load_lfmmi_resourc": 40, "recogn": 40, "max_result_len": 40, "sos_symbol": [40, 68], "subsampling_r": [40, 68], "cross": [41, 45, 60, 70, 71], "mocha": 41, "But": [41, 71], "forward_qkv": 41, "istd": 42, "norm_var": 42, "normal": [42, 50, 70, 71], "encoder_output_s": [44, 45], "argmax": 44, "hs_pad": 44, "3d": 44, "tmax": [44, 57], "eproj": 44, "hlen": 44, "ys_pad": [44, 57], "ys_len": [44, 57], "lmax": [44, 57], "log_softmax": 44, "r_num_block": 45, "self_attention_dropout_r": 45, "src_attention_dropout_r": 45, "use_output_lay": 45, "transfom": 45, "wise": 45, "scaledpositionalencod": 45, "memory_mask": [45, 46], "ys_in_pad": 45, "ys_in_len": 45, "r_ys_in_pad": 45, "float32": 45, "maxlen_in": [45, 46], "int64": 45, "maxlen_out": [45, 46], "r_x": 45, "olen": 45, "forward_one_step": 45, "tgt": [45, 46], "tgt_mask": [45, 46], "uint8": 45, "max_time_out": 45, "per": 45, "src_attent": 45, "cif": [45, 46], "bidirect": 45, "src_attn": 46, "inter": 46, "gpt": 46, "positon": 47, "No": 47, "compat": [47, 49], "position_encod": [47, 52], "5000": [47, 71], "revers": [47, 57], "pe": 47, "po": 47, "2i": 47, "sin": 47, "dmodel": 47, "co": 47, "apply_dropout": 47, "onc": 47, "appendix": 47, "abs_po": 48, "positionwise_conv_kernel_s": 48, "selfattention_layer_typ": 48, "smooth": 50, "normalize_length": 50, "ce": 50, "version": [50, 65], "prob": [50, 68], "divid": 50, "among": 50, "9": [50, 57], "flatten": 50, "seqlen": 50, "predict": [50, 57], "signal": 50, "padding_id": 50, "kl": 50, "scalar": 50, "pos_enc": 52, "common": 54, "add_blank": [54, 57], "add_sos_eo": [54, 57], "get_activ": [54, 57], "get_rnn": [54, 57], "get_subsampl": [54, 57], "log_add": [54, 57], "pad_list": [54, 57], "remove_duplicates_and_blank": [54, 57], "replace_duplicates_with_blank": [54, 57], "reverse_pad_list": [54, 57], "th_accuraci": [54, 57], "override_config": [54, 58], "ctc_util": 54, "executor": 54, "file_util": 54, "read_list": [54, 61], "read_non_lang_symbol": [54, 61], "read_symbol_t": [54, 61], "init_model": 54, "add_optional_chunk_mask": [54, 63], "make_non_pad_mask": [54, 63], "make_pad_mask": [54, 63], "mask_finished_pr": [54, 63], "mask_finished_scor": [54, 63], "subsequent_chunk_mask": [54, 63], "subsequent_mask": [54, 63], "schedul": [54, 60], "cosineann": [54, 64], "noamann": [54, 64], "noamholdann": [54, 64], "squareann": [54, 64], "squarerootann": [54, 64], "squarerootconstantpolici": [54, 64], "warmupannealholdpolici": [54, 64], "warmupholdpolici": [54, 64], "warmuplr": [54, 64], "warmuppolici": [54, 64], "unil": 57, "prepad": 57, "ys_in": 57, "eeo": 57, "ys_out": 57, "sos_id": 57, "eos_id": 57, "act": 57, "stabl": [57, 68], "t_1": 57, "t_2": 57, "t_b": 57, "ones": 57, "tokenmax": 57, "seq": 57, "pad_output": 57, "pad_target": 57, "ignore_label": 57, "longtensor": 57, "override_list": 58, "cv": 60, "data_load": 60, "optim": [60, 64, 70, 71], "writer": 60, "scaler": 60, "list_fil": 61, "non_lang_sym_path": 61, "linguist": [61, 71], "nois": 61, "brk": 61, "sym": 61, "symbol_table_fil": 61, "enabl": [63, 65], "pad_mask": 63, "descript": [63, 68], "pred": 63, "flag": 63, "finish": [63, 68, 70, 71], "arrai": 63, "aliv": 63, "aim": 63, "rest": 63, "inf": 63, "num_left_chunk": 63, "cpu": 63, "subsequ": 63, "cuda": [63, 70, 71], "auto": 63, "regress": 63, "fulli": 63, "long": [63, 65, 68], "max_step": 64, "min_lr": 64, "last_epoch": 64, "warmup_step": 64, "warmup_ratio": 64, "_lrschedul": 64, "get_lr": 64, "decay_r": 64, "set_step": 64, "constant_step": 64, "constant_ratio": 64, "warmup": 64, "logic": 64, "lr": 64, "polici": 64, "clariti": 64, "ratio": 64, "infinit": [64, 68], "minimum": 64, "hold": 64, "learn": 64, "decai": 64, "constant": 64, "hold_step": 64, "hold_ratio": 64, "variant": 64, "warm": 64, "25000": 64, "almost": 64, "noamlr": 64, "except": 64, "model_s": 64, "min": [64, 65], "equal": 64, "develop": [65, 68], "timestamp": 65, "align": 65, "phone": 65, "maco": 65, "pack": 65, "window": 65, "linux": 65, "sy": 65, "wav_fil": 65, "argv": 65, "ch": 65, "decode_wav": 65, "print": [65, 71], "offici": 65, "specif": 65, "automat": 65, "md": 65, "top": 65, "enable_timestamp": 65, "bonu": 65, "continuous_decod": 65, "\u4e0d\u5fd8\u521d\u5fc3": 65, "\u7262\u8bb0\u4f7f\u547d": 65, "wave": 65, "test_wav": 65, "rb": 65, "fin": 65, "assert": 65, "getnchannel": 65, "readfram": 65, "getnfram": 65, "suppos": 65, "16k": 65, "16bit": 65, "interv": 65, "last": 65, "chunk_wav": 65, "behavior": 65, "setup": 65, "jinja2": 67, "nbsphinx": 67, "sphinx": 67, "recommonmark": 67, "markdown": 67, "rtd": 67, "theme": 67, "torchaudio": [67, 70], "balanc": 68, "latenc": 68, "accur": 68, "autoregress": 68, "benefit": 68, "find": [68, 70, 71], "form": 68, "usual": 68, "degrad": 68, "lot": 68, "spike": 68, "aspect": 68, "favor": 68, "server": 68, "fed": 68, "further": 68, "partial": 68, "select": 68, "affect": 68, "limit": 68, "promis": 68, "proper": 68, "brief": 68, "increment": 68, "requri": 68, "att": 68, "tircki": 68, "simpli": 68, "straightforward": 68, "neglig": 68, "blue": 68, "color": 68, "vocabulari": [68, 70, 71], "bi": 68, "direct": 68, "recurr": 68, "dnn": 68, "feel": [70, 71], "free": [70, 71], "issu": [70, 71], "thank": [70, 71], "kind": [70, 71], "feedback": [70, 71], "suggest": [70, 71], "manual": [70, 71], "understand": [70, 71], "bash": [70, 71], "stop_stag": [70, 71], "variabl": [70, 71], "absolut": 70, "usernam": 70, "aishell_data_prep": 70, "tab": [70, 71], "separ": [70, 71], "column": [70, 71], "wav_id": [70, 71], "text_label": [70, 71], "bac009s0002w0125": 70, "\u5404\u5730\u653f\u5e9c\u4fbf\u7eb7\u7eb7\u8ddf\u8fdb": 70, "copi": 70, "compute_cmvn_stat": [70, 71], "cepstral": [70, 71], "varianc": [70, 71], "These": [70, 71], "acoust": [70, 71], "integ": [70, 71], "unk": [70, 71], "\u4e00": 70, "\u4e01": 70, "\u9f9a": 70, "4230": 70, "\u9f9f": 70, "4231": 70, "4232": 70, "denot": [70, 71], "unknown": [70, 71], "aslo": [70, 71], "design": [70, 71], "anoth": [70, 71], "10k": [70, 71], "5k": [70, 71], "ddp": [70, 71], "dist_backend": [70, 71], "nccl": [70, 71], "gloo": [70, 71], "visibl": [70, 71], "cuda_visible_devic": [70, 71], "card": [70, 71], "resum": [70, 71], "termin": [70, 71], "accident": [70, 71], "exp": [70, 71], "your_exp": [70, 71], "Then": [70, 71], "yaml": [70, 71], "train_conform": [70, 71], "tensorboard": [70, 71], "2080": [70, 71], "ti": [70, 71], "dai": [70, 71], "monitor": [70, 71], "logdir": [70, 71], "your_exp_nam": [70, 71], "port": [70, 71], "12598": [70, 71], "bind_al": [70, 71], "averag": [70, 71], "average_checkpoint": [70, 71], "average_num": [70, 71], "four": [70, 71], "candid": [70, 71], "higher": [70, 71], "wer": [70, 71], "evalu": [70, 71], "error": [70, 71], "export_jit": [70, 71], "program": 70, "data_url": 71, "www": 71, "datadir": 71, "le": 71, "ge": 71, "echo": 71, "clean": 71, "360": 71, "download_and_untar": 71, "fi": 71, "wave_data": 71, "underscor": 71, "data_prep_torchaudio": 71, "1867": 71, "154075": 71, "0014": 71, "flac": 71, "1970": 71, "26100": 71, "0022": 71, "him": 71, "THAT": 71, "IT": 71, "did": 71, "AT": 71, "task": 71, "yourself": 71, "most": 71, "train_960": 71, "merg": 71, "train_clean_100": 71, "train_clean_360": 71, "train_other_500": 71, "dev_clean": 71, "dev_oth": 71, "in_scp": 71, "out_cmvn": 71, "subset": 71, "lang_char": 71, "bpemod": 71, "nbpe": 71, "_unit": 71, "bpemodel": 71, "borrow": 71, "cut": 71, "spm_train": 71, "model_typ": 71, "model_prefix": 71, "input_sentence_s": 71, "100000000": 71, "spm_encod": 71, "output_format": 71, "tr": 71, "uniq": 71, "awk": 71, "nr": 71, "num_token": 71, "wc": 71, "byte": 71, "pair": 71, "sentencepiec": 71, "4995": 71, "young": 71, "4996": 71, "4997": 71, "youth": 71, "4998": 71, "z": 71, "4999": 71, "zz": 71, "5001": 71, "recog_set": 71, "make_raw_list": 71, "1455": 71, "134435": 71, "0000": 71, "mnt": 71, "nf": 71, "ptm1": 71, "THE": 71, "girl": 71, "who": 71, "came": 71, "INTO": 71, "world": 71, "night": 71, "jess": 71, "ran": 71, "cry": 71, "god": 71, "he": 71, "BE": 71, "son": 71, "had": 71, "grown": 71, "womanhood": 71, "farm": 71, "0001": 71, "AND": 71, "NOT": 71, "angri": 71, "she": 71, "wa": 71, "often": 71, "moros": 71, "winesburg": 71, "said": 71, "drank": 71, "her": 71, "husband": 71, "banker": 71, "0002": 71, "BUT": 71, "louis": 71, "made": 71, "happi": 71, "flew": 71, "half": 71, "insan": 71, "fit": 71, "OF": 71, "temper": 71, "sometim": 71, "noisi": 71, "quarrelsom": 71, "swore": 71, "cri": 71, "anger": 71, "got": 71, "knife": 71, "kitchen": 71, "threaten": 71, "life": 71, "init_fil": 71, "ddp_init": 71, "rm": 71, "delet": 71, "init_method": 71, "readlink": 71, "num_gpu": 71, "cmvn_opt": 71, "write": 71, "later": 71, "pin_memori": 71, "wait": 71, "todo": 71, "decode_checkpoint": 71, "avg_": 71, "average_model": 71, "dst_model": 71, "src_path": 71, "val_best": 71, "poll": 71, "idx": 71, "decode_mod": 71, "test_dir": 71, "penalti": 71, "result_fil": 71, "text_bp": 71, "spm_decod": 71, "input_format": 71, "sed": 71, "eq": 71, "output_fil": 71, "integr": 71, "which_lm": 71, "prune": 71, "arpa": 71, "wget": 71, "unzip": 71, "gunzip": 71, "train_960_unigram5000": 71, "fst_dir": 71, "acoustic_scal": 71, "lm_with_runtime_": 71}, "objects": {"": [[11, 0, 0, "-", "wenet"]], "wenet": [[12, 0, 0, "-", "branchformer"], [16, 0, 0, "-", "dataset"], [21, 0, 0, "-", "efficient_conformer"], [27, 0, 0, "-", "squeezeformer"], [35, 0, 0, "-", "transducer"], [39, 0, 0, "-", "transformer"], [54, 0, 0, "-", "utils"]], "wenet.branchformer": [[13, 0, 0, "-", "cgmlp"], [14, 0, 0, "-", "encoder"], [15, 0, 0, "-", "encoder_layer"]], "wenet.branchformer.cgmlp": [[13, 1, 1, "", "ConvolutionalGatingMLP"], [13, 1, 1, "", "ConvolutionalSpatialGatingUnit"]], "wenet.branchformer.cgmlp.ConvolutionalGatingMLP": [[13, 2, 1, "", "forward"], [13, 3, 1, "", "training"]], "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit": [[13, 2, 1, "", "espnet_initialization_fn"], [13, 2, 1, "", "forward"], [13, 3, 1, "", "training"]], "wenet.branchformer.encoder": [[14, 1, 1, "", "BranchformerEncoder"]], "wenet.branchformer.encoder.BranchformerEncoder": [[14, 2, 1, "", "forward"], [14, 2, 1, "", "forward_chunk"], [14, 2, 1, "", "forward_chunk_by_chunk"], [14, 2, 1, "", "output_size"], [14, 3, 1, "", "training"]], "wenet.branchformer.encoder_layer": [[15, 1, 1, "", "BranchformerEncoderLayer"]], "wenet.branchformer.encoder_layer.BranchformerEncoderLayer": [[15, 2, 1, "", "forward"], [15, 3, 1, "", "training"]], "wenet.dataset": [[17, 0, 0, "-", "dataset"], [19, 0, 0, "-", "processor"], [20, 0, 0, "-", "wav_distortion"]], "wenet.dataset.dataset": [[17, 1, 1, "", "DataList"], [17, 4, 1, "", "Dataset"], [17, 1, 1, "", "DistributedSampler"], [17, 1, 1, "", "Processor"]], "wenet.dataset.dataset.DataList": [[17, 2, 1, "", "set_epoch"]], "wenet.dataset.dataset.DistributedSampler": [[17, 2, 1, "", "sample"], [17, 2, 1, "", "set_epoch"], [17, 2, 1, "", "update"]], "wenet.dataset.dataset.Processor": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "set_epoch"]], "wenet.dataset.processor": [[19, 4, 1, "", "batch"], [19, 4, 1, "", "compute_fbank"], [19, 4, 1, "", "compute_mfcc"], [19, 4, 1, "", "dynamic_batch"], [19, 4, 1, "", "filter"], [19, 4, 1, "", "padding"], [19, 4, 1, "", "parse_raw"], [19, 4, 1, "", "resample"], [19, 4, 1, "", "shuffle"], [19, 4, 1, "", "sort"], [19, 4, 1, "", "spec_aug"], [19, 4, 1, "", "spec_sub"], [19, 4, 1, "", "spec_trim"], [19, 4, 1, "", "speed_perturb"], [19, 4, 1, "", "static_batch"], [19, 4, 1, "", "tar_file_and_group"], [19, 4, 1, "", "tokenize"], [19, 4, 1, "", "url_opener"]], "wenet.dataset.wav_distortion": [[20, 4, 1, "", "amp2db"], [20, 4, 1, "", "db2amp"], [20, 4, 1, "", "distort"], [20, 4, 1, "", "distort_chain"], [20, 4, 1, "", "distort_wav_conf"], [20, 4, 1, "", "distort_wav_conf_and_save"], [20, 4, 1, "", "generate_amp_mask"], [20, 4, 1, "", "make_amp_mask"], [20, 4, 1, "", "make_fence_distortion"], [20, 4, 1, "", "make_gain_db"], [20, 4, 1, "", "make_jag_distortion"], [20, 4, 1, "", "make_max_distortion"], [20, 4, 1, "", "make_poly_distortion"], [20, 4, 1, "", "make_quad_distortion"]], "wenet.efficient_conformer": [[22, 0, 0, "-", "attention"], [23, 0, 0, "-", "convolution"], [24, 0, 0, "-", "encoder"], [25, 0, 0, "-", "encoder_layer"], [26, 0, 0, "-", "subsampling"]], "wenet.efficient_conformer.attention": [[22, 1, 1, "", "GroupedRelPositionMultiHeadedAttention"]], "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention": [[22, 2, 1, "", "forward"], [22, 2, 1, "", "forward_attention"], [22, 2, 1, "", "pad4group"], [22, 2, 1, "", "rel_shift"], [22, 3, 1, "", "training"]], "wenet.efficient_conformer.convolution": [[23, 1, 1, "", "ConvolutionModule"]], "wenet.efficient_conformer.convolution.ConvolutionModule": [[23, 2, 1, "", "forward"], [23, 3, 1, "", "training"]], "wenet.efficient_conformer.encoder": [[24, 1, 1, "", "EfficientConformerEncoder"]], "wenet.efficient_conformer.encoder.EfficientConformerEncoder": [[24, 2, 1, "", "calculate_downsampling_factor"], [24, 2, 1, "", "forward"], [24, 2, 1, "", "forward_chunk"], [24, 2, 1, "", "forward_chunk_by_chunk"], [24, 2, 1, "", "output_size"], [24, 2, 1, "", "set_global_chunk_size"], [24, 3, 1, "", "training"]], "wenet.efficient_conformer.encoder_layer": [[25, 1, 1, "", "StrideConformerEncoderLayer"]], "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer": [[25, 2, 1, "", "forward"], [25, 3, 1, "", "training"]], "wenet.efficient_conformer.subsampling": [[26, 1, 1, "", "Conv2dSubsampling2"]], "wenet.efficient_conformer.subsampling.Conv2dSubsampling2": [[26, 2, 1, "", "forward"], [26, 3, 1, "", "training"]], "wenet.squeezeformer": [[28, 0, 0, "-", "attention"], [29, 0, 0, "-", "conv2d"], [30, 0, 0, "-", "convolution"], [31, 0, 0, "-", "encoder"], [32, 0, 0, "-", "encoder_layer"], [33, 0, 0, "-", "positionwise_feed_forward"], [34, 0, 0, "-", "subsampling"]], "wenet.squeezeformer.attention": [[28, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention": [[28, 2, 1, "", "forward"], [28, 2, 1, "", "forward_attention"], [28, 2, 1, "", "init_weights"], [28, 2, 1, "", "rel_shift"], [28, 3, 1, "", "training"]], "wenet.squeezeformer.conv2d": [[29, 1, 1, "", "Conv2dValid"]], "wenet.squeezeformer.conv2d.Conv2dValid": [[29, 3, 1, "", "bias"], [29, 3, 1, "", "dilation"], [29, 2, 1, "", "forward"], [29, 3, 1, "", "groups"], [29, 3, 1, "", "in_channels"], [29, 3, 1, "", "kernel_size"], [29, 3, 1, "", "out_channels"], [29, 3, 1, "", "output_padding"], [29, 3, 1, "", "padding"], [29, 3, 1, "", "padding_mode"], [29, 3, 1, "", "stride"], [29, 3, 1, "", "transposed"], [29, 3, 1, "", "weight"]], "wenet.squeezeformer.convolution": [[30, 1, 1, "", "ConvolutionModule"]], "wenet.squeezeformer.convolution.ConvolutionModule": [[30, 2, 1, "", "forward"], [30, 2, 1, "", "init_weights"], [30, 3, 1, "", "training"]], "wenet.squeezeformer.encoder": [[31, 1, 1, "", "SqueezeformerEncoder"]], "wenet.squeezeformer.encoder.SqueezeformerEncoder": [[31, 2, 1, "", "calculate_downsampling_factor"], [31, 2, 1, "", "check_ascending_list"], [31, 2, 1, "", "forward"], [31, 2, 1, "", "forward_chunk"], [31, 2, 1, "", "forward_chunk_by_chunk"], [31, 2, 1, "", "output_size"], [31, 3, 1, "", "training"]], "wenet.squeezeformer.encoder_layer": [[32, 1, 1, "", "SqueezeformerEncoderLayer"]], "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer": [[32, 2, 1, "", "forward"], [32, 3, 1, "", "training"]], "wenet.squeezeformer.positionwise_feed_forward": [[33, 1, 1, "", "PositionwiseFeedForward"]], "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward": [[33, 2, 1, "", "forward"], [33, 2, 1, "", "init_weights"], [33, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling": [[34, 1, 1, "", "DepthwiseConv2dSubsampling4"], [34, 1, 1, "", "TimeReductionLayer1D"], [34, 1, 1, "", "TimeReductionLayer2D"], [34, 1, 1, "", "TimeReductionLayerStream"]], "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4": [[34, 2, 1, "", "forward"], [34, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer1D": [[34, 2, 1, "", "forward"], [34, 2, 1, "", "init_weights"], [34, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer2D": [[34, 2, 1, "", "forward"], [34, 2, 1, "", "init_weights"], [34, 3, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayerStream": [[34, 2, 1, "", "forward"], [34, 2, 1, "", "init_weights"], [34, 3, 1, "", "training"]], "wenet.transducer": [[36, 0, 0, "-", "joint"], [37, 0, 0, "-", "predictor"], [38, 0, 0, "-", "transducer"]], "wenet.transducer.joint": [[36, 1, 1, "", "TransducerJoint"]], "wenet.transducer.joint.TransducerJoint": [[36, 2, 1, "", "forward"], [36, 3, 1, "", "training"]], "wenet.transducer.predictor": [[37, 4, 1, "", "ApplyPadding"], [37, 1, 1, "", "ConvPredictor"], [37, 1, 1, "", "EmbeddingPredictor"], [37, 1, 1, "", "PredictorBase"], [37, 1, 1, "", "RNNPredictor"]], "wenet.transducer.predictor.ConvPredictor": [[37, 2, 1, "", "batch_to_cache"], [37, 2, 1, "", "cache_to_batch"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "forward_step"], [37, 2, 1, "", "init_state"], [37, 3, 1, "", "training"]], "wenet.transducer.predictor.EmbeddingPredictor": [[37, 2, 1, "", "batch_to_cache"], [37, 2, 1, "", "cache_to_batch"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "forward_step"], [37, 2, 1, "", "init_state"], [37, 3, 1, "", "training"]], "wenet.transducer.predictor.PredictorBase": [[37, 2, 1, "", "batch_to_cache"], [37, 2, 1, "", "cache_to_batch"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "forward_step"], [37, 2, 1, "", "init_state"], [37, 3, 1, "", "training"]], "wenet.transducer.predictor.RNNPredictor": [[37, 2, 1, "", "batch_to_cache"], [37, 2, 1, "", "cache_to_batch"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "forward_step"], [37, 2, 1, "", "init_state"], [37, 3, 1, "", "training"]], "wenet.transducer.transducer": [[38, 1, 1, "", "Transducer"]], "wenet.transducer.transducer.Transducer": [[38, 2, 1, "", "beam_search"], [38, 2, 1, "", "forward"], [38, 2, 1, "", "forward_encoder_chunk"], [38, 2, 1, "", "forward_joint_step"], [38, 2, 1, "", "forward_predictor_init_state"], [38, 2, 1, "", "forward_predictor_step"], [38, 2, 1, "", "greedy_search"], [38, 2, 1, "", "init_bs"], [38, 3, 1, "", "training"], [38, 2, 1, "", "transducer_attention_rescoring"]], "wenet.transformer": [[40, 0, 0, "-", "asr_model"], [41, 0, 0, "-", "attention"], [42, 0, 0, "-", "cmvn"], [43, 0, 0, "-", "convolution"], [44, 0, 0, "-", "ctc"], [45, 0, 0, "-", "decoder"], [46, 0, 0, "-", "decoder_layer"], [47, 0, 0, "-", "embedding"], [48, 0, 0, "-", "encoder"], [49, 0, 0, "-", "encoder_layer"], [50, 0, 0, "-", "label_smoothing_loss"], [51, 0, 0, "-", "positionwise_feed_forward"], [52, 0, 0, "-", "subsampling"], [53, 0, 0, "-", "swish"]], "wenet.transformer.asr_model": [[40, 1, 1, "", "ASRModel"]], "wenet.transformer.asr_model.ASRModel": [[40, 2, 1, "", "attention_rescoring"], [40, 2, 1, "", "ctc_activation"], [40, 2, 1, "", "ctc_greedy_search"], [40, 2, 1, "", "ctc_prefix_beam_search"], [40, 2, 1, "", "eos_symbol"], [40, 2, 1, "", "forward"], [40, 2, 1, "", "forward_attention_decoder"], [40, 2, 1, "", "forward_encoder_chunk"], [40, 2, 1, "", "hlg_onebest"], [40, 2, 1, "", "hlg_rescore"], [40, 2, 1, "", "is_bidirectional_decoder"], [40, 2, 1, "", "load_hlg_resource_if_necessary"], [40, 2, 1, "", "load_lfmmi_resource"], [40, 2, 1, "", "recognize"], [40, 2, 1, "", "right_context"], [40, 2, 1, "", "sos_symbol"], [40, 2, 1, "", "subsampling_rate"], [40, 3, 1, "", "training"]], "wenet.transformer.attention": [[41, 1, 1, "", "MultiHeadedAttention"], [41, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.transformer.attention.MultiHeadedAttention": [[41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_attention"], [41, 2, 1, "", "forward_qkv"], [41, 3, 1, "", "training"]], "wenet.transformer.attention.RelPositionMultiHeadedAttention": [[41, 2, 1, "", "forward"], [41, 2, 1, "", "rel_shift"], [41, 3, 1, "", "training"]], "wenet.transformer.cmvn": [[42, 1, 1, "", "GlobalCMVN"]], "wenet.transformer.cmvn.GlobalCMVN": [[42, 2, 1, "", "forward"], [42, 3, 1, "", "training"]], "wenet.transformer.convolution": [[43, 1, 1, "", "ConvolutionModule"]], "wenet.transformer.convolution.ConvolutionModule": [[43, 2, 1, "", "forward"], [43, 3, 1, "", "training"]], "wenet.transformer.ctc": [[44, 1, 1, "", "CTC"]], "wenet.transformer.ctc.CTC": [[44, 2, 1, "", "argmax"], [44, 2, 1, "", "forward"], [44, 2, 1, "", "log_softmax"], [44, 3, 1, "", "training"]], "wenet.transformer.decoder": [[45, 1, 1, "", "BiTransformerDecoder"], [45, 1, 1, "", "TransformerDecoder"]], "wenet.transformer.decoder.BiTransformerDecoder": [[45, 2, 1, "", "forward"], [45, 2, 1, "", "forward_one_step"], [45, 3, 1, "", "training"]], "wenet.transformer.decoder.TransformerDecoder": [[45, 2, 1, "", "forward"], [45, 2, 1, "", "forward_one_step"], [45, 3, 1, "", "training"]], "wenet.transformer.decoder_layer": [[46, 1, 1, "", "DecoderLayer"]], "wenet.transformer.decoder_layer.DecoderLayer": [[46, 2, 1, "", "forward"], [46, 3, 1, "", "training"]], "wenet.transformer.embedding": [[47, 1, 1, "", "NoPositionalEncoding"], [47, 1, 1, "", "PositionalEncoding"], [47, 1, 1, "", "RelPositionalEncoding"]], "wenet.transformer.embedding.NoPositionalEncoding": [[47, 2, 1, "", "forward"], [47, 2, 1, "", "position_encoding"], [47, 3, 1, "", "training"]], "wenet.transformer.embedding.PositionalEncoding": [[47, 2, 1, "", "forward"], [47, 2, 1, "", "position_encoding"], [47, 3, 1, "", "training"]], "wenet.transformer.embedding.RelPositionalEncoding": [[47, 2, 1, "", "forward"], [47, 3, 1, "", "training"]], "wenet.transformer.encoder": [[48, 1, 1, "", "BaseEncoder"], [48, 1, 1, "", "ConformerEncoder"], [48, 1, 1, "", "TransformerEncoder"]], "wenet.transformer.encoder.BaseEncoder": [[48, 2, 1, "", "forward"], [48, 2, 1, "", "forward_chunk"], [48, 2, 1, "", "forward_chunk_by_chunk"], [48, 2, 1, "", "output_size"], [48, 3, 1, "", "training"]], "wenet.transformer.encoder.ConformerEncoder": [[48, 3, 1, "", "training"]], "wenet.transformer.encoder.TransformerEncoder": [[48, 3, 1, "", "training"]], "wenet.transformer.encoder_layer": [[49, 1, 1, "", "ConformerEncoderLayer"], [49, 1, 1, "", "TransformerEncoderLayer"]], "wenet.transformer.encoder_layer.ConformerEncoderLayer": [[49, 2, 1, "", "forward"], [49, 3, 1, "", "training"]], "wenet.transformer.encoder_layer.TransformerEncoderLayer": [[49, 2, 1, "", "forward"], [49, 3, 1, "", "training"]], "wenet.transformer.label_smoothing_loss": [[50, 1, 1, "", "LabelSmoothingLoss"]], "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss": [[50, 2, 1, "", "forward"], [50, 3, 1, "", "training"]], "wenet.transformer.positionwise_feed_forward": [[51, 1, 1, "", "PositionwiseFeedForward"]], "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward": [[51, 2, 1, "", "forward"], [51, 3, 1, "", "training"]], "wenet.transformer.subsampling": [[52, 1, 1, "", "BaseSubsampling"], [52, 1, 1, "", "Conv2dSubsampling4"], [52, 1, 1, "", "Conv2dSubsampling6"], [52, 1, 1, "", "Conv2dSubsampling8"], [52, 1, 1, "", "LinearNoSubsampling"]], "wenet.transformer.subsampling.BaseSubsampling": [[52, 2, 1, "", "position_encoding"], [52, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling4": [[52, 2, 1, "", "forward"], [52, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling6": [[52, 2, 1, "", "forward"], [52, 3, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling8": [[52, 2, 1, "", "forward"], [52, 3, 1, "", "training"]], "wenet.transformer.subsampling.LinearNoSubsampling": [[52, 2, 1, "", "forward"], [52, 3, 1, "", "training"]], "wenet.transformer.swish": [[53, 1, 1, "", "Swish"]], "wenet.transformer.swish.Swish": [[53, 2, 1, "", "forward"], [53, 3, 1, "", "training"]], "wenet.utils": [[57, 0, 0, "-", "common"], [58, 0, 0, "-", "config"], [60, 0, 0, "-", "executor"], [61, 0, 0, "-", "file_utils"], [63, 0, 0, "-", "mask"], [64, 0, 0, "-", "scheduler"]], "wenet.utils.common": [[57, 4, 1, "", "add_blank"], [57, 4, 1, "", "add_sos_eos"], [57, 4, 1, "", "get_activation"], [57, 4, 1, "", "get_rnn"], [57, 4, 1, "", "get_subsample"], [57, 4, 1, "", "log_add"], [57, 4, 1, "", "pad_list"], [57, 4, 1, "", "remove_duplicates_and_blank"], [57, 4, 1, "", "replace_duplicates_with_blank"], [57, 4, 1, "", "reverse_pad_list"], [57, 4, 1, "", "th_accuracy"]], "wenet.utils.config": [[58, 4, 1, "", "override_config"]], "wenet.utils.executor": [[60, 1, 1, "", "Executor"]], "wenet.utils.executor.Executor": [[60, 2, 1, "", "cv"], [60, 2, 1, "", "train"]], "wenet.utils.file_utils": [[61, 4, 1, "", "read_lists"], [61, 4, 1, "", "read_non_lang_symbols"], [61, 4, 1, "", "read_symbol_table"]], "wenet.utils.mask": [[63, 4, 1, "", "add_optional_chunk_mask"], [63, 4, 1, "", "make_non_pad_mask"], [63, 4, 1, "", "make_pad_mask"], [63, 4, 1, "", "mask_finished_preds"], [63, 4, 1, "", "mask_finished_scores"], [63, 4, 1, "", "subsequent_chunk_mask"], [63, 4, 1, "", "subsequent_mask"]], "wenet.utils.scheduler": [[64, 1, 1, "", "CosineAnnealing"], [64, 1, 1, "", "NoamAnnealing"], [64, 1, 1, "", "NoamHoldAnnealing"], [64, 1, 1, "", "SquareAnnealing"], [64, 1, 1, "", "SquareRootAnnealing"], [64, 1, 1, "", "SquareRootConstantPolicy"], [64, 1, 1, "", "WarmupAnnealHoldPolicy"], [64, 1, 1, "", "WarmupHoldPolicy"], [64, 1, 1, "", "WarmupLR"], [64, 1, 1, "", "WarmupPolicy"]], "wenet.utils.scheduler.NoamAnnealing": [[64, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.NoamHoldAnnealing": [[64, 2, 1, "", "set_step"]], "wenet.utils.scheduler.SquareRootConstantPolicy": [[64, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupAnnealHoldPolicy": [[64, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupHoldPolicy": [[64, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupLR": [[64, 2, 1, "", "get_lr"], [64, 2, 1, "", "set_step"]], "wenet.utils.scheduler.WarmupPolicy": [[64, 2, 1, "", "get_lr"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"big": 0, "data": [0, 70, 71], "train": [0, 3, 69, 70, 71], "uio": 0, "necess": 0, "upgrad": 0, "io": 0, "mothod": 0, "system": [0, 5], "design": [0, 5, 68], "overal": 0, "chain": 0, "valid": 0, "experi": [0, 70, 71], "aishel": [0, 70], "raw": 0, "v": 0, "shard": 0, "wenetspeech": 0, "usag": [0, 1, 65], "q": 0, "A": 0, "context": 1, "bias": 1, "graph": 1, "ctc": [1, 44], "prefix": 1, "beam": 1, "search": 1, "wfst": 1, "prune": 1, "welcom": 2, "wenet": [2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71], "": 2, "document": 2, "content": [2, 9, 66, 69], "indic": 2, "tabl": 2, "instal": [3, 65], "prebuilt": 3, "python": [3, 10, 65], "packag": [3, 11, 12, 16, 21, 27, 35, 39, 54], "build": [3, 65], "deploy": 3, "jit": 4, "lm": [5, 71], "motiv": 5, "implement": [5, 68], "result": 5, "how": [5, 69], "us": [5, 70, 71], "paper": 6, "pretrain": [7, 8], "model": [7, 8, 69, 70, 71], "type": [7, 8], "licens": [7, 8], "list": [7, 8], "product": 9, "runtim": [9, 68, 71], "api": 10, "refer": [10, 66, 68], "subpackag": 11, "branchform": [12, 13, 14, 15], "submodul": [12, 16, 21, 27, 35, 39, 54], "cgmlp": 13, "modul": [13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "encod": [14, 24, 31, 48], "encoder_lay": [15, 25, 32, 49], "dataset": [16, 17, 18, 19, 20], "kaldi_io": 18, "processor": 19, "wav_distort": 20, "efficient_conform": [21, 22, 23, 24, 25, 26], "attent": [22, 28, 41], "convolut": [23, 30, 43], "subsampl": [26, 34, 52], "squeezeform": [27, 28, 29, 30, 31, 32, 33, 34], "conv2d": 29, "positionwise_feed_forward": [33, 51], "transduc": [35, 36, 37, 38], "joint": 36, "predictor": 37, "transform": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "asr_model": 40, "cmvn": [42, 56, 70, 71], "decod": 45, "decoder_lay": 46, "embed": 47, "label_smoothing_loss": 50, "swish": 53, "util": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "checkpoint": 55, "common": 57, "config": 58, "ctc_util": 59, "executor": 60, "file_util": 61, "init_model": 62, "mask": 63, "schedul": 64, "bind": 65, "non": 65, "stream": 65, "your": 65, "local": 65, "machin": 65, "platform": 68, "support": 68, "architectur": 68, "interfac": 68, "cach": 68, "detail": 68, "tutori": [70, 71], "setup": [70, 71], "environ": [70, 71], "first": [70, 71], "stage": [70, 71], "1": [70, 71], "download": [70, 71], "0": [70, 71], "prepar": [70, 71], "extract": [70, 71], "optin": [70, 71], "featur": [70, 71], "2": [70, 71], "gener": [70, 71], "label": [70, 71], "token": [70, 71], "dictionari": [70, 71], "3": [70, 71], "format": [70, 71], "4": [70, 71], "neural": [70, 71], "network": [70, 71], "5": [70, 71], "recogn": [70, 71], "wav": [70, 71], "6": [70, 71], "export": [70, 71], "librispeech": 71, "option": 71, "7": 71, "add": 71, "test": 71}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Big Data Training: UIO": [[0, "big-data-training-uio"]], "Necessity of upgrading IO mothod": [[0, "necessity-of-upgrading-io-mothod"]], "System design of UIO": [[0, "system-design-of-uio"]], "Overall design": [[0, "overall-design"]], "Chain IO": [[0, "chain-io"]], "Validation experiments": [[0, "validation-experiments"]], "Aishell(raw vs shard)": [[0, "aishell-raw-vs-shard"]], "WenetSpeech(shard)": [[0, "wenetspeech-shard"]], "Usage of UIO": [[0, "usage-of-uio"]], "Q&A": [[0, "q-a"]], "Context Biasing": [[1, "context-biasing"]], "Context Graph": [[1, "context-graph"]], "CTC Prefix Beam Search": [[1, "ctc-prefix-beam-search"]], "CTC WFST Beam Search": [[1, "ctc-wfst-beam-search"]], "Pruning": [[1, "pruning"]], "Usage": [[1, "usage"], [65, "usage"]], "Welcome to wenet\u2019s documentation!": [[2, "welcome-to-wenet-s-documentation"]], "Contents:": [[2, null], [9, null], [66, null], [69, null]], "Indices and tables": [[2, "indices-and-tables"]], "Install": [[3, "install"], [65, "install"]], "Install prebuilt python package": [[3, "install-prebuilt-python-package"]], "Install for training": [[3, "install-for-training"]], "Build for deployment": [[3, "build-for-deployment"]], "JIT in WeNet": [[4, "jit-in-wenet"]], "LM for WeNet": [[5, "lm-for-wenet"]], "Motivation": [[5, "motivation"]], "System Design": [[5, "system-design"]], "Implementation": [[5, "implementation"]], "Results": [[5, "results"]], "How to use?": [[5, "how-to-use"]], "Papers": [[6, "papers"]], "Pretrained Models in WeNet": [[7, "pretrained-models-in-wenet"], [8, "pretrained-models-in-wenet"]], "Model Types": [[7, "model-types"], [8, "model-types"]], "Model License": [[7, "model-license"], [8, "model-license"]], "Model List": [[7, "model-list"], [8, "model-list"]], "Production Runtime": [[9, "production-runtime"]], "Python API Reference": [[10, "python-api-reference"]], "wenet package": [[11, "module-wenet"]], "Subpackages": [[11, "subpackages"]], "wenet.branchformer package": [[12, "module-wenet.branchformer"]], "Submodules": [[12, "submodules"], [16, "submodules"], [21, "submodules"], [27, "submodules"], [35, "submodules"], [39, "submodules"], [54, "submodules"]], "wenet.branchformer.cgmlp module": [[13, "module-wenet.branchformer.cgmlp"]], "wenet.branchformer.encoder module": [[14, "module-wenet.branchformer.encoder"]], "wenet.branchformer.encoder_layer module": [[15, "module-wenet.branchformer.encoder_layer"]], "wenet.dataset package": [[16, "module-wenet.dataset"]], "wenet.dataset.dataset module": [[17, "module-wenet.dataset.dataset"]], "wenet.dataset.kaldi_io module": [[18, "wenet-dataset-kaldi-io-module"]], "wenet.dataset.processor module": [[19, "module-wenet.dataset.processor"]], "wenet.dataset.wav_distortion module": [[20, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer package": [[21, "module-wenet.efficient_conformer"]], "wenet.efficient_conformer.attention module": [[22, "module-wenet.efficient_conformer.attention"]], "wenet.efficient_conformer.convolution module": [[23, "module-wenet.efficient_conformer.convolution"]], "wenet.efficient_conformer.encoder module": [[24, "module-wenet.efficient_conformer.encoder"]], "wenet.efficient_conformer.encoder_layer module": [[25, "module-wenet.efficient_conformer.encoder_layer"]], "wenet.efficient_conformer.subsampling module": [[26, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer package": [[27, "module-wenet.squeezeformer"]], "wenet.squeezeformer.attention module": [[28, "module-wenet.squeezeformer.attention"]], "wenet.squeezeformer.conv2d module": [[29, "module-wenet.squeezeformer.conv2d"]], "wenet.squeezeformer.convolution module": [[30, "module-wenet.squeezeformer.convolution"]], "wenet.squeezeformer.encoder module": [[31, "module-wenet.squeezeformer.encoder"]], "wenet.squeezeformer.encoder_layer module": [[32, "module-wenet.squeezeformer.encoder_layer"]], "wenet.squeezeformer.positionwise_feed_forward module": [[33, "module-wenet.squeezeformer.positionwise_feed_forward"]], "wenet.squeezeformer.subsampling module": [[34, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer package": [[35, "module-wenet.transducer"]], "wenet.transducer.joint module": [[36, "module-wenet.transducer.joint"]], "wenet.transducer.predictor module": [[37, "module-wenet.transducer.predictor"]], "wenet.transducer.transducer module": [[38, "module-wenet.transducer.transducer"]], "wenet.transformer package": [[39, "module-wenet.transformer"]], "wenet.transformer.asr_model module": [[40, "module-wenet.transformer.asr_model"]], "wenet.transformer.attention module": [[41, "module-wenet.transformer.attention"]], "wenet.transformer.cmvn module": [[42, "module-wenet.transformer.cmvn"]], "wenet.transformer.convolution module": [[43, "module-wenet.transformer.convolution"]], "wenet.transformer.ctc module": [[44, "module-wenet.transformer.ctc"]], "wenet.transformer.decoder module": [[45, "module-wenet.transformer.decoder"]], "wenet.transformer.decoder_layer module": [[46, "module-wenet.transformer.decoder_layer"]], "wenet.transformer.embedding module": [[47, "module-wenet.transformer.embedding"]], "wenet.transformer.encoder module": [[48, "module-wenet.transformer.encoder"]], "wenet.transformer.encoder_layer module": [[49, "module-wenet.transformer.encoder_layer"]], "wenet.transformer.label_smoothing_loss module": [[50, "module-wenet.transformer.label_smoothing_loss"]], "wenet.transformer.positionwise_feed_forward module": [[51, "module-wenet.transformer.positionwise_feed_forward"]], "wenet.transformer.subsampling module": [[52, "module-wenet.transformer.subsampling"]], "wenet.transformer.swish module": [[53, "module-wenet.transformer.swish"]], "wenet.utils package": [[54, "module-wenet.utils"]], "wenet.utils.checkpoint module": [[55, "wenet-utils-checkpoint-module"]], "wenet.utils.cmvn module": [[56, "wenet-utils-cmvn-module"]], "wenet.utils.common module": [[57, "module-wenet.utils.common"]], "wenet.utils.config module": [[58, "module-wenet.utils.config"]], "wenet.utils.ctc_util module": [[59, "wenet-utils-ctc-util-module"]], "wenet.utils.executor module": [[60, "module-wenet.utils.executor"]], "wenet.utils.file_utils module": [[61, "module-wenet.utils.file_utils"]], "wenet.utils.init_model module": [[62, "wenet-utils-init-model-module"]], "wenet.utils.mask module": [[63, "module-wenet.utils.mask"]], "wenet.utils.scheduler module": [[64, "module-wenet.utils.scheduler"]], "Python Binding": [[65, "python-binding"]], "Non-streaming Usage": [[65, "non-streaming-usage"]], "Streaming Usage": [[65, "streaming-usage"]], "Build on Your Local Machine": [[65, "build-on-your-local-machine"]], "Reference": [[66, "reference"]], "Runtime for WeNet": [[68, "runtime-for-wenet"]], "Platforms Supported": [[68, "platforms-supported"]], "Architecture and Implementation": [[68, "architecture-and-implementation"]], "Architecture": [[68, "architecture"]], "Interface Design": [[68, "interface-design"]], "Cache in Details": [[68, "cache-in-details"]], "References": [[68, "references"]], "How to train models?": [[69, "how-to-train-models"]], "Tutorial on AIShell": [[70, "tutorial-on-aishell"]], "Setup environment": [[70, "setup-environment"], [71, "setup-environment"]], "First Experiment": [[70, "first-experiment"], [71, "first-experiment"]], "Stage -1: Download data": [[70, "stage-1-download-data"], [71, "stage-1-download-data"]], "Stage 0: Prepare Training data": [[70, "stage-0-prepare-training-data"], [71, "stage-0-prepare-training-data"]], "Stage 1: Extract optinal cmvn features": [[70, "stage-1-extract-optinal-cmvn-features"], [71, "stage-1-extract-optinal-cmvn-features"]], "Stage 2: Generate label token dictionary": [[70, "stage-2-generate-label-token-dictionary"], [71, "stage-2-generate-label-token-dictionary"]], "Stage 3: Prepare WeNet data format": [[70, "stage-3-prepare-wenet-data-format"], [71, "stage-3-prepare-wenet-data-format"]], "Stage 4: Neural Network training": [[70, "stage-4-neural-network-training"], [71, "stage-4-neural-network-training"]], "Stage 5: Recognize wav using the trained model": [[70, "stage-5-recognize-wav-using-the-trained-model"], [71, "stage-5-recognize-wav-using-the-trained-model"]], "Stage 6: Export the trained model": [[70, "stage-6-export-the-trained-model"]], "Tutorial on LibriSpeech": [[71, "tutorial-on-librispeech"]], "Stage 6(Optional): Export the trained model": [[71, "stage-6-optional-export-the-trained-model"]], "Stage 7(Optional): Add LM and test it with runtime": [[71, "stage-7-optional-add-lm-and-test-it-with-runtime"]]}, "indexentries": {"module": [[11, "module-wenet"], [12, "module-wenet.branchformer"], [13, "module-wenet.branchformer.cgmlp"], [14, "module-wenet.branchformer.encoder"], [15, "module-wenet.branchformer.encoder_layer"], [16, "module-wenet.dataset"], [17, "module-wenet.dataset.dataset"], [19, "module-wenet.dataset.processor"], [20, "module-wenet.dataset.wav_distortion"], [21, "module-wenet.efficient_conformer"], [22, "module-wenet.efficient_conformer.attention"], [23, "module-wenet.efficient_conformer.convolution"], [24, "module-wenet.efficient_conformer.encoder"], [25, "module-wenet.efficient_conformer.encoder_layer"], [26, "module-wenet.efficient_conformer.subsampling"], [27, "module-wenet.squeezeformer"], [28, "module-wenet.squeezeformer.attention"], [29, "module-wenet.squeezeformer.conv2d"], [30, "module-wenet.squeezeformer.convolution"], [31, "module-wenet.squeezeformer.encoder"], [32, "module-wenet.squeezeformer.encoder_layer"], [33, "module-wenet.squeezeformer.positionwise_feed_forward"], [34, "module-wenet.squeezeformer.subsampling"], [35, "module-wenet.transducer"], [36, "module-wenet.transducer.joint"], [37, "module-wenet.transducer.predictor"], [38, "module-wenet.transducer.transducer"], [39, "module-wenet.transformer"], [40, "module-wenet.transformer.asr_model"], [41, "module-wenet.transformer.attention"], [42, "module-wenet.transformer.cmvn"], [43, "module-wenet.transformer.convolution"], [44, "module-wenet.transformer.ctc"], [45, "module-wenet.transformer.decoder"], [46, "module-wenet.transformer.decoder_layer"], [47, "module-wenet.transformer.embedding"], [48, "module-wenet.transformer.encoder"], [49, "module-wenet.transformer.encoder_layer"], [50, "module-wenet.transformer.label_smoothing_loss"], [51, "module-wenet.transformer.positionwise_feed_forward"], [52, "module-wenet.transformer.subsampling"], [53, "module-wenet.transformer.swish"], [54, "module-wenet.utils"], [57, "module-wenet.utils.common"], [58, "module-wenet.utils.config"], [60, "module-wenet.utils.executor"], [61, "module-wenet.utils.file_utils"], [63, "module-wenet.utils.mask"], [64, "module-wenet.utils.scheduler"]], "wenet": [[11, "module-wenet"]], "wenet.branchformer": [[12, "module-wenet.branchformer"]], "convolutionalgatingmlp (class in wenet.branchformer.cgmlp)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP"]], "convolutionalspatialgatingunit (class in wenet.branchformer.cgmlp)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit"]], "espnet_initialization_fn() (wenet.branchformer.cgmlp.convolutionalspatialgatingunit method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.espnet_initialization_fn"]], "forward() (wenet.branchformer.cgmlp.convolutionalgatingmlp method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP.forward"]], "forward() (wenet.branchformer.cgmlp.convolutionalspatialgatingunit method)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.forward"]], "training (wenet.branchformer.cgmlp.convolutionalgatingmlp attribute)": [[13, "wenet.branchformer.cgmlp.ConvolutionalGatingMLP.training"]], "training (wenet.branchformer.cgmlp.convolutionalspatialgatingunit attribute)": [[13, "wenet.branchformer.cgmlp.ConvolutionalSpatialGatingUnit.training"]], "wenet.branchformer.cgmlp": [[13, "module-wenet.branchformer.cgmlp"]], "branchformerencoder (class in wenet.branchformer.encoder)": [[14, "wenet.branchformer.encoder.BranchformerEncoder"]], "forward() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward"]], "forward_chunk() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.branchformer.encoder.branchformerencoder method)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.output_size"]], "training (wenet.branchformer.encoder.branchformerencoder attribute)": [[14, "wenet.branchformer.encoder.BranchformerEncoder.training"]], "wenet.branchformer.encoder": [[14, "module-wenet.branchformer.encoder"]], "branchformerencoderlayer (class in wenet.branchformer.encoder_layer)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer"]], "forward() (wenet.branchformer.encoder_layer.branchformerencoderlayer method)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer.forward"]], "training (wenet.branchformer.encoder_layer.branchformerencoderlayer attribute)": [[15, "wenet.branchformer.encoder_layer.BranchformerEncoderLayer.training"]], "wenet.branchformer.encoder_layer": [[15, "module-wenet.branchformer.encoder_layer"]], "wenet.dataset": [[16, "module-wenet.dataset"]], "datalist (class in wenet.dataset.dataset)": [[17, "wenet.dataset.dataset.DataList"]], "dataset() (in module wenet.dataset.dataset)": [[17, "wenet.dataset.dataset.Dataset"]], "distributedsampler (class in wenet.dataset.dataset)": [[17, "wenet.dataset.dataset.DistributedSampler"]], "processor (class in wenet.dataset.dataset)": [[17, "wenet.dataset.dataset.Processor"]], "apply() (wenet.dataset.dataset.processor method)": [[17, "wenet.dataset.dataset.Processor.apply"]], "sample() (wenet.dataset.dataset.distributedsampler method)": [[17, "wenet.dataset.dataset.DistributedSampler.sample"]], "set_epoch() (wenet.dataset.dataset.datalist method)": [[17, "wenet.dataset.dataset.DataList.set_epoch"]], "set_epoch() (wenet.dataset.dataset.distributedsampler method)": [[17, "wenet.dataset.dataset.DistributedSampler.set_epoch"]], "set_epoch() (wenet.dataset.dataset.processor method)": [[17, "wenet.dataset.dataset.Processor.set_epoch"]], "update() (wenet.dataset.dataset.distributedsampler method)": [[17, "wenet.dataset.dataset.DistributedSampler.update"]], "wenet.dataset.dataset": [[17, "module-wenet.dataset.dataset"]], "batch() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.batch"]], "compute_fbank() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.compute_fbank"]], "compute_mfcc() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.compute_mfcc"]], "dynamic_batch() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.dynamic_batch"]], "filter() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.filter"]], "padding() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.padding"]], "parse_raw() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.parse_raw"]], "resample() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.resample"]], "shuffle() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.shuffle"]], "sort() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.sort"]], "spec_aug() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.spec_aug"]], "spec_sub() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.spec_sub"]], "spec_trim() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.spec_trim"]], "speed_perturb() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.speed_perturb"]], "static_batch() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.static_batch"]], "tar_file_and_group() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.tar_file_and_group"]], "tokenize() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.tokenize"]], "url_opener() (in module wenet.dataset.processor)": [[19, "wenet.dataset.processor.url_opener"]], "wenet.dataset.processor": [[19, "module-wenet.dataset.processor"]], "amp2db() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.amp2db"]], "db2amp() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.db2amp"]], "distort() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.distort"]], "distort_chain() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.distort_chain"]], "distort_wav_conf() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.distort_wav_conf"]], "distort_wav_conf_and_save() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.distort_wav_conf_and_save"]], "generate_amp_mask() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.generate_amp_mask"]], "make_amp_mask() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_amp_mask"]], "make_fence_distortion() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_fence_distortion"]], "make_gain_db() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_gain_db"]], "make_jag_distortion() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_jag_distortion"]], "make_max_distortion() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_max_distortion"]], "make_poly_distortion() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_poly_distortion"]], "make_quad_distortion() (in module wenet.dataset.wav_distortion)": [[20, "wenet.dataset.wav_distortion.make_quad_distortion"]], "wenet.dataset.wav_distortion": [[20, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer": [[21, "module-wenet.efficient_conformer"]], "groupedrelpositionmultiheadedattention (class in wenet.efficient_conformer.attention)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention"]], "forward() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward_attention"]], "pad4group() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.pad4group"]], "rel_shift() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention attribute)": [[22, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.training"]], "wenet.efficient_conformer.attention": [[22, "module-wenet.efficient_conformer.attention"]], "convolutionmodule (class in wenet.efficient_conformer.convolution)": [[23, "wenet.efficient_conformer.convolution.ConvolutionModule"]], "forward() (wenet.efficient_conformer.convolution.convolutionmodule method)": [[23, "wenet.efficient_conformer.convolution.ConvolutionModule.forward"]], "training (wenet.efficient_conformer.convolution.convolutionmodule attribute)": [[23, "wenet.efficient_conformer.convolution.ConvolutionModule.training"]], "wenet.efficient_conformer.convolution": [[23, "module-wenet.efficient_conformer.convolution"]], "efficientconformerencoder (class in wenet.efficient_conformer.encoder)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder"]], "calculate_downsampling_factor() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.calculate_downsampling_factor"]], "forward() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward"]], "forward_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.output_size"]], "set_global_chunk_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.set_global_chunk_size"]], "training (wenet.efficient_conformer.encoder.efficientconformerencoder attribute)": [[24, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.training"]], "wenet.efficient_conformer.encoder": [[24, "module-wenet.efficient_conformer.encoder"]], "strideconformerencoderlayer (class in wenet.efficient_conformer.encoder_layer)": [[25, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer"]], "forward() (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer method)": [[25, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.forward"]], "training (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer attribute)": [[25, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.training"]], "wenet.efficient_conformer.encoder_layer": [[25, "module-wenet.efficient_conformer.encoder_layer"]], "conv2dsubsampling2 (class in wenet.efficient_conformer.subsampling)": [[26, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2"]], "forward() (wenet.efficient_conformer.subsampling.conv2dsubsampling2 method)": [[26, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.forward"]], "training (wenet.efficient_conformer.subsampling.conv2dsubsampling2 attribute)": [[26, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.training"]], "wenet.efficient_conformer.subsampling": [[26, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer": [[27, "module-wenet.squeezeformer"]], "relpositionmultiheadedattention (class in wenet.squeezeformer.attention)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward_attention"]], "init_weights() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.init_weights"]], "rel_shift() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.squeezeformer.attention.relpositionmultiheadedattention attribute)": [[28, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.squeezeformer.attention": [[28, "module-wenet.squeezeformer.attention"]], "conv2dvalid (class in wenet.squeezeformer.conv2d)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid"]], "bias (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.bias"]], "dilation (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.dilation"]], "forward() (wenet.squeezeformer.conv2d.conv2dvalid method)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.forward"]], "groups (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.groups"]], "in_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.in_channels"]], "kernel_size (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.kernel_size"]], "out_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.out_channels"]], "output_padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.output_padding"]], "padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.padding"]], "padding_mode (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.padding_mode"]], "stride (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.stride"]], "transposed (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.transposed"]], "weight (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[29, "wenet.squeezeformer.conv2d.Conv2dValid.weight"]], "wenet.squeezeformer.conv2d": [[29, "module-wenet.squeezeformer.conv2d"]], "convolutionmodule (class in wenet.squeezeformer.convolution)": [[30, "wenet.squeezeformer.convolution.ConvolutionModule"]], "forward() (wenet.squeezeformer.convolution.convolutionmodule method)": [[30, "wenet.squeezeformer.convolution.ConvolutionModule.forward"]], "init_weights() (wenet.squeezeformer.convolution.convolutionmodule method)": [[30, "wenet.squeezeformer.convolution.ConvolutionModule.init_weights"]], "training (wenet.squeezeformer.convolution.convolutionmodule attribute)": [[30, "wenet.squeezeformer.convolution.ConvolutionModule.training"]], "wenet.squeezeformer.convolution": [[30, "module-wenet.squeezeformer.convolution"]], "squeezeformerencoder (class in wenet.squeezeformer.encoder)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder"]], "calculate_downsampling_factor() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.calculate_downsampling_factor"]], "check_ascending_list() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.check_ascending_list"]], "forward() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward"]], "forward_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.output_size"]], "training (wenet.squeezeformer.encoder.squeezeformerencoder attribute)": [[31, "wenet.squeezeformer.encoder.SqueezeformerEncoder.training"]], "wenet.squeezeformer.encoder": [[31, "module-wenet.squeezeformer.encoder"]], "squeezeformerencoderlayer (class in wenet.squeezeformer.encoder_layer)": [[32, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer"]], "forward() (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer method)": [[32, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.forward"]], "training (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer attribute)": [[32, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.training"]], "wenet.squeezeformer.encoder_layer": [[32, "module-wenet.squeezeformer.encoder_layer"]], "positionwisefeedforward (class in wenet.squeezeformer.positionwise_feed_forward)": [[33, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[33, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "init_weights() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[33, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.init_weights"]], "training (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[33, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.squeezeformer.positionwise_feed_forward": [[33, "module-wenet.squeezeformer.positionwise_feed_forward"]], "depthwiseconv2dsubsampling4 (class in wenet.squeezeformer.subsampling)": [[34, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4"]], "timereductionlayer1d (class in wenet.squeezeformer.subsampling)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer1D"]], "timereductionlayer2d (class in wenet.squeezeformer.subsampling)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer2D"]], "timereductionlayerstream (class in wenet.squeezeformer.subsampling)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayerStream"]], "forward() (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 method)": [[34, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.forward"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.init_weights"]], "training (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 attribute)": [[34, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer1d attribute)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer2d attribute)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayerstream attribute)": [[34, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.training"]], "wenet.squeezeformer.subsampling": [[34, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer": [[35, "module-wenet.transducer"]], "transducerjoint (class in wenet.transducer.joint)": [[36, "wenet.transducer.joint.TransducerJoint"]], "forward() (wenet.transducer.joint.transducerjoint method)": [[36, "wenet.transducer.joint.TransducerJoint.forward"]], "training (wenet.transducer.joint.transducerjoint attribute)": [[36, "wenet.transducer.joint.TransducerJoint.training"]], "wenet.transducer.joint": [[36, "module-wenet.transducer.joint"]], "applypadding() (in module wenet.transducer.predictor)": [[37, "wenet.transducer.predictor.ApplyPadding"]], "convpredictor (class in wenet.transducer.predictor)": [[37, "wenet.transducer.predictor.ConvPredictor"]], "embeddingpredictor (class in wenet.transducer.predictor)": [[37, "wenet.transducer.predictor.EmbeddingPredictor"]], "predictorbase (class in wenet.transducer.predictor)": [[37, "wenet.transducer.predictor.PredictorBase"]], "rnnpredictor (class in wenet.transducer.predictor)": [[37, "wenet.transducer.predictor.RNNPredictor"]], "batch_to_cache() (wenet.transducer.predictor.convpredictor method)": [[37, "wenet.transducer.predictor.ConvPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.embeddingpredictor method)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.predictorbase method)": [[37, "wenet.transducer.predictor.PredictorBase.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.rnnpredictor method)": [[37, "wenet.transducer.predictor.RNNPredictor.batch_to_cache"]], "cache_to_batch() (wenet.transducer.predictor.convpredictor method)": [[37, "wenet.transducer.predictor.ConvPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.embeddingpredictor method)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.predictorbase method)": [[37, "wenet.transducer.predictor.PredictorBase.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.rnnpredictor method)": [[37, "wenet.transducer.predictor.RNNPredictor.cache_to_batch"]], "forward() (wenet.transducer.predictor.convpredictor method)": [[37, "wenet.transducer.predictor.ConvPredictor.forward"]], "forward() (wenet.transducer.predictor.embeddingpredictor method)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.forward"]], "forward() (wenet.transducer.predictor.predictorbase method)": [[37, "wenet.transducer.predictor.PredictorBase.forward"]], "forward() (wenet.transducer.predictor.rnnpredictor method)": [[37, "wenet.transducer.predictor.RNNPredictor.forward"]], "forward_step() (wenet.transducer.predictor.convpredictor method)": [[37, "wenet.transducer.predictor.ConvPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.embeddingpredictor method)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.predictorbase method)": [[37, "wenet.transducer.predictor.PredictorBase.forward_step"]], "forward_step() (wenet.transducer.predictor.rnnpredictor method)": [[37, "wenet.transducer.predictor.RNNPredictor.forward_step"]], "init_state() (wenet.transducer.predictor.convpredictor method)": [[37, "wenet.transducer.predictor.ConvPredictor.init_state"]], "init_state() (wenet.transducer.predictor.embeddingpredictor method)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.init_state"]], "init_state() (wenet.transducer.predictor.predictorbase method)": [[37, "wenet.transducer.predictor.PredictorBase.init_state"]], "init_state() (wenet.transducer.predictor.rnnpredictor method)": [[37, "wenet.transducer.predictor.RNNPredictor.init_state"]], "training (wenet.transducer.predictor.convpredictor attribute)": [[37, "wenet.transducer.predictor.ConvPredictor.training"]], "training (wenet.transducer.predictor.embeddingpredictor attribute)": [[37, "wenet.transducer.predictor.EmbeddingPredictor.training"]], "training (wenet.transducer.predictor.predictorbase attribute)": [[37, "wenet.transducer.predictor.PredictorBase.training"]], "training (wenet.transducer.predictor.rnnpredictor attribute)": [[37, "wenet.transducer.predictor.RNNPredictor.training"]], "wenet.transducer.predictor": [[37, "module-wenet.transducer.predictor"]], "transducer (class in wenet.transducer.transducer)": [[38, "wenet.transducer.transducer.Transducer"]], "beam_search() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.beam_search"]], "forward() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.forward"]], "forward_encoder_chunk() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.forward_encoder_chunk"]], "forward_joint_step() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.forward_joint_step"]], "forward_predictor_init_state() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.forward_predictor_init_state"]], "forward_predictor_step() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.forward_predictor_step"]], "greedy_search() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.greedy_search"]], "init_bs() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.init_bs"]], "training (wenet.transducer.transducer.transducer attribute)": [[38, "wenet.transducer.transducer.Transducer.training"]], "transducer_attention_rescoring() (wenet.transducer.transducer.transducer method)": [[38, "wenet.transducer.transducer.Transducer.transducer_attention_rescoring"]], "wenet.transducer.transducer": [[38, "module-wenet.transducer.transducer"]], "wenet.transformer": [[39, "module-wenet.transformer"]], "asrmodel (class in wenet.transformer.asr_model)": [[40, "wenet.transformer.asr_model.ASRModel"]], "attention_rescoring() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.attention_rescoring"]], "ctc_activation() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.ctc_activation"]], "ctc_greedy_search() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.ctc_greedy_search"]], "ctc_prefix_beam_search() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.ctc_prefix_beam_search"]], "eos_symbol() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.eos_symbol"]], "forward() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.forward"]], "forward_attention_decoder() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.forward_attention_decoder"]], "forward_encoder_chunk() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.forward_encoder_chunk"]], "hlg_onebest() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.hlg_onebest"]], "hlg_rescore() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.hlg_rescore"]], "is_bidirectional_decoder() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.is_bidirectional_decoder"]], "load_hlg_resource_if_necessary() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.load_hlg_resource_if_necessary"]], "load_lfmmi_resource() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.load_lfmmi_resource"]], "recognize() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.recognize"]], "right_context() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.right_context"]], "sos_symbol() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.sos_symbol"]], "subsampling_rate() (wenet.transformer.asr_model.asrmodel method)": [[40, "wenet.transformer.asr_model.ASRModel.subsampling_rate"]], "training (wenet.transformer.asr_model.asrmodel attribute)": [[40, "wenet.transformer.asr_model.ASRModel.training"]], "wenet.transformer.asr_model": [[40, "module-wenet.transformer.asr_model"]], "multiheadedattention (class in wenet.transformer.attention)": [[41, "wenet.transformer.attention.MultiHeadedAttention"]], "relpositionmultiheadedattention (class in wenet.transformer.attention)": [[41, "wenet.transformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.transformer.attention.multiheadedattention method)": [[41, "wenet.transformer.attention.MultiHeadedAttention.forward"]], "forward() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[41, "wenet.transformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.transformer.attention.multiheadedattention method)": [[41, "wenet.transformer.attention.MultiHeadedAttention.forward_attention"]], "forward_qkv() (wenet.transformer.attention.multiheadedattention method)": [[41, "wenet.transformer.attention.MultiHeadedAttention.forward_qkv"]], "rel_shift() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[41, "wenet.transformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.transformer.attention.multiheadedattention attribute)": [[41, "wenet.transformer.attention.MultiHeadedAttention.training"]], "training (wenet.transformer.attention.relpositionmultiheadedattention attribute)": [[41, "wenet.transformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.transformer.attention": [[41, "module-wenet.transformer.attention"]], "globalcmvn (class in wenet.transformer.cmvn)": [[42, "wenet.transformer.cmvn.GlobalCMVN"]], "forward() (wenet.transformer.cmvn.globalcmvn method)": [[42, "wenet.transformer.cmvn.GlobalCMVN.forward"]], "training (wenet.transformer.cmvn.globalcmvn attribute)": [[42, "wenet.transformer.cmvn.GlobalCMVN.training"]], "wenet.transformer.cmvn": [[42, "module-wenet.transformer.cmvn"]], "convolutionmodule (class in wenet.transformer.convolution)": [[43, "wenet.transformer.convolution.ConvolutionModule"]], "forward() (wenet.transformer.convolution.convolutionmodule method)": [[43, "wenet.transformer.convolution.ConvolutionModule.forward"]], "training (wenet.transformer.convolution.convolutionmodule attribute)": [[43, "wenet.transformer.convolution.ConvolutionModule.training"]], "wenet.transformer.convolution": [[43, "module-wenet.transformer.convolution"]], "ctc (class in wenet.transformer.ctc)": [[44, "wenet.transformer.ctc.CTC"]], "argmax() (wenet.transformer.ctc.ctc method)": [[44, "wenet.transformer.ctc.CTC.argmax"]], "forward() (wenet.transformer.ctc.ctc method)": [[44, "wenet.transformer.ctc.CTC.forward"]], "log_softmax() (wenet.transformer.ctc.ctc method)": [[44, "wenet.transformer.ctc.CTC.log_softmax"]], "training (wenet.transformer.ctc.ctc attribute)": [[44, "wenet.transformer.ctc.CTC.training"]], "wenet.transformer.ctc": [[44, "module-wenet.transformer.ctc"]], "bitransformerdecoder (class in wenet.transformer.decoder)": [[45, "wenet.transformer.decoder.BiTransformerDecoder"]], "transformerdecoder (class in wenet.transformer.decoder)": [[45, "wenet.transformer.decoder.TransformerDecoder"]], "forward() (wenet.transformer.decoder.bitransformerdecoder method)": [[45, "wenet.transformer.decoder.BiTransformerDecoder.forward"]], "forward() (wenet.transformer.decoder.transformerdecoder method)": [[45, "wenet.transformer.decoder.TransformerDecoder.forward"]], "forward_one_step() (wenet.transformer.decoder.bitransformerdecoder method)": [[45, "wenet.transformer.decoder.BiTransformerDecoder.forward_one_step"]], "forward_one_step() (wenet.transformer.decoder.transformerdecoder method)": [[45, "wenet.transformer.decoder.TransformerDecoder.forward_one_step"]], "training (wenet.transformer.decoder.bitransformerdecoder attribute)": [[45, "wenet.transformer.decoder.BiTransformerDecoder.training"]], "training (wenet.transformer.decoder.transformerdecoder attribute)": [[45, "wenet.transformer.decoder.TransformerDecoder.training"]], "wenet.transformer.decoder": [[45, "module-wenet.transformer.decoder"]], "decoderlayer (class in wenet.transformer.decoder_layer)": [[46, "wenet.transformer.decoder_layer.DecoderLayer"]], "forward() (wenet.transformer.decoder_layer.decoderlayer method)": [[46, "wenet.transformer.decoder_layer.DecoderLayer.forward"]], "training (wenet.transformer.decoder_layer.decoderlayer attribute)": [[46, "wenet.transformer.decoder_layer.DecoderLayer.training"]], "wenet.transformer.decoder_layer": [[46, "module-wenet.transformer.decoder_layer"]], "nopositionalencoding (class in wenet.transformer.embedding)": [[47, "wenet.transformer.embedding.NoPositionalEncoding"]], "positionalencoding (class in wenet.transformer.embedding)": [[47, "wenet.transformer.embedding.PositionalEncoding"]], "relpositionalencoding (class in wenet.transformer.embedding)": [[47, "wenet.transformer.embedding.RelPositionalEncoding"]], "forward() (wenet.transformer.embedding.nopositionalencoding method)": [[47, "wenet.transformer.embedding.NoPositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.positionalencoding method)": [[47, "wenet.transformer.embedding.PositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.relpositionalencoding method)": [[47, "wenet.transformer.embedding.RelPositionalEncoding.forward"]], "position_encoding() (wenet.transformer.embedding.nopositionalencoding method)": [[47, "wenet.transformer.embedding.NoPositionalEncoding.position_encoding"]], "position_encoding() (wenet.transformer.embedding.positionalencoding method)": [[47, "wenet.transformer.embedding.PositionalEncoding.position_encoding"]], "training (wenet.transformer.embedding.nopositionalencoding attribute)": [[47, "wenet.transformer.embedding.NoPositionalEncoding.training"]], "training (wenet.transformer.embedding.positionalencoding attribute)": [[47, "wenet.transformer.embedding.PositionalEncoding.training"]], "training (wenet.transformer.embedding.relpositionalencoding attribute)": [[47, "wenet.transformer.embedding.RelPositionalEncoding.training"]], "wenet.transformer.embedding": [[47, "module-wenet.transformer.embedding"]], "baseencoder (class in wenet.transformer.encoder)": [[48, "wenet.transformer.encoder.BaseEncoder"]], "conformerencoder (class in wenet.transformer.encoder)": [[48, "wenet.transformer.encoder.ConformerEncoder"]], "transformerencoder (class in wenet.transformer.encoder)": [[48, "wenet.transformer.encoder.TransformerEncoder"]], "forward() (wenet.transformer.encoder.baseencoder method)": [[48, "wenet.transformer.encoder.BaseEncoder.forward"]], "forward_chunk() (wenet.transformer.encoder.baseencoder method)": [[48, "wenet.transformer.encoder.BaseEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.transformer.encoder.baseencoder method)": [[48, "wenet.transformer.encoder.BaseEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.transformer.encoder.baseencoder method)": [[48, "wenet.transformer.encoder.BaseEncoder.output_size"]], "training (wenet.transformer.encoder.baseencoder attribute)": [[48, "wenet.transformer.encoder.BaseEncoder.training"]], "training (wenet.transformer.encoder.conformerencoder attribute)": [[48, "wenet.transformer.encoder.ConformerEncoder.training"]], "training (wenet.transformer.encoder.transformerencoder attribute)": [[48, "wenet.transformer.encoder.TransformerEncoder.training"]], "wenet.transformer.encoder": [[48, "module-wenet.transformer.encoder"]], "conformerencoderlayer (class in wenet.transformer.encoder_layer)": [[49, "wenet.transformer.encoder_layer.ConformerEncoderLayer"]], "transformerencoderlayer (class in wenet.transformer.encoder_layer)": [[49, "wenet.transformer.encoder_layer.TransformerEncoderLayer"]], "forward() (wenet.transformer.encoder_layer.conformerencoderlayer method)": [[49, "wenet.transformer.encoder_layer.ConformerEncoderLayer.forward"]], "forward() (wenet.transformer.encoder_layer.transformerencoderlayer method)": [[49, "wenet.transformer.encoder_layer.TransformerEncoderLayer.forward"]], "training (wenet.transformer.encoder_layer.conformerencoderlayer attribute)": [[49, "wenet.transformer.encoder_layer.ConformerEncoderLayer.training"]], "training (wenet.transformer.encoder_layer.transformerencoderlayer attribute)": [[49, "wenet.transformer.encoder_layer.TransformerEncoderLayer.training"]], "wenet.transformer.encoder_layer": [[49, "module-wenet.transformer.encoder_layer"]], "labelsmoothingloss (class in wenet.transformer.label_smoothing_loss)": [[50, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss"]], "forward() (wenet.transformer.label_smoothing_loss.labelsmoothingloss method)": [[50, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.forward"]], "training (wenet.transformer.label_smoothing_loss.labelsmoothingloss attribute)": [[50, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.training"]], "wenet.transformer.label_smoothing_loss": [[50, "module-wenet.transformer.label_smoothing_loss"]], "positionwisefeedforward (class in wenet.transformer.positionwise_feed_forward)": [[51, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.transformer.positionwise_feed_forward.positionwisefeedforward method)": [[51, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "training (wenet.transformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[51, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.transformer.positionwise_feed_forward": [[51, "module-wenet.transformer.positionwise_feed_forward"]], "basesubsampling (class in wenet.transformer.subsampling)": [[52, "wenet.transformer.subsampling.BaseSubsampling"]], "conv2dsubsampling4 (class in wenet.transformer.subsampling)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling4"]], "conv2dsubsampling6 (class in wenet.transformer.subsampling)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling6"]], "conv2dsubsampling8 (class in wenet.transformer.subsampling)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling8"]], "linearnosubsampling (class in wenet.transformer.subsampling)": [[52, "wenet.transformer.subsampling.LinearNoSubsampling"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling4 method)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling4.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling6 method)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling6.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling8 method)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling8.forward"]], "forward() (wenet.transformer.subsampling.linearnosubsampling method)": [[52, "wenet.transformer.subsampling.LinearNoSubsampling.forward"]], "position_encoding() (wenet.transformer.subsampling.basesubsampling method)": [[52, "wenet.transformer.subsampling.BaseSubsampling.position_encoding"]], "training (wenet.transformer.subsampling.basesubsampling attribute)": [[52, "wenet.transformer.subsampling.BaseSubsampling.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling4 attribute)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling4.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling6 attribute)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling6.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling8 attribute)": [[52, "wenet.transformer.subsampling.Conv2dSubsampling8.training"]], "training (wenet.transformer.subsampling.linearnosubsampling attribute)": [[52, "wenet.transformer.subsampling.LinearNoSubsampling.training"]], "wenet.transformer.subsampling": [[52, "module-wenet.transformer.subsampling"]], "swish (class in wenet.transformer.swish)": [[53, "wenet.transformer.swish.Swish"]], "forward() (wenet.transformer.swish.swish method)": [[53, "wenet.transformer.swish.Swish.forward"]], "training (wenet.transformer.swish.swish attribute)": [[53, "wenet.transformer.swish.Swish.training"]], "wenet.transformer.swish": [[53, "module-wenet.transformer.swish"]], "wenet.utils": [[54, "module-wenet.utils"]], "add_blank() (in module wenet.utils.common)": [[57, "wenet.utils.common.add_blank"]], "add_sos_eos() (in module wenet.utils.common)": [[57, "wenet.utils.common.add_sos_eos"]], "get_activation() (in module wenet.utils.common)": [[57, "wenet.utils.common.get_activation"]], "get_rnn() (in module wenet.utils.common)": [[57, "wenet.utils.common.get_rnn"]], "get_subsample() (in module wenet.utils.common)": [[57, "wenet.utils.common.get_subsample"]], "log_add() (in module wenet.utils.common)": [[57, "wenet.utils.common.log_add"]], "pad_list() (in module wenet.utils.common)": [[57, "wenet.utils.common.pad_list"]], "remove_duplicates_and_blank() (in module wenet.utils.common)": [[57, "wenet.utils.common.remove_duplicates_and_blank"]], "replace_duplicates_with_blank() (in module wenet.utils.common)": [[57, "wenet.utils.common.replace_duplicates_with_blank"]], "reverse_pad_list() (in module wenet.utils.common)": [[57, "wenet.utils.common.reverse_pad_list"]], "th_accuracy() (in module wenet.utils.common)": [[57, "wenet.utils.common.th_accuracy"]], "wenet.utils.common": [[57, "module-wenet.utils.common"]], "override_config() (in module wenet.utils.config)": [[58, "wenet.utils.config.override_config"]], "wenet.utils.config": [[58, "module-wenet.utils.config"]], "executor (class in wenet.utils.executor)": [[60, "wenet.utils.executor.Executor"]], "cv() (wenet.utils.executor.executor method)": [[60, "wenet.utils.executor.Executor.cv"]], "train() (wenet.utils.executor.executor method)": [[60, "wenet.utils.executor.Executor.train"]], "wenet.utils.executor": [[60, "module-wenet.utils.executor"]], "read_lists() (in module wenet.utils.file_utils)": [[61, "wenet.utils.file_utils.read_lists"]], "read_non_lang_symbols() (in module wenet.utils.file_utils)": [[61, "wenet.utils.file_utils.read_non_lang_symbols"]], "read_symbol_table() (in module wenet.utils.file_utils)": [[61, "wenet.utils.file_utils.read_symbol_table"]], "wenet.utils.file_utils": [[61, "module-wenet.utils.file_utils"]], "add_optional_chunk_mask() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.add_optional_chunk_mask"]], "make_non_pad_mask() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.make_non_pad_mask"]], "make_pad_mask() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.make_pad_mask"]], "mask_finished_preds() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.mask_finished_preds"]], "mask_finished_scores() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.mask_finished_scores"]], "subsequent_chunk_mask() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.subsequent_chunk_mask"]], "subsequent_mask() (in module wenet.utils.mask)": [[63, "wenet.utils.mask.subsequent_mask"]], "wenet.utils.mask": [[63, "module-wenet.utils.mask"]], "cosineannealing (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.CosineAnnealing"]], "noamannealing (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.NoamAnnealing"]], "noamholdannealing (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.NoamHoldAnnealing"]], "squareannealing (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.SquareAnnealing"]], "squarerootannealing (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.SquareRootAnnealing"]], "squarerootconstantpolicy (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.SquareRootConstantPolicy"]], "warmupannealholdpolicy (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.WarmupAnnealHoldPolicy"]], "warmupholdpolicy (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.WarmupHoldPolicy"]], "warmuplr (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.WarmupLR"]], "warmuppolicy (class in wenet.utils.scheduler)": [[64, "wenet.utils.scheduler.WarmupPolicy"]], "get_lr() (wenet.utils.scheduler.noamannealing method)": [[64, "wenet.utils.scheduler.NoamAnnealing.get_lr"]], "get_lr() (wenet.utils.scheduler.squarerootconstantpolicy method)": [[64, "wenet.utils.scheduler.SquareRootConstantPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupannealholdpolicy method)": [[64, "wenet.utils.scheduler.WarmupAnnealHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupholdpolicy method)": [[64, "wenet.utils.scheduler.WarmupHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuplr method)": [[64, "wenet.utils.scheduler.WarmupLR.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuppolicy method)": [[64, "wenet.utils.scheduler.WarmupPolicy.get_lr"]], "set_step() (wenet.utils.scheduler.noamholdannealing method)": [[64, "wenet.utils.scheduler.NoamHoldAnnealing.set_step"]], "set_step() (wenet.utils.scheduler.warmuplr method)": [[64, "wenet.utils.scheduler.WarmupLR.set_step"]], "wenet.utils.scheduler": [[64, "module-wenet.utils.scheduler"]]}})