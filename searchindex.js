Search.setIndex({"docnames": ["UIO", "context", "index", "install", "jit_in_wenet", "lm", "papers", "pretrained_models", "pretrained_models.en", "production", "python_api/modules", "python_api/wenet", "python_api/wenet.dataset", "python_api/wenet.dataset.dataset", "python_api/wenet.dataset.kaldi_io", "python_api/wenet.dataset.processor", "python_api/wenet.dataset.wav_distortion", "python_api/wenet.efficient_conformer", "python_api/wenet.efficient_conformer.attention", "python_api/wenet.efficient_conformer.convolution", "python_api/wenet.efficient_conformer.encoder", "python_api/wenet.efficient_conformer.encoder_layer", "python_api/wenet.efficient_conformer.subsampling", "python_api/wenet.squeezeformer", "python_api/wenet.squeezeformer.attention", "python_api/wenet.squeezeformer.conv2d", "python_api/wenet.squeezeformer.convolution", "python_api/wenet.squeezeformer.encoder", "python_api/wenet.squeezeformer.encoder_layer", "python_api/wenet.squeezeformer.positionwise_feed_forward", "python_api/wenet.squeezeformer.subsampling", "python_api/wenet.transducer", "python_api/wenet.transducer.joint", "python_api/wenet.transducer.predictor", "python_api/wenet.transducer.transducer", "python_api/wenet.transformer", "python_api/wenet.transformer.asr_model", "python_api/wenet.transformer.attention", "python_api/wenet.transformer.cmvn", "python_api/wenet.transformer.convolution", "python_api/wenet.transformer.ctc", "python_api/wenet.transformer.decoder", "python_api/wenet.transformer.decoder_layer", "python_api/wenet.transformer.embedding", "python_api/wenet.transformer.encoder", "python_api/wenet.transformer.encoder_layer", "python_api/wenet.transformer.label_smoothing_loss", "python_api/wenet.transformer.positionwise_feed_forward", "python_api/wenet.transformer.subsampling", "python_api/wenet.transformer.swish", "python_api/wenet.utils", "python_api/wenet.utils.checkpoint", "python_api/wenet.utils.cmvn", "python_api/wenet.utils.common", "python_api/wenet.utils.config", "python_api/wenet.utils.ctc_util", "python_api/wenet.utils.executor", "python_api/wenet.utils.file_utils", "python_api/wenet.utils.init_model", "python_api/wenet.utils.mask", "python_api/wenet.utils.scheduler", "python_binding", "reference", "requirements", "runtime", "train", "tutorial_aishell", "tutorial_librispeech"], "filenames": ["UIO.md", "context.md", "index.rst", "install.md", "jit_in_wenet.md", "lm.md", "papers.md", "pretrained_models.md", "pretrained_models.en.md", "production.rst", "python_api/modules.rst", "python_api/wenet.rst", "python_api/wenet.dataset.rst", "python_api/wenet.dataset.dataset.rst", "python_api/wenet.dataset.kaldi_io.rst", "python_api/wenet.dataset.processor.rst", "python_api/wenet.dataset.wav_distortion.rst", "python_api/wenet.efficient_conformer.rst", "python_api/wenet.efficient_conformer.attention.rst", "python_api/wenet.efficient_conformer.convolution.rst", "python_api/wenet.efficient_conformer.encoder.rst", "python_api/wenet.efficient_conformer.encoder_layer.rst", "python_api/wenet.efficient_conformer.subsampling.rst", "python_api/wenet.squeezeformer.rst", "python_api/wenet.squeezeformer.attention.rst", "python_api/wenet.squeezeformer.conv2d.rst", "python_api/wenet.squeezeformer.convolution.rst", "python_api/wenet.squeezeformer.encoder.rst", "python_api/wenet.squeezeformer.encoder_layer.rst", "python_api/wenet.squeezeformer.positionwise_feed_forward.rst", "python_api/wenet.squeezeformer.subsampling.rst", "python_api/wenet.transducer.rst", "python_api/wenet.transducer.joint.rst", "python_api/wenet.transducer.predictor.rst", "python_api/wenet.transducer.transducer.rst", "python_api/wenet.transformer.rst", "python_api/wenet.transformer.asr_model.rst", "python_api/wenet.transformer.attention.rst", "python_api/wenet.transformer.cmvn.rst", "python_api/wenet.transformer.convolution.rst", "python_api/wenet.transformer.ctc.rst", "python_api/wenet.transformer.decoder.rst", "python_api/wenet.transformer.decoder_layer.rst", "python_api/wenet.transformer.embedding.rst", "python_api/wenet.transformer.encoder.rst", "python_api/wenet.transformer.encoder_layer.rst", "python_api/wenet.transformer.label_smoothing_loss.rst", "python_api/wenet.transformer.positionwise_feed_forward.rst", "python_api/wenet.transformer.subsampling.rst", "python_api/wenet.transformer.swish.rst", "python_api/wenet.utils.rst", "python_api/wenet.utils.checkpoint.rst", "python_api/wenet.utils.cmvn.rst", "python_api/wenet.utils.common.rst", "python_api/wenet.utils.config.rst", "python_api/wenet.utils.ctc_util.rst", "python_api/wenet.utils.executor.rst", "python_api/wenet.utils.file_utils.rst", "python_api/wenet.utils.init_model.rst", "python_api/wenet.utils.mask.rst", "python_api/wenet.utils.scheduler.rst", "python_binding.md", "reference.rst", "requirements.txt", "runtime.md", "train.rst", "tutorial_aishell.md", "tutorial_librispeech.md"], "titles": ["Big Data Training: UIO", "Context Biasing", "Welcome to wenet\u2019s documentation!", "Install", "JIT in WeNet", "LM for WeNet", "Papers", "Pretrained Models in WeNet", "Pretrained Models in WeNet", "Production Runtime", "Python API Reference", "wenet package", "wenet.dataset package", "wenet.dataset.dataset module", "wenet.dataset.kaldi_io module", "wenet.dataset.processor module", "wenet.dataset.wav_distortion module", "wenet.efficient_conformer package", "wenet.efficient_conformer.attention module", "wenet.efficient_conformer.convolution module", "wenet.efficient_conformer.encoder module", "wenet.efficient_conformer.encoder_layer module", "wenet.efficient_conformer.subsampling module", "wenet.squeezeformer package", "wenet.squeezeformer.attention module", "wenet.squeezeformer.conv2d module", "wenet.squeezeformer.convolution module", "wenet.squeezeformer.encoder module", "wenet.squeezeformer.encoder_layer module", "wenet.squeezeformer.positionwise_feed_forward module", "wenet.squeezeformer.subsampling module", "wenet.transducer package", "wenet.transducer.joint module", "wenet.transducer.predictor module", "wenet.transducer.transducer module", "wenet.transformer package", "wenet.transformer.asr_model module", "wenet.transformer.attention module", "wenet.transformer.cmvn module", "wenet.transformer.convolution module", "wenet.transformer.ctc module", "wenet.transformer.decoder module", "wenet.transformer.decoder_layer module", "wenet.transformer.embedding module", "wenet.transformer.encoder module", "wenet.transformer.encoder_layer module", "wenet.transformer.label_smoothing_loss module", "wenet.transformer.positionwise_feed_forward module", "wenet.transformer.subsampling module", "wenet.transformer.swish module", "wenet.utils package", "wenet.utils.checkpoint module", "wenet.utils.cmvn module", "wenet.utils.common module", "wenet.utils.config module", "wenet.utils.ctc_util module", "wenet.utils.executor module", "wenet.utils.file_utils module", "wenet.utils.init_model module", "wenet.utils.mask module", "wenet.utils.scheduler module", "Python Binding", "Reference", "&lt;no title&gt;", "Runtime for WeNet", "How to train models?", "Tutorial on AIShell", "Tutorial on LibriSpeech"], "terms": {"In": [0, 1, 5, 16, 46, 59, 64, 66, 67], "order": [0, 1, 41], "support": [0, 1, 5, 61, 67], "model": [0, 1, 2, 3, 4, 5, 13, 15, 19, 20, 26, 27, 34, 36, 39, 42, 44, 46, 56, 61, 64], "industri": [0, 5, 64], "ten": 0, "million": 0, "hour": [0, 66, 67], "speech": [0, 3, 5, 6, 34, 36, 61, 64, 66, 67], "dataset": [0, 5, 7, 8, 11, 66, 67], "process": [0, 1, 66, 67], "method": [0, 4, 33, 64, 66, 67], "unifi": [0, 5, 41, 45, 64, 67], "ha": [0, 5, 7, 8, 15, 64], "been": [0, 5, 7, 8], "updat": [0, 1, 4, 13], "wenet": [0, 1, 3, 6, 9, 10, 61, 65], "The": [0, 1, 5, 7, 8, 13, 16, 18, 24, 29, 37, 46, 47, 53, 57, 59, 60, 61, 64, 66, 67], "document": 0, "introduc": [0, 61], "from": [0, 1, 5, 13, 15, 16, 34, 36, 46, 57, 64, 66, 67], "follow": [0, 1, 3, 4, 5, 7, 8, 60, 61, 64, 66, 67], "section": [0, 15, 64], "old": [0, 67], "i": [0, 1, 2, 3, 4, 5, 7, 8, 13, 15, 19, 20, 26, 27, 29, 33, 34, 36, 37, 39, 41, 42, 43, 44, 46, 47, 57, 59, 60, 61, 64, 66, 67], "base": [0, 1, 2, 5, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 59, 60, 64, 66, 67], "pytorch": [0, 4, 7, 8, 41, 64], "": [0, 1, 5, 7, 8, 34, 36, 45, 46, 59, 64, 67], "nativ": 0, "dure": [0, 1, 67], "need": [0, 1, 5, 20, 25, 27, 28, 30, 33, 44, 59], "load": [0, 4], "all": [0, 5, 20, 25, 27, 28, 30, 33, 34, 36, 44, 59, 60, 64], "audio": [0, 30, 66, 67], "path": [0, 1, 4, 34, 36, 57, 66, 67], "correspondingli": 0, "label": [0, 1, 15, 46, 53], "memori": [0, 41, 42, 66, 67], "one": [0, 1, 5, 15, 20, 25, 27, 28, 30, 33, 36, 41, 44, 56, 59, 64, 66, 67], "time": [0, 1, 15, 18, 19, 20, 21, 22, 24, 26, 27, 30, 34, 36, 37, 39, 43, 44, 45, 48, 61, 64, 66, 67], "randomli": [0, 16], "read": [0, 57], "case": [0, 37, 59, 64, 67], "grade": 0, "ultra": 0, "larg": [0, 1, 64, 66, 67], "scale": [0, 18, 24, 37], "eg": 0, "more": [0, 3, 6, 64, 66, 67], "than": [0, 15, 59, 64, 66, 67], "50": [0, 15, 16, 66, 67], "000": 0, "thi": [0, 1, 3, 5, 16, 20, 25, 27, 28, 30, 33, 41, 43, 44, 59, 60, 61, 66, 67], "caus": [0, 66, 67], "fail": [0, 1, 4, 64], "run": [0, 25, 27, 28, 30, 33, 66, 67], "two": [0, 4, 5, 7, 8, 13, 64, 66, 67], "reason": [0, 5, 66, 67], "out": [0, 5, 36, 66, 67], "oom": 0, "physic": 0, "gener": [0, 5, 16, 64], "machin": [0, 66, 67], "difficult": 0, "slow": 0, "down": 0, "perform": [0, 1, 25, 27, 28, 30, 33, 53], "cannot": 0, "us": [0, 1, 3, 4, 7, 8, 15, 16, 19, 20, 21, 26, 27, 28, 34, 36, 39, 41, 42, 44, 45, 59, 61, 64], "file": [0, 1, 13, 15, 57, 61, 66, 67], "cach": [0, 18, 19, 20, 21, 24, 26, 27, 33, 34, 36, 37, 39, 41, 42, 44, 45], "speed": [0, 5, 15], "greatli": 0, "reduc": [0, 7, 8, 40], "inspir": 0, "webdataset": 0, "tfrecord": 0, "redesign": 0, "Its": [0, 43], "core": [0, 5], "idea": 0, "make": [0, 20, 27, 44, 59, 64], "multipl": [0, 36, 61], "small": [0, 20, 27, 44, 64], "1000": 0, "piec": [0, 67], "compress": 0, "packet": 0, "tar": [0, 13, 15], "them": [0, 25, 27, 28, 30, 33, 67], "iterabledataset": [0, 13], "advantag": [0, 64], "onli": [0, 1, 5, 19, 20, 26, 27, 39, 41, 42, 43, 44, 59, 64, 67], "index": [0, 2, 53, 67], "inform": [0, 1], "packag": [0, 2, 10], "maintain": [0, 60], "which": [0, 1, 4, 5, 15, 16, 20, 27, 36, 44, 46, 59, 60, 61, 64, 66, 67], "save": [0, 4, 7, 8, 67], "solv": 0, "problem": [0, 1, 66, 67], "fly": [0, 1, 66, 67], "decompress": 0, "same": [0, 1, 5, 15, 27, 29, 34, 36, 44, 47, 59, 60, 61, 66, 67], "sequenc": [0, 5, 29, 40, 46, 47, 53, 59, 64, 66, 67], "random": [0, 20, 44, 59], "differ": [0, 1, 5, 7, 8, 20, 27, 37, 44, 59, 60, 64], "can": [0, 1, 3, 4, 5, 7, 8, 15, 20, 21, 27, 28, 42, 44, 45, 61, 64, 66, 67], "ensur": [0, 4], "global": [0, 13, 66, 67], "new": [0, 1, 27, 34, 36, 44], "take": [0, 20, 25, 27, 28, 30, 33, 44, 66, 67], "account": [0, 20, 27, 44], "both": [0, 5, 59, 64], "provid": [0, 7, 8, 61, 66, 67], "we": [0, 1, 4, 5, 7, 8, 13, 15, 20, 27, 36, 43, 44, 59, 61, 64, 66, 67], "call": [0, 1, 25, 27, 28, 30, 33, 34, 36, 43, 64, 66, 67], "shown": [0, 5, 67], "figur": 0, "below": [0, 5, 57], "some": [0, 1, 20, 27, 44, 46, 66, 67], "necessari": [0, 1, 59], "explan": 0, "about": [0, 66, 67], "abov": [0, 1, 3, 61], "mode": [0, 25, 59, 66, 67], "local": [0, 5, 15, 66, 67], "requir": [0, 3, 4, 5, 7, 8, 20, 27, 34, 36, 43, 44, 61, 64, 66, 67], "must": [0, 21, 45, 66, 67], "sort": [0, 12, 15, 67], "kaldi": [0, 1, 5, 67], "style": [0, 5, 20, 27, 44, 66, 67], "wav": [0, 1, 5, 15, 61], "scp": [0, 5, 66, 67], "text": [0, 1, 5, 15, 34, 36, 66, 67], "It": [0, 1, 5, 64, 66, 67], "befor": [0, 1, 4, 15, 21, 28, 36, 41, 42, 45, 67], "share": [0, 64, 66, 67], "network": [0, 7, 8, 20, 27, 44], "cloud": 0, "storag": 0, "txt": [0, 1, 3, 5, 15, 61, 66, 67], "ar": [0, 1, 5, 8, 16, 20, 27, 29, 44, 46, 47, 61, 64, 66, 67], "store": 0, "singl": [0, 1, 42], "also": [0, 1, 5, 61, 64, 66, 67], "adopt": [0, 1, 64], "implement": [0, 20, 27, 44], "practic": [0, 1, 64], "flexibl": 0, "easier": 0, "expand": [0, 15], "debug": 0, "exampl": [0, 1, 5, 7, 8, 53, 59, 61, 66, 67], "def": 0, "read_dataset": 0, "filenam": 0, "batch_siz": [0, 15, 33, 59, 66, 67], "tf": 0, "tfrecorddataset": 0, "map": [0, 66, 67], "_parse_image_funct": 0, "num_parallel_cal": 0, "experiment": 0, "autotun": 0, "shuffl": [0, 12, 13, 15], "500": [0, 15, 67], "batch": [0, 12, 15, 18, 19, 20, 21, 22, 24, 26, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 59], "drop_remaind": 0, "true": [0, 1, 13, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 59, 61, 66, 67], "repeat": 0, "prefetch": 0, "buffer_s": 0, "return": [0, 1, 13, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 59], "refer": [0, 2, 4, 61, 66, 67], "dataflow": 0, "includ": [0, 1, 5, 41, 61], "modul": [0, 2, 4, 12, 17, 23, 31, 35, 50, 64], "token": [0, 1, 12, 15, 41, 53], "convert": 0, "specifi": [0, 1, 61, 67], "unit": [0, 1, 5, 15, 29, 41, 47, 61, 66, 67], "char": [0, 5, 15, 66, 67], "bpe": [0, 5, 13, 15, 67], "filter": [0, 12, 15, 30], "unqualifi": 0, "resampl": [0, 12, 15], "option": [0, 3, 5, 15, 16, 59, 61], "comput": [0, 1, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 33, 37, 39, 42, 43, 44, 45, 46, 59, 64, 66, 67], "_": [0, 1, 5, 61, 64, 66, 67], "fbank": [0, 15], "featur": [0, 15, 18, 21, 24, 37, 38, 42, 45], "extract": [0, 15], "spec": [0, 15], "augment": [0, 15], "enhanc": 0, "disrupt": 0, "organ": [0, 5, 66, 67], "pad": [0, 12, 15, 19, 20, 21, 25, 26, 33, 36, 37, 39, 40, 41, 44, 45, 46, 53, 59], "what": [0, 4, 5], "There": [0, 5], "sever": [0, 20, 27, 43, 44, 64, 66, 67], "paramet": [0, 13, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 57, 59, 60, 61, 66, 67], "note": [0, 3, 60, 61], "first": [0, 5, 13, 36, 61, 64], "buffer": [0, 15], "size": [0, 7, 8, 15, 18, 19, 20, 21, 24, 26, 27, 28, 30, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 59, 64, 66, 67], "recommend": 0, "larger": 0, "number": [0, 15, 16, 18, 20, 24, 29, 37, 41, 44, 46, 47, 59, 60, 66, 67], "contain": [0, 1, 41, 59, 61, 66, 67], "each": [0, 1, 16, 21, 28, 29, 36, 41, 42, 45, 47, 66, 67], "equival": 0, "between": [0, 1, 37, 46, 66], "increas": [0, 43], "you": [0, 3, 4, 5, 7, 8, 61, 64, 66, 67], "set": [0, 16, 20, 34, 36, 44, 59, 64, 66, 67], "1500": 0, "accord": [0, 1, 5, 13, 15], "frame": [0, 1, 5, 15, 40, 64], "oper": [0, 15, 25], "veri": [0, 5, 20, 27, 44, 61, 64], "import": [0, 61], "improv": [0, 1], "dataload": [0, 66], "pre": 0, "granular": 0, "final": [0, 1, 5, 61, 64, 67], "default": [0, 16, 20, 44, 59], "2": [0, 1, 5, 6, 15, 18, 20, 21, 22, 24, 27, 30, 33, 34, 36, 37, 41, 44, 45, 46, 53, 59, 61, 64], "due": 0, "exist": 0, "mai": [0, 1, 5, 59, 66, 67], "alreadi": [0, 36, 66, 67], "so": [0, 5, 15, 36, 43, 53, 61, 64, 66, 67], "real": [0, 59], "when": [0, 1, 4, 15, 37, 59, 61, 64, 66, 67], "insuffici": 0, "next": [0, 1, 20, 27, 34, 36, 44], "fill": 0, "At": 0, "block": [0, 21, 28, 37, 41, 42, 45, 59], "word": [0, 1, 5, 36, 61, 64, 66, 67], "part": [0, 5, 13, 18, 24, 37, 46, 59, 64, 67], "becaus": 0, "previou": [0, 64], "still": 0, "therefor": [0, 5, 64], "avoid": [0, 1, 59, 64], "present": 0, "have": [0, 1, 3, 5, 13, 59, 66, 67], "verifi": 0, "accuraci": [0, 1, 53, 64], "200": [0, 15], "10000": [0, 15, 43], "respect": 0, "cer": 0, "4": [0, 5, 7, 8, 16, 20, 22, 27, 30, 37, 41, 44, 48, 53, 59], "61": 0, "63": 0, "67": 0, "espnet": [0, 67], "similar": [0, 15], "structur": [0, 5, 8, 66, 67], "configur": 0, "thei": [0, 1, 66, 67], "achiev": [0, 64], "recognit": [0, 1, 3, 5, 6, 61, 64, 66, 67], "rate": [0, 15, 16, 18, 20, 21, 22, 24, 27, 28, 29, 37, 41, 42, 43, 44, 45, 46, 47, 48, 60, 64, 66, 67], "show": [0, 5, 64, 66, 67], "correct": 0, "And": [0, 3, 5, 7, 8, 15], "observ": 0, "util": [0, 11, 67], "gpu": [0, 66, 67], "80": [0, 15, 16, 27, 30], "90": 0, "indic": [0, 1, 59, 66], "effici": 0, "high": [0, 60], "For": [0, 5, 7, 8, 43, 61, 64, 66, 67], "detail": [0, 4, 5, 61, 66, 67], "pleas": [0, 3, 5, 7, 61, 64, 66, 67], "http": [0, 3, 4, 5, 7, 8, 15, 18, 24, 33, 37, 43, 61, 67], "github": [0, 3, 5, 61, 66, 67], "com": [0, 3, 5, 61], "e2": [0, 3, 5, 61, 67], "blob": [0, 5, 61], "main": [0, 5, 61], "s0": [0, 66, 67], "sh": [0, 5, 66, 67], "prepar": [0, 5], "three": [0, 20, 27, 44], "relat": [0, 5, 67], "script": [0, 4, 66, 67], "py": [0, 4, 5, 61, 64, 66, 67], "train_data": [0, 67], "cv_data": [0, 67], "test_data": [0, 67], "list": [0, 1, 13, 15, 16, 20, 27, 33, 34, 36, 41, 53, 61, 64, 66, 67], "data_typ": [0, 13, 67], "symbol_t": [0, 13, 15, 36, 67], "python": [0, 2, 4, 7, 8, 62, 64, 67], "bin": [0, 4, 66, 67], "gpu_id": [0, 67], "config": [0, 50, 53, 66, 67], "train_config": [0, 67], "dict": [0, 5, 16, 34, 36, 66, 67], "feat_dir": 0, "train_set": [0, 67], "dev": [0, 67], "If": [0, 1, 3, 4, 18, 24, 37, 42, 59, 61, 66, 67], "type": [0, 4, 13, 18, 19, 20, 21, 22, 24, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 59, 64, 66, 67], "format": [0, 5, 57], "kei": [0, 15, 18, 20, 21, 24, 27, 34, 36, 37, 44, 45, 66, 67], "bac009s0002w0122": [0, 66], "export": [0, 1, 4, 7, 8, 20, 34, 36, 64], "asr": [0, 1, 2, 61, 64, 66, 67], "openslr": [0, 7, 8, 66, 67], "33": [0, 66], "data_aishel": [0, 5, 66], "s0002": [0, 66], "\u800c\u5bf9\u697c\u5e02\u6210\u4ea4\u6291\u5236\u4f5c\u7528\u6700\u5927\u7684\u9650\u8d2d": [0, 66], "bac009s0002w0123": [0, 66], "\u4e5f\u6210\u4e3a\u5730\u65b9\u653f\u5e9c\u7684\u773c\u4e2d\u9489": [0, 66], "bac009s0002w0124": [0, 66], "\u81ea\u516d\u6708\u5e95\u547c\u548c\u6d69\u7279\u5e02\u7387\u5148\u5ba3\u5e03\u53d6\u6d88\u9650\u8d2d\u540e": [0, 66], "line": [0, 1, 15, 66, 67], "json": [0, 15, 66, 67], "serial": 0, "string": 0, "field": [0, 66, 67], "1": [0, 1, 5, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 53, 59, 60, 61, 64], "maryland": 0, "binbinzhang": 0, "code": [0, 1, 4, 5, 7, 8, 64, 67], "s3": 0, "raw_wav": [0, 66], "shards_000000000": 0, "gz": [0, 67], "shards_000000001": 0, "shards_000000002": 0, "oss": 0, "examplebucket": 0, "cn": [0, 7, 8], "hangzhou": 0, "aliyunc": 0, "exampledir": 0, "q1": 0, "how": [0, 1, 2, 4, 64, 66, 67], "distribut": [0, 46], "partit": [0, 13], "rank": [0, 13, 67], "num": [0, 67], "worker": 0, "segment": 0, "class": [0, 5, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 60], "distributedsampl": [0, 12, 13], "__init__": 0, "self": [0, 20, 21, 28, 34, 37, 41, 42, 45, 46], "epoch": [0, 13, 56, 66, 67], "set_epoch": [0, 13], "sampl": [0, 13, 15, 16], "rang": [0, 5, 61], "len": [0, 53, 61], "world_siz": [0, 13, 67], "worker_id": 0, "num_work": [0, 13, 67], "q2": 0, "deal": 0, "unbalanc": 0, "join": [0, 4], "handl": [0, 64], "imbal": 0, "alloc": 0, "applic": [1, 3, 5], "effect": 1, "commonli": 1, "better": [1, 64, 66, 67], "uniqu": 1, "low": 1, "contextu": [1, 61], "inject": 1, "prior": 1, "knowledg": 1, "an": [1, 2, 5, 49, 59, 61, 64, 66, 67], "system": [1, 64, 67], "infer": [1, 20, 33, 64, 66, 67], "user": [1, 7, 8], "favorit": 1, "song": 1, "contact": [1, 5], "app": 1, "locat": 1, "convent": [1, 46], "build": [1, 2, 5, 67], "n": [1, 3, 5, 16, 61, 64, 66, 67], "gram": [1, 5, 67], "finit": 1, "state": [1, 40], "transduc": [1, 11, 53], "fst": [1, 5, 61, 67], "phrase": 1, "compos": [1, 5], "decod": [1, 5, 15, 20, 27, 34, 35, 36, 37, 42, 44, 59, 61, 64, 66, 67], "help": 1, "bia": [1, 19, 25, 26, 33, 39], "result": [1, 7, 8, 20, 27, 34, 36, 44, 59, 61, 64, 66, 67], "toward": 1, "thu": 1, "certain": 1, "scenario": [1, 5, 43, 64], "score": [1, 18, 24, 36, 37, 41, 59, 61, 64], "p": [1, 5, 18, 32, 67], "c": [1, 4, 34, 36, 64, 66, 67], "mathbf": 1, "y": [1, 41, 64], "interpol": 1, "x": [1, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 59, 64, 67], "shallow": 1, "fusion": 1, "mathrm": 1, "arg": [1, 4, 13, 15, 49, 53, 56, 64], "max": [1, 15, 16, 59], "log": [1, 5, 36, 40, 53, 64], "lambda": 1, "where": [1, 18, 20, 22, 24, 27, 34, 36, 37, 44, 48, 64], "tunabl": [1, 66, 67], "hyperparamet": 1, "control": [1, 20, 27, 44, 61], "much": [1, 4, 64], "lm": [1, 2, 3, 9, 61], "influenc": 1, "overal": [1, 64], "want": [1, 3, 4, 66, 67], "cat": [1, 67], "charact": [1, 40, 66], "0": [1, 5, 6, 7, 8, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 53, 59, 60, 61], "25": [1, 15], "construct": [1, 13, 49], "correspond": [1, 5, 7, 8, 36, 43], "match": 1, "reward": 1, "obtain": 1, "artifici": 1, "boost": [1, 66, 67], "earli": 1, "do": [1, 4, 5, 13, 15, 20, 27, 30, 34, 36, 44, 59, 66, 67], "entir": 1, "add": [1, 32, 43, 53, 60], "special": [1, 20, 27, 44], "failur": 1, "arc": 1, "remov": 1, "record": [1, 66, 67], "easili": [1, 64, 66, 67], "determin": 1, "boundari": 1, "hot": 1, "That": 1, "after": [1, 13, 15, 20, 21, 28, 41, 42, 44, 45, 60, 66, 67], "succe": 1, "other": [1, 5, 42, 46, 61, 64, 66, 67], "start": [1, 43, 66, 67], "int": [1, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 59, 60, 61], "contextgraph": 1, "getnextst": 1, "cur_stat": 1, "word_id": 1, "float": [1, 15, 16, 18, 20, 21, 22, 24, 27, 28, 29, 30, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 60, 61], "bool": [1, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 61], "is_start_boundari": 1, "is_end_boundari": 1, "next_stat": 1, "travers": 1, "current": [1, 20, 27, 34, 36, 37, 44, 59, 64], "arciter": 1, "stdfst": 1, "aiter": 1, "graph_": 1, "done": [1, 67], "const": 1, "stdarc": 1, "valu": [1, 16, 18, 20, 21, 24, 27, 33, 34, 36, 37, 41, 44, 45, 46, 53, 59], "ilabel": 1, "backoff": 1, "might": 1, "cover": 1, "weight": [1, 18, 24, 25, 34, 36, 37], "els": [1, 61], "nextstat": 1, "check": [1, 4, 66, 67], "whether": [1, 5, 13, 30, 34, 36, 41, 59, 61], "One": 1, "break": 1, "append": 1, "output": [1, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 61, 64, 66, 67], "chang": [1, 5, 16, 64, 66, 67], "function": [1, 4, 5, 16, 25, 27, 28, 29, 30, 33, 43, 47, 49, 53, 59, 66, 67], "end": [1, 2, 5, 6, 61, 64, 66, 67], "posit": [1, 16, 18, 20, 21, 22, 24, 29, 30, 37, 41, 43, 44, 45, 47, 48], "insert": 1, "tag": 1, "bag": 1, "lattic": 1, "faster": [1, 64], "onlin": 1, "modifi": [1, 4, 5, 30], "cc": [1, 5, 7, 8, 64], "tlg": [1, 5, 61, 67], "input": [1, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 47, 48, 59, 64, 66, 67], "decid": 1, "processemit": 1, "processnonemit": 1, "elem": 1, "e_next": 1, "findoraddtoken": 1, "tot_cost": 1, "tok": 1, "null": 1, "begin": [1, 36, 67], "fals": [1, 15, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 61, 66, 67], "context_scor": [1, 61], "context_graph_": 1, "olabel": 1, "val": 1, "context_st": 1, "graph_cost": 1, "forwardlink": 1, "next_tok": 1, "put": [1, 5], "head": [1, 18, 20, 21, 24, 27, 34, 36, 37, 41, 44, 45], "link": [1, 8], "forwardlinkt": 1, "ac_cost": 1, "accumul": [1, 5], "lead": 1, "cost": [1, 64, 66, 67], "too": 1, "void": 1, "latticefasterdecodertpl": 1, "pruneforwardlink": 1, "int32": [1, 53], "frame_plus_on": 1, "extra_costs_chang": 1, "links_prun": 1, "basefloat": 1, "delta": 1, "link_extra_cost": 1, "extra_cost": 1, "acoustic_cost": 1, "bracket": 1, "mean": [1, 18, 19, 20, 21, 24, 26, 27, 34, 36, 37, 38, 39, 44, 45, 46, 57, 59, 61, 66, 67], "link_exta_cost": 1, "best": [1, 5, 34, 36, 61, 64, 66, 67], "through": [1, 66, 67], "sourc": [1, 13, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 56, 57, 59, 60], "destin": 1, "context_path": 1, "split": [1, 5], "symbol": [1, 36, 57, 61, 64, 66, 67], "tabl": [1, 61, 63], "oov": 1, "cd": [1, 3, 61, 66, 67], "home": [1, 66], "runtim": [1, 2, 3, 5, 7, 8, 61], "libtorch": [1, 3, 61, 64, 66, 67], "glog_logtostderr": 1, "glog_v": 1, "wav_path": [1, 66, 67], "docker_resourc": 1, "test": [1, 5], "model_dir": [1, 4, 61, 67], "decoder_main": 1, "chunk_siz": [1, 18, 20, 24, 27, 34, 36, 37, 44, 59], "model_path": 1, "zip": [1, 4, 5, 7, 8, 61, 67], "3": [1, 3, 5, 15, 18, 20, 34, 37, 53, 59, 61, 64], "unit_path": 1, "tee": 1, "tansform": 2, "toolkit": [2, 6, 61], "instal": [2, 66, 67], "prebuilt": 2, "train": [2, 4, 5, 7, 8, 13, 15, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 59, 60, 64], "deploy": 2, "tutori": [2, 65], "librispeech": [2, 5, 7, 8, 65], "aishel": [2, 5, 7, 8, 65], "pretrain": [2, 61, 65, 67], "big": [2, 65, 66, 67], "data": [2, 5, 13, 15, 46, 65], "uio": [2, 65], "product": [2, 4, 5, 6, 18, 24, 37, 61], "context": [2, 9, 18, 19, 20, 24, 26, 27, 37, 39, 44, 59, 61, 64], "bias": [2, 9, 61], "jit": [2, 7, 8, 9, 64], "bind": [2, 62], "paper": [2, 18, 24, 37, 62, 66, 67], "api": [2, 41, 45, 61, 62], "search": [2, 5, 34, 36, 64, 66, 67], "page": 2, "just": [3, 5, 20, 27, 43, 44, 45, 64, 66, 67], "pip": 3, "6": [3, 20, 41, 44, 48, 53, 61], "pip3": [3, 61], "wenetruntim": [3, 61], "see": [3, 4, 5, 7, 8, 34, 37, 43, 59, 64, 66, 67], "doc": [3, 61], "usag": 3, "clone": [3, 61], "repo": 3, "git": [3, 61], "conda": 3, "io": [3, 4], "en": [3, 4, 7, 8, 61, 67], "latest": [3, 4], "miniconda": 3, "html": [3, 4], "creat": [3, 59], "env": 3, "8": [3, 5, 16, 48, 53, 66, 67], "activ": [3, 19, 26, 29, 32, 33, 36, 39, 40, 47, 49, 53, 64], "r": 3, "x86": [3, 7, 8, 64], "languag": [3, 4, 5, 7, 8, 61, 66, 67], "otherwis": [3, 67], "ignor": [3, 25, 27, 28, 30, 33, 46, 53, 59], "step": [3, 33, 41, 59, 60, 66, 67], "cmake": 3, "14": 3, "mkdir": [3, 5, 67], "dgraph_tool": 3, "ON": [3, 67], "platform": 3, "o": [3, 4], "our": [4, 7, 8, 64, 67], "directli": [4, 5, 7, 8, 64], "torch": [4, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 59, 61, 63, 64, 66, 67], "essenti": 4, "deploi": 4, "resourc": [4, 67], "introduct": [4, 64], "TO": [4, 67], "torchscript": [4, 61], "A": [4, 5, 16, 59, 67], "IN": [4, 67], "deep": 4, "dive": 4, "research": [4, 5], "To": [4, 5, 59], "try": [4, 66, 67], "stage": [4, 13, 60], "should": [4, 15, 20, 25, 27, 28, 30, 33, 44, 46, 59, 60, 64], "satisfi": 4, "script_model": 4, "init": [4, 67], "principl": [4, 5], "taken": [4, 20, 27, 44, 46], "consider": 4, "contribut": 4, "especi": [4, 5, 15], "subclass": [4, 25, 27, 28, 30, 33], "nn": [4, 20, 21, 27, 28, 29, 30, 41, 42, 44, 45, 47, 48, 66, 67], "forward": [4, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 64], "know": 4, "allow": [4, 59], "disallow": 4, "tensor": [4, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 59], "unsupport": 4, "attribut": 4, "coverag": 4, "explicit": 4, "possibl": [4, 67], "forc": 4, "typeguard": [4, 63], "readthedoc": 4, "userguid": 4, "statist": [5, 66, 67], "wfst": 5, "framework": [5, 64], "custom": [5, 48, 66, 67], "why": 5, "question": 5, "mani": 5, "peopl": [5, 66, 67], "ask": [5, 66, 67], "now": 5, "rnn": [5, 33], "transform": [5, 11, 18, 20, 24, 27, 34, 53, 64, 66, 67], "full": [5, 20, 34, 36, 44, 59, 67], "swing": 5, "doe": [5, 45, 66, 67], "go": [5, 66, 67], "backward": 5, "simpl": [5, 64, 66, 67], "matur": 5, "complet": 5, "tool": [5, 61, 66, 67], "ani": [5, 57, 66, 67], "amount": 5, "corpu": [5, 67], "fast": [5, 64], "hotfix": 5, "easi": 5, "wide": 5, "actual": [5, 20, 27, 34, 36, 44, 66, 67], "second": [5, 13, 61], "sinc": [5, 7, 8, 25, 27, 28, 30, 33, 64], "work": [5, 20, 27, 44, 59, 64, 66, 67], "hard": 5, "abandon": 5, "tradit": [5, 64], "complex": 5, "technologi": 5, "back": 5, "standard": [5, 46, 64], "power": 5, "solut": 5, "bug": 5, "fix": [5, 20, 34, 36, 44, 59], "replac": 5, "person": 5, "like": [5, 16, 20, 27, 44, 57, 66, 67], "goal": 5, "readi": [5, 61], "prioriti": 5, "draw": 5, "pure": 5, "As": 5, "describ": [5, 33, 64], "choos": 5, "your": [5, 66, 67], "whole": [5, 20, 27, 43, 44, 64, 66, 67], "bellow": 5, "pictur": [5, 64], "wai": [5, 43, 64], "without": [5, 48, 66], "ctc": [5, 34, 35, 36, 64, 66, 67], "prefix": [5, 15, 34, 36, 64, 66, 67], "beam": [5, 34, 36, 64, 66, 67], "With": [5, 64], "graph": 5, "t": [5, 20, 27, 32, 37, 44, 61, 64], "lexicon": [5, 67], "l": [5, 29, 37, 47, 59, 67], "g": [5, 16, 46, 66, 67], "typic": [5, 20, 27, 44, 64, 67], "chines": [5, 7, 61], "english": [5, 13, 15, 61, 67], "its": [5, 59], "\u6211\u4eec": 5, "\u6211": 5, "\u4eec": 5, "appl": 5, "five": 5, "letter": 5, "e": [5, 16, 32, 46, 64, 66, 67], "phonem": 5, "pronunci": 5, "purpos": 5, "name": [5, 66, 67], "compil": 5, "represent": 5, "viterbi": 5, "algorithm": [5, 66, 67], "eas": 5, "keep": [5, 60], "independ": 5, "migrat": 5, "directori": [5, 61, 67], "minim": [5, 15], "remain": 5, "origin": [5, 16, 27, 34, 36, 44, 66, 67], "glog": 5, "meet": [5, 66, 67], "lint": 5, "wrap": 5, "latticefasterdecod": 5, "blank": [5, 34, 53, 66, 67], "skip": [5, 66, 67], "up": [5, 60], "addit": [5, 21, 45, 64], "arpa2fst": 5, "fstdeterminizestar": 5, "fsttablecompos": 5, "fstminimizeencod": 5, "built": 5, "box": 5, "get": [5, 16, 36, 43, 61, 64, 66, 67], "consist": 5, "gain": [5, 16], "10": [5, 15, 36, 53, 67], "aishell2": [5, 7, 8], "here": [5, 7, 8, 20, 27, 34, 36, 44, 45, 64, 66, 67], "dictionari": 5, "7": [5, 34, 53, 66], "unit_fil": [5, 67], "cp": [5, 67], "prepare_dict": [5, 67], "resource_aishel": 5, "filter_scp": 5, "pl": 5, "transcript": [5, 66, 67], "aishell_transcript_v0": 5, "aishell_train_lm": 5, "compile_lexicon_token_fst": [5, 67], "tmp": [5, 67], "lang": [5, 61, 67], "make_tlg": [5, 67], "lang_test": [5, 67], "exit": [5, 67], "nj": [5, 67], "16": [5, 15, 67], "15": [5, 16, 19, 20, 26, 39, 44], "lattice_beam": [5, 67], "5": [5, 27, 30, 34, 36, 53, 59, 60, 61], "max_act": [5, 67], "7000": [5, 67], "blank_skip_thresh": [5, 67], "98": [5, 67], "ctc_weight": [5, 34, 36, 67], "rescoring_weight": [5, 67], "fst_path": [5, 67], "dict_path": [5, 67], "dir": [5, 66, 67], "lm_with_runtim": 5, "orient": 6, "stream": [6, 15, 20, 27, 34, 36, 43, 44, 59, 64], "non": [6, 7, 57, 59, 64, 67], "accept": 6, "interspeech": 6, "2021": 6, "2022": 6, "facilit": [7, 8], "checkpoint": [7, 8, 50, 66, 67], "suffix": [7, 8], "pt": [7, 8, 66, 67], "reproduc": [7, 8], "publish": [7, 8], "continu": [7, 8, 61, 64, 66, 67], "android": [7, 8, 64], "quantiz": [7, 8], "traffic": [7, 8], "BY": [7, 8], "org": [7, 8, 15, 18, 24, 33, 37, 43, 67], "12": [7, 8, 27, 67], "visit": 7, "download": [7, 8, 61], "contributor": [7, 8], "conform": [7, 8, 18, 19, 20, 21, 26, 27, 34, 36, 39, 44, 45, 49, 64, 66, 67], "gigaspeech": [7, 8, 66, 67], "multi_cn": [7, 8], "wenetspeech": [7, 8, 66, 67], "given": [8, 61, 67], "subpackag": 10, "submodul": 11, "efficient_conform": 11, "squeezeform": 11, "datalist": [12, 13], "processor": [12, 13], "kaldi_io": 12, "compute_fbank": [12, 15], "compute_mfcc": [12, 15], "dynamic_batch": [12, 15], "parse_raw": [12, 15], "spec_aug": [12, 15], "spec_sub": [12, 15], "spec_trim": [12, 15], "speed_perturb": [12, 15], "static_batch": [12, 15], "tar_file_and_group": [12, 15], "url_open": [12, 15], "wav_distort": 12, "amp2db": [12, 16], "db2amp": [12, 16], "distort": [12, 16], "distort_chain": [12, 16], "distort_wav_conf": [12, 16], "distort_wav_conf_and_sav": [12, 16], "generate_amp_mask": [12, 16], "make_amp_mask": [12, 16], "make_fence_distort": [12, 16], "make_gain_db": [12, 16], "make_jag_distort": [12, 16], "make_max_distort": [12, 16], "make_poly_distort": [12, 16], "make_quad_distort": [12, 16], "data_list_fil": 13, "conf": [13, 16, 66, 67], "bpe_model": [13, 15], "none": [13, 15, 16, 18, 20, 21, 25, 27, 28, 33, 34, 36, 41, 42, 43, 44, 45, 57, 60], "non_lang_sym": [13, 15], "argument": [13, 21, 28, 42, 45, 60], "shard": [13, 66, 67], "raw": [13, 66, 67], "level": [13, 16, 43, 61, 64], "str": [13, 15, 19, 20, 25, 26, 27, 32, 33, 34, 36, 39, 41, 44, 53, 59, 61], "term": 13, "object": [13, 49, 56], "f": [13, 16, 67], "kw": 13, "appli": [13, 15, 16, 36, 37, 40, 43, 46, 59, 66, 67], "batch_typ": 15, "static": [15, 59], "max_frames_in_batch": 15, "12000": 15, "wrapper": 15, "dynam": [15, 20, 27, 34, 36, 44, 59, 67], "num_mel_bin": 15, "23": 15, "frame_length": 15, "frame_shift": 15, "dither": 15, "iter": 15, "sample_r": 15, "feat": [15, 41], "num_cep": 15, "40": 15, "high_freq": 15, "low_freq": 15, "20": 15, "mfcc": 15, "until": 15, "total": [15, 60, 67], "reach": 15, "max_fram": 15, "max_length": 15, "10240": 15, "min_length": 15, "token_max_length": 15, "token_min_length": 15, "min_output_input_ratio": 15, "0005": 15, "max_output_input_ratio": 15, "length": [15, 20, 22, 30, 34, 36, 40, 41, 43, 44, 46, 48, 59], "inplac": 15, "drop": 15, "utter": [15, 43, 66, 67], "greater": [15, 59, 66, 67], "10m": 15, "less": [15, 64, 66, 67], "ration": 15, "token_length": 15, "feats_length": 15, "maximum": [15, 43, 60], "tupl": [15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 48, 53], "pars": 15, "resample_r": 15, "16000": [15, 61], "target": [15, 46, 53], "shuffle_s": 15, "sort_siz": 15, "group": [15, 25, 64], "utt": 15, "num_t_mask": 15, "num_f_mask": 15, "max_t": 15, "max_f": 15, "max_w": 15, "mask": [15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 30, 37, 39, 41, 42, 44, 45, 46, 48, 50], "freq": 15, "width": 15, "warp": 15, "num_t_sub": 15, "substitut": 15, "ref": 15, "u2": [15, 64, 66, 67], "arxiv": [15, 18, 24, 33, 37, 43], "ab": [15, 18, 24, 37, 43, 67], "2106": 15, "05642": 15, "trim": 15, "tail": [15, 67], "trimtail": 15, "2211": 15, "00522": 15, "perturb": 15, "open": [15, 61, 67], "content": 15, "src": 15, "split_with_spac": 15, "give": [15, 34, 36, 59, 64], "url": 15, "descriptor": 15, "amp": 16, "db": 16, "func": 16, "waveform": 16, "point": 16, "wavefrom": 16, "probabl": [16, 34, 46], "distort_typ": 16, "distort_conf": 16, "wav_in": 16, "wav_out": 16, "mask_num": 16, "amplitud": 16, "domain": 16, "100db": 16, "0db": 16, "slot": 16, "defin": [16, 25, 27, 28, 30, 33, 60, 67], "100": [16, 67], "65": 16, "60": 16, "30": 16, "db_mask": 16, "fenc": 16, "shape": [16, 20, 27, 34, 36, 37, 41, 43, 44, 46, 59], "maxium": 16, "while": [16, 25, 27, 28, 30, 33, 60], "seper": 16, "neget": 16, "mask_numb": 16, "max_db": 16, "could": [16, 37, 59, 66, 67], "jag": 16, "ploynomi": 16, "m": 16, "attent": [17, 20, 21, 23, 27, 28, 34, 35, 36, 41, 42, 43, 44, 45, 59, 64, 66, 67], "groupedrelpositionmultiheadedattent": [17, 18], "convolut": [17, 20, 21, 22, 23, 27, 28, 30, 35, 44, 45, 48, 59], "convolutionmodul": [17, 19, 23, 26, 35, 39], "encod": [17, 18, 21, 22, 23, 24, 28, 30, 34, 35, 36, 37, 41, 42, 43, 45, 48, 59, 64, 66, 67], "efficientconformerencod": [17, 20], "encoder_lay": [17, 23, 35], "strideconformerencoderlay": [17, 21], "subsampl": [17, 20, 23, 27, 34, 35, 36, 44, 64], "conv2dsubsampling2": [17, 22], "multi": [18, 24, 37, 41, 66, 67], "layer": [18, 20, 21, 22, 24, 27, 28, 29, 33, 37, 41, 42, 44, 45, 47, 48, 64], "definit": [18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 37, 39, 41, 42, 44, 45, 47, 48], "n_head": [18, 24, 33, 37], "n_feat": [18, 24, 37], "dropout_r": [18, 20, 21, 22, 24, 28, 29, 37, 40, 41, 42, 43, 44, 45, 47, 48], "group_siz": [18, 20], "multiheadedattent": [18, 21, 24, 28, 35, 37, 42, 45], "rel": [18, 24, 37, 43], "1901": [18, 24, 37, 43], "02860": [18, 24, 37, 43], "2109": [18, 33], "01163": 18, "dropout": [18, 21, 22, 24, 27, 28, 29, 33, 37, 41, 42, 43, 45, 47, 48], "queri": [18, 24, 37], "dtype": [18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 37, 39, 41, 44, 45, 53, 59], "pos_emb": [18, 21, 24, 28, 37, 45], "dot": [18, 24, 37], "param": [18, 19, 20, 21, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 48, 60], "time1": [18, 24, 37], "time2": [18, 24, 37], "embed": [18, 24, 33, 35, 37], "cache_t": [18, 19, 24, 26, 37, 39], "d_k": [18, 20, 21, 24, 27, 34, 36, 37, 44, 45], "num_decoding_left_chunk": [18, 20, 24, 27, 34, 36, 37, 44, 59], "d_model": [18, 24, 37, 43, 60], "forward_attent": [18, 24, 37], "padding_q": 18, "vector": [18, 24, 37, 43], "fake": [18, 19, 21, 24, 26, 37, 39, 45], "groupedattent": 18, "effic": 18, "pad4group": 18, "q": 18, "k": [18, 67], "v": [18, 32, 67], "rel_shift": [18, 24, 37], "zero_triu": [18, 24, 37], "positin": [18, 24, 37], "lower": [18, 24, 37], "triangular": [18, 24, 37], "matrix": [18, 20, 24, 37], "channel": [19, 26, 30, 39], "kernel_s": [19, 25, 26, 30, 39], "relu": [19, 26, 29, 33, 39, 47], "norm": [19, 26, 33, 39], "batch_norm": [19, 20, 26, 27, 39, 44], "causal": [19, 20, 26, 27, 39, 44, 64], "stride": [19, 20, 25, 30, 64], "mask_pad": [19, 21, 26, 28, 30, 39, 45], "left": [19, 20, 26, 27, 36, 39, 41, 44, 59, 64], "mea": [19, 26, 39], "input_s": [20, 27, 30, 44], "output_s": [20, 27, 33, 44], "256": [20, 27, 30, 44], "attention_head": [20, 27, 41, 44], "linear_unit": [20, 41, 44], "2048": [20, 41, 44], "num_block": [20, 27, 41, 44], "positional_dropout_r": [20, 41, 44], "attention_dropout_r": [20, 27, 44], "input_lay": [20, 41, 44], "conv2d": [20, 23, 44], "pos_enc_layer_typ": [20, 27, 44], "rel_po": [20, 27, 44], "normalize_befor": [20, 21, 27, 28, 41, 42, 44, 45], "static_chunk_s": [20, 27, 44, 59], "use_dynamic_chunk": [20, 27, 44, 59], "global_cmvn": [20, 27, 44, 67], "use_dynamic_left_chunk": [20, 27, 44, 59], "macaron_styl": [20, 44], "activation_typ": [20, 27, 44], "swish": [20, 27, 33, 35, 44], "use_cnn_modul": [20, 44], "cnn_module_kernel": [20, 27, 44], "cnn_module_norm": [20, 44], "stride_layer_idx": 20, "group_layer_idx": 20, "stride_kernel": 20, "kwarg": [20, 49, 60], "calculate_downsampling_factor": [20, 27], "xs_len": [20, 27, 30, 44], "decoding_chunk_s": [20, 27, 34, 36, 44, 59, 67], "emb": [20, 33, 41, 44], "b": [20, 27, 29, 32, 33, 34, 36, 40, 43, 44, 47, 53, 59], "d": [20, 29, 40, 44, 47, 53, 59, 67], "chunk": [20, 27, 34, 36, 44, 59, 64, 67], "subsample_r": [20, 27, 34, 36, 44], "forward_chunk": [20, 27, 44], "offset": [20, 22, 27, 30, 34, 36, 43, 44, 48], "required_cache_s": [20, 27, 34, 36, 44], "att_cach": [20, 21, 27, 28, 34, 36, 44, 45], "cnn_cach": [20, 21, 27, 28, 34, 36, 44, 45], "att_mask": [20, 27, 44], "stamp": [20, 27, 34, 36, 44, 64], "compuat": [20, 27, 34, 36, 44], "histori": [20, 27, 33, 34, 36, 44, 64], "elay": [20, 27, 34, 36, 44], "cache_t1": [20, 21, 27, 34, 36, 44, 45], "hidden": [20, 27, 29, 34, 36, 40, 41, 44, 47], "dim": [20, 27, 29, 33, 34, 36, 41, 43, 44, 47], "cnn_modul": [20, 27, 34, 36, 44], "cache_t2": [20, 21, 27, 34, 36, 44, 45], "cnn": [20, 27, 34, 36, 44, 64], "lorder": [20, 27, 34, 36, 44], "forward_chunk_by_chunk": [20, 27, 44], "use_onnx": 20, "fashion": [20, 27, 34, 36, 43, 44], "pai": [20, 27, 44], "thing": [20, 27, 44, 61], "howev": [20, 27, 44, 64], "don": [20, 27, 44], "right": [20, 27, 36, 41, 44, 64], "overlap": [20, 27, 44, 64], "instead": [20, 25, 27, 28, 30, 33, 44], "even": [20, 27, 44], "though": [20, 27, 44], "wast": [20, 27, 44], "fraction": [20, 27, 44, 64], "covolut": [20, 27, 44], "tricki": [20, 27, 44], "complic": [20, 27, 44], "sequenti": [20, 27, 44], "stack": [20, 27, 44], "rewrit": [20, 27, 44], "prefer": [20, 27, 44], "max_len": [20, 27, 34, 36, 38, 43, 44, 59], "simul": 20, "onnx": 20, "set_global_chunk_s": 20, "self_attn": [21, 28, 42, 45], "feed_forward": [21, 42, 45], "feed_forward_macaron": [21, 45], "conv_modul": [21, 28, 45], "pointwise_conv_lay": 21, "dimens": [21, 22, 28, 30, 41, 42, 43, 45, 48, 67], "instanc": [21, 25, 27, 28, 30, 33, 42, 45], "relpositionmultiheadedattent": [21, 23, 24, 28, 35, 37, 45], "feed": [21, 28, 29, 42, 45, 47], "positionwisefeedforward": [21, 23, 28, 29, 30, 35, 42, 45, 47], "convlutionmodul": [21, 28, 45], "layer_norm": [21, 28, 41, 42, 45], "sub": [21, 28, 41, 42, 45], "conformerencoderlay": [21, 35, 45], "conv": [21, 30, 45], "cnn_cahc": [21, 45], "idim": [22, 29, 30, 47, 48], "odim": [22, 30, 40, 48], "pos_enc_class": [22, 30, 41, 48], "basesubsampl": [22, 30, 35, 48], "2d": [22, 30, 40, 48], "x_mask": [22, 30, 48], "conv2dvalid": [23, 25], "squeezeformerencod": [23, 27], "squeezeformerencoderlay": [23, 28], "positionwise_feed_forward": [23, 35], "depthwiseconv2dsubsampling4": [23, 30], "timereductionlayer1d": [23, 30], "timereductionlayer2d": [23, 30], "timereductionlayerstream": [23, 30], "do_rel_shift": [24, 27], "adaptive_scal": [24, 26, 27, 29], "init_weight": [24, 26, 27, 29, 30], "valid": [25, 56, 66, 67], "in_channel": 25, "out_channel": 25, "dilat": 25, "padding_mod": 25, "zero": [25, 33, 43, 59], "devic": [25, 33, 56, 59, 64, 66, 67], "valid_trigx": 25, "valid_trigi": 25, "_convnd": 25, "everi": [25, 27, 28, 30, 33, 61, 64], "overridden": [25, 27, 28, 30, 33], "although": [25, 27, 28, 30, 33], "recip": [25, 27, 28, 30, 33, 66, 67], "pass": [25, 27, 28, 30, 33, 37, 42, 59, 60, 64], "within": [25, 27, 28, 30, 33], "afterward": [25, 27, 28, 30, 33], "former": [25, 27, 28, 30, 33], "care": [25, 27, 28, 30, 33], "regist": [25, 27, 28, 30, 33], "hook": [25, 27, 28, 30, 33], "latter": [25, 27, 28, 30, 33], "silent": [25, 27, 28, 30, 33, 67], "output_pad": 25, "transpos": 25, "encoder_dim": [27, 30], "reduce_idx": 27, "recover_idx": 27, "11": [27, 53, 67], "feed_forward_expansion_factor": 27, "dw_stride": [27, 30], "input_dropout_r": [27, 30], "time_reduction_layer_typ": 27, "conv1d": 27, "feed_forward_dropout_r": 27, "31": 27, "cnn_norm_typ": 27, "concat_aft": [27, 28], "check_ascending_list": 27, "mel": [27, 34, 36, 44], "right_context": [27, 34, 36, 44, 64], "depend": [27, 34, 36, 44, 59, 61, 66, 67], "feed_forward1": 28, "feed_forward2": 28, "positionwis": [29, 47], "hidden_unit": [29, 47], "feedforward": [29, 41, 47], "appi": [29, 47], "dimenst": [29, 47], "timereductionlay": 30, "depthwis": 30, "bank": 30, "out_dim": 30, "nemo": 30, "reduct": 30, "procedur": 30, "downsampl": 30, "multiheadattentionmechan": 30, "kernel": 30, "factor": 30, "joint": [31, 34, 64], "transducerjoint": [31, 32], "predictor": [31, 34, 53], "applypad": [31, 33], "convpredictor": [31, 33], "embeddingpredictor": [31, 33], "predictorbas": [31, 33, 34], "rnnpredictor": [31, 33], "voca_s": [32, 33], "enc_output_s": 32, "pred_output_s": 32, "join_dim": 32, "prejoin_linear": 32, "postjoin_linear": 32, "joint_mod": 32, "tanh": 32, "enc_out": [32, 34], "pred_out": [32, 34], "u": 32, "pad_valu": [33, 53], "max_time_step": 33, "embed_s": 33, "embed_dropout": 33, "history_s": 33, "layer_norm_epsilon": 33, "1e": [33, 60, 67], "05": [33, 46, 60], "batch_to_cach": 33, "history_1": 33, "history_2": 33, "history_3": 33, "new_ach": 33, "cache_to_batch": 33, "history3": 33, "new_caceh": 33, "forward_step": 33, "time_step": 33, "init_st": 33, "pdf": 33, "07513": 33, "proj": 33, "hidden_s": 33, "num_lay": 33, "rnn_type": [33, 53], "lstm": 33, "state_m": 33, "state_c": 33, "n_layer": 33, "state_m_1": 33, "state_c_1": 33, "state_m_2": 33, "state_c_2": 33, "new_cach": 33, "max_tim": 33, "vocab_s": [34, 36, 41, 67], "attention_decod": 34, "transformerdecod": [34, 35, 36, 41], "bitransformerdecod": [34, 35, 41], "lfmmi_dir": [34, 36], "ignore_id": [34, 36, 53], "reverse_weight": [34, 36, 41], "lsm_weight": [34, 36], "length_normalized_loss": [34, 36], "transducer_weight": 34, "attention_weight": 34, "asrmodel": [34, 35, 36], "hybrid": [34, 36], "beam_search": 34, "speech_length": [34, 36], "beam_siz": [34, 36, 59, 66, 67], "simulate_stream": [34, 36], "feat_dim": [34, 36, 38], "prohibit": [34, 36], "final_prob": 34, "ctc_prob": 34, "transducer_prob": 34, "text_length": [34, 36], "frontend": [34, 36], "loss": [34, 36, 40, 46, 66, 67], "forward_encoder_chunk": [34, 36, 64], "interfac": [34, 36, 43, 45], "forward_joint_step": 34, "forward_predictor_init_st": 34, "forward_predictor_step": 34, "greedy_search": 34, "n_step": 34, "64": 34, "greedi": [34, 36, 66, 67], "init_b": 34, "transducer_attention_rescor": 34, "attn_weight": 34, "search_ctc_weight": 34, "search_transducer_weight": 34, "beam_search_typ": 34, "rescor": [34, 36, 64, 66, 67], "rescore_prob": 34, "transducer_loss": 34, "attn_prob": 34, "attn": 34, "rnnt": 34, "asr_model": 35, "cmvn": [35, 50], "globalcmvn": [35, 38], "decoder_lay": 35, "decoderlay": [35, 42], "nopositionalencod": [35, 43], "positionalencod": [35, 41, 43], "relpositionalencod": [35, 43], "baseencod": [35, 44], "conformerencod": [35, 44], "transformerencod": [35, 36, 44], "transformerencoderlay": [35, 45], "label_smoothing_loss": 35, "labelsmoothingloss": [35, 46], "conv2dsubsampling4": [35, 48], "conv2dsubsampling6": [35, 48], "conv2dsubsampling8": [35, 48], "linearnosubsampl": [35, 48], "attention_rescor": [36, 66, 67], "nbest": [36, 61], "resor": 36, "ctc_activ": [36, 64], "linear": [36, 48, 64], "softmax": [36, 40, 41, 64], "ctc_greedy_search": [36, 66, 67], "ctc_prefix_beam_search": [36, 66, 67], "eos_symbol": [36, 64], "eo": [36, 53, 59, 64, 66, 67], "id": [36, 40, 41, 46, 53, 64, 66, 67], "calc": 36, "forward_attention_decod": [36, 64], "hyp": [36, 53], "hyps_len": 36, "encoder_out": 36, "hypothesi": 36, "r_hyp": 36, "fo": 36, "verf": 36, "hlg_onebest": 36, "hlg": 36, "hlg_rescor": 36, "lm_scale": 36, "decoder_scal": 36, "r_decoder_scal": 36, "is_bidirectional_decod": 36, "load_hlg_resource_if_necessari": 36, "load_lfmmi_resourc": 36, "recogn": 36, "max_result_len": 36, "sos_symbol": [36, 64], "subsampling_r": [36, 64], "cross": [37, 56, 66, 67], "mocha": 37, "But": [37, 67], "forward_qkv": 37, "istd": 38, "norm_var": 38, "normal": [38, 46, 66, 67], "encoder_output_s": [40, 41], "argmax": 40, "hs_pad": 40, "3d": 40, "tmax": [40, 53], "eproj": 40, "hlen": 40, "ys_pad": [40, 53], "ys_len": [40, 53], "calcul": [40, 46, 53, 66, 67], "lmax": [40, 53], "log_softmax": 40, "r_num_block": 41, "self_attention_dropout_r": 41, "src_attention_dropout_r": 41, "use_output_lay": 41, "transfom": 41, "wise": 41, "scaledpositionalencod": 41, "memory_mask": [41, 42], "ys_in_pad": 41, "ys_in_len": 41, "r_ys_in_pad": 41, "float32": 41, "maxlen_in": [41, 42], "int64": 41, "maxlen_out": [41, 42], "r_x": 41, "olen": 41, "forward_one_step": 41, "tgt": [41, 42], "tgt_mask": [41, 42], "uint8": 41, "max_time_out": 41, "per": 41, "bidirect": 41, "src_attn": 42, "inter": 42, "cif": 42, "gpt": 42, "positon": 43, "No": 43, "compat": [43, 45], "position_encod": [43, 48], "5000": [43, 67], "revers": [43, 53], "pe": 43, "po": 43, "2i": 43, "sin": 43, "dmodel": 43, "co": 43, "apply_dropout": 43, "onc": 43, "appendix": 43, "abs_po": 44, "positionwise_conv_kernel_s": 44, "selfattention_layer_typ": 44, "rel_selfattn": 44, "smooth": 46, "padding_idx": 46, "normalize_length": 46, "ce": 46, "version": [46, 61], "prob": [46, 64], "divid": 46, "among": 46, "9": [46, 53], "flatten": 46, "seqlen": 46, "predict": [46, 53], "signal": 46, "padding_id": 46, "kl": 46, "scalar": 46, "pos_enc": 48, "common": 50, "add_blank": [50, 53], "add_sos_eo": [50, 53], "get_activ": [50, 53], "get_rnn": [50, 53], "get_subsampl": [50, 53], "log_add": [50, 53], "pad_list": [50, 53], "remove_duplicates_and_blank": [50, 53], "replace_duplicates_with_blank": [50, 53], "reverse_pad_list": [50, 53], "th_accuraci": [50, 53], "override_config": [50, 54], "ctc_util": 50, "executor": 50, "file_util": 50, "read_list": [50, 57], "read_non_lang_symbol": [50, 57], "read_symbol_t": [50, 57], "init_model": 50, "add_optional_chunk_mask": [50, 59], "make_non_pad_mask": [50, 59], "make_pad_mask": [50, 59], "mask_finished_pr": [50, 59], "mask_finished_scor": [50, 59], "subsequent_chunk_mask": [50, 59], "subsequent_mask": [50, 59], "schedul": [50, 56], "cosineann": [50, 60], "noamann": [50, 60], "noamholdann": [50, 60], "squareann": [50, 60], "squarerootann": [50, 60], "squarerootconstantpolici": [50, 60], "warmupannealholdpolici": [50, 60], "warmupholdpolici": [50, 60], "warmuplr": [50, 60], "warmuppolici": [50, 60], "unil": 53, "prepad": 53, "ys_in": 53, "eeo": 53, "ys_out": 53, "sos_id": 53, "eos_id": 53, "act": 53, "stabl": [53, 64], "t_1": 53, "t_2": 53, "t_b": 53, "ones": 53, "tokenmax": 53, "seq": 53, "pad_output": 53, "pad_target": 53, "ignore_label": 53, "longtensor": 53, "override_list": 54, "cv": 56, "data_load": 56, "optim": [56, 60, 66, 67], "writer": 56, "scaler": 56, "list_fil": 57, "non_lang_sym_path": 57, "linguist": [57, 67], "nois": 57, "brk": 57, "sym": 57, "symbol_table_fil": 57, "enabl": [59, 61], "pad_mask": 59, "descript": [59, 64], "pred": 59, "flag": 59, "finish": [59, 64, 66, 67], "branch": 59, "arrai": 59, "aliv": 59, "aim": 59, "rest": 59, "inf": 59, "num_left_chunk": 59, "cpu": 59, "subsequ": 59, "cuda": [59, 66, 67], "auto": 59, "regress": 59, "fulli": 59, "long": [59, 61, 64], "max_step": 60, "min_lr": 60, "last_epoch": 60, "warmup_step": 60, "warmup_ratio": 60, "_lrschedul": 60, "get_lr": 60, "decay_r": 60, "set_step": 60, "constant_step": 60, "constant_ratio": 60, "warmup": 60, "logic": 60, "lr": 60, "polici": 60, "clariti": 60, "ratio": 60, "infinit": [60, 64], "minimum": 60, "hold": 60, "learn": 60, "decai": 60, "constant": 60, "hold_step": 60, "hold_ratio": 60, "variant": 60, "warm": 60, "25000": 60, "almost": 60, "noamlr": 60, "except": 60, "model_s": 60, "min": [60, 61], "equal": 60, "develop": [61, 64], "timestamp": 61, "align": 61, "phone": 61, "maco": 61, "pack": 61, "window": 61, "linux": 61, "sy": 61, "wav_fil": 61, "argv": 61, "ch": 61, "decode_wav": 61, "print": [61, 67], "offici": 61, "specif": 61, "automat": 61, "md": 61, "top": 61, "enable_timestamp": 61, "bonu": 61, "continuous_decod": 61, "\u4e0d\u5fd8\u521d\u5fc3": 61, "\u7262\u8bb0\u4f7f\u547d": 61, "wave": 61, "test_wav": 61, "rb": 61, "fin": 61, "assert": 61, "getnchannel": 61, "readfram": 61, "getnfram": 61, "suppos": 61, "16k": 61, "16bit": 61, "interv": 61, "last": 61, "chunk_wav": 61, "behavior": 61, "setup": 61, "jinja2": 63, "nbsphinx": 63, "sphinx": 63, "recommonmark": 63, "markdown": 63, "rtd": 63, "theme": 63, "torchaudio": [63, 66], "balanc": 64, "latenc": 64, "accur": 64, "autoregress": 64, "benefit": 64, "find": [64, 66, 67], "form": 64, "usual": 64, "degrad": 64, "lot": 64, "spike": 64, "aspect": 64, "favor": 64, "server": 64, "fed": 64, "further": 64, "partial": 64, "select": 64, "affect": 64, "limit": 64, "promis": 64, "proper": 64, "brief": 64, "increment": 64, "requri": 64, "att": 64, "tircki": 64, "simpli": 64, "straightforward": 64, "neglig": 64, "blue": 64, "color": 64, "vocabulari": [64, 66, 67], "bi": 64, "direct": 64, "recurr": 64, "dnn": 64, "feel": [66, 67], "free": [66, 67], "issu": [66, 67], "thank": [66, 67], "kind": [66, 67], "feedback": [66, 67], "suggest": [66, 67], "manual": [66, 67], "understand": [66, 67], "bash": [66, 67], "stop_stag": [66, 67], "variabl": [66, 67], "absolut": 66, "usernam": 66, "aishell_data_prep": 66, "tab": [66, 67], "separ": [66, 67], "column": [66, 67], "wav_id": [66, 67], "text_label": [66, 67], "bac009s0002w0125": 66, "\u5404\u5730\u653f\u5e9c\u4fbf\u7eb7\u7eb7\u8ddf\u8fdb": 66, "copi": 66, "compute_cmvn_stat": [66, 67], "cepstral": [66, 67], "varianc": [66, 67], "These": [66, 67], "acoust": [66, 67], "integ": [66, 67], "unk": [66, 67], "\u4e00": 66, "\u4e01": 66, "\u9f9a": 66, "4230": 66, "\u9f9f": 66, "4231": 66, "4232": 66, "denot": [66, 67], "unknown": [66, 67], "aslo": [66, 67], "design": [66, 67], "anoth": [66, 67], "10k": [66, 67], "5k": [66, 67], "ddp": [66, 67], "dist_backend": [66, 67], "nccl": [66, 67], "gloo": [66, 67], "visibl": [66, 67], "cuda_visible_devic": [66, 67], "card": [66, 67], "resum": [66, 67], "termin": [66, 67], "accident": [66, 67], "exp": [66, 67], "your_exp": [66, 67], "Then": [66, 67], "yaml": [66, 67], "train_conform": [66, 67], "tensorboard": [66, 67], "2080": [66, 67], "ti": [66, 67], "dai": [66, 67], "monitor": [66, 67], "logdir": [66, 67], "your_exp_nam": [66, 67], "port": [66, 67], "12598": [66, 67], "bind_al": [66, 67], "averag": [66, 67], "average_checkpoint": [66, 67], "average_num": [66, 67], "four": [66, 67], "candid": [66, 67], "higher": [66, 67], "wer": [66, 67], "evalu": [66, 67], "error": [66, 67], "export_jit": [66, 67], "program": 66, "data_url": 67, "www": 67, "datadir": 67, "le": 67, "ge": 67, "echo": 67, "clean": 67, "360": 67, "download_and_untar": 67, "fi": 67, "wave_data": 67, "underscor": 67, "data_prep_torchaudio": 67, "1867": 67, "154075": 67, "0014": 67, "flac": 67, "1970": 67, "26100": 67, "0022": 67, "him": 67, "THAT": 67, "IT": 67, "did": 67, "AT": 67, "task": 67, "yourself": 67, "most": 67, "train_960": 67, "merg": 67, "train_clean_100": 67, "train_clean_360": 67, "train_other_500": 67, "dev_clean": 67, "dev_oth": 67, "in_scp": 67, "out_cmvn": 67, "subset": 67, "lang_char": 67, "bpemod": 67, "nbpe": 67, "_unit": 67, "bpemodel": 67, "borrow": 67, "cut": 67, "spm_train": 67, "model_typ": 67, "model_prefix": 67, "input_sentence_s": 67, "100000000": 67, "spm_encod": 67, "output_format": 67, "tr": 67, "uniq": 67, "awk": 67, "nr": 67, "num_token": 67, "wc": 67, "byte": 67, "pair": 67, "sentencepiec": 67, "4995": 67, "young": 67, "4996": 67, "4997": 67, "youth": 67, "4998": 67, "z": 67, "4999": 67, "zz": 67, "5001": 67, "recog_set": 67, "make_raw_list": 67, "1455": 67, "134435": 67, "0000": 67, "mnt": 67, "nf": 67, "ptm1": 67, "THE": 67, "girl": 67, "who": 67, "came": 67, "INTO": 67, "world": 67, "night": 67, "jess": 67, "ran": 67, "cry": 67, "god": 67, "he": 67, "BE": 67, "son": 67, "had": 67, "grown": 67, "womanhood": 67, "farm": 67, "0001": 67, "AND": 67, "NOT": 67, "angri": 67, "she": 67, "wa": 67, "often": 67, "moros": 67, "winesburg": 67, "said": 67, "drank": 67, "her": 67, "husband": 67, "banker": 67, "0002": 67, "BUT": 67, "louis": 67, "made": 67, "happi": 67, "flew": 67, "half": 67, "insan": 67, "fit": 67, "OF": 67, "temper": 67, "sometim": 67, "noisi": 67, "quarrelsom": 67, "swore": 67, "cri": 67, "anger": 67, "got": 67, "knife": 67, "kitchen": 67, "threaten": 67, "life": 67, "init_fil": 67, "ddp_init": 67, "rm": 67, "delet": 67, "init_method": 67, "readlink": 67, "num_gpu": 67, "cmvn_opt": 67, "write": 67, "later": 67, "pin_memori": 67, "wait": 67, "todo": 67, "decode_checkpoint": 67, "avg_": 67, "average_model": 67, "dst_model": 67, "src_path": 67, "val_best": 67, "poll": 67, "idx": 67, "decode_mod": 67, "test_dir": 67, "penalti": 67, "result_fil": 67, "text_bp": 67, "spm_decod": 67, "input_format": 67, "sed": 67, "eq": 67, "output_fil": 67, "integr": 67, "which_lm": 67, "prune": 67, "arpa": 67, "wget": 67, "unzip": 67, "gunzip": 67, "train_960_unigram5000": 67, "fst_dir": 67, "acoustic_scal": 67, "lm_with_runtime_": 67}, "objects": {"": [[11, 0, 0, "-", "wenet"]], "wenet": [[12, 0, 0, "-", "dataset"], [17, 0, 0, "-", "efficient_conformer"], [23, 0, 0, "-", "squeezeformer"], [31, 0, 0, "-", "transducer"], [35, 0, 0, "-", "transformer"], [50, 0, 0, "-", "utils"]], "wenet.dataset": [[13, 0, 0, "-", "dataset"], [15, 0, 0, "-", "processor"], [16, 0, 0, "-", "wav_distortion"]], "wenet.dataset.dataset": [[13, 1, 1, "", "DataList"], [13, 3, 1, "", "Dataset"], [13, 1, 1, "", "DistributedSampler"], [13, 1, 1, "", "Processor"]], "wenet.dataset.dataset.DataList": [[13, 2, 1, "", "set_epoch"]], "wenet.dataset.dataset.DistributedSampler": [[13, 2, 1, "", "sample"], [13, 2, 1, "", "set_epoch"], [13, 2, 1, "", "update"]], "wenet.dataset.dataset.Processor": [[13, 2, 1, "", "apply"], [13, 2, 1, "", "set_epoch"]], "wenet.dataset.processor": [[15, 3, 1, "", "batch"], [15, 3, 1, "", "compute_fbank"], [15, 3, 1, "", "compute_mfcc"], [15, 3, 1, "", "dynamic_batch"], [15, 3, 1, "", "filter"], [15, 3, 1, "", "padding"], [15, 3, 1, "", "parse_raw"], [15, 3, 1, "", "resample"], [15, 3, 1, "", "shuffle"], [15, 3, 1, "", "sort"], [15, 3, 1, "", "spec_aug"], [15, 3, 1, "", "spec_sub"], [15, 3, 1, "", "spec_trim"], [15, 3, 1, "", "speed_perturb"], [15, 3, 1, "", "static_batch"], [15, 3, 1, "", "tar_file_and_group"], [15, 3, 1, "", "tokenize"], [15, 3, 1, "", "url_opener"]], "wenet.dataset.wav_distortion": [[16, 3, 1, "", "amp2db"], [16, 3, 1, "", "db2amp"], [16, 3, 1, "", "distort"], [16, 3, 1, "", "distort_chain"], [16, 3, 1, "", "distort_wav_conf"], [16, 3, 1, "", "distort_wav_conf_and_save"], [16, 3, 1, "", "generate_amp_mask"], [16, 3, 1, "", "make_amp_mask"], [16, 3, 1, "", "make_fence_distortion"], [16, 3, 1, "", "make_gain_db"], [16, 3, 1, "", "make_jag_distortion"], [16, 3, 1, "", "make_max_distortion"], [16, 3, 1, "", "make_poly_distortion"], [16, 3, 1, "", "make_quad_distortion"]], "wenet.efficient_conformer": [[18, 0, 0, "-", "attention"], [19, 0, 0, "-", "convolution"], [20, 0, 0, "-", "encoder"], [21, 0, 0, "-", "encoder_layer"], [22, 0, 0, "-", "subsampling"]], "wenet.efficient_conformer.attention": [[18, 1, 1, "", "GroupedRelPositionMultiHeadedAttention"]], "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention": [[18, 2, 1, "", "forward"], [18, 2, 1, "", "forward_attention"], [18, 2, 1, "", "pad4group"], [18, 2, 1, "", "rel_shift"], [18, 4, 1, "", "training"]], "wenet.efficient_conformer.convolution": [[19, 1, 1, "", "ConvolutionModule"]], "wenet.efficient_conformer.convolution.ConvolutionModule": [[19, 2, 1, "", "forward"], [19, 4, 1, "", "training"]], "wenet.efficient_conformer.encoder": [[20, 1, 1, "", "EfficientConformerEncoder"]], "wenet.efficient_conformer.encoder.EfficientConformerEncoder": [[20, 2, 1, "", "calculate_downsampling_factor"], [20, 2, 1, "", "forward"], [20, 2, 1, "", "forward_chunk"], [20, 2, 1, "", "forward_chunk_by_chunk"], [20, 2, 1, "", "output_size"], [20, 2, 1, "", "set_global_chunk_size"], [20, 4, 1, "", "training"]], "wenet.efficient_conformer.encoder_layer": [[21, 1, 1, "", "StrideConformerEncoderLayer"]], "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer": [[21, 2, 1, "", "forward"], [21, 4, 1, "", "training"]], "wenet.efficient_conformer.subsampling": [[22, 1, 1, "", "Conv2dSubsampling2"]], "wenet.efficient_conformer.subsampling.Conv2dSubsampling2": [[22, 2, 1, "", "forward"], [22, 4, 1, "", "training"]], "wenet.squeezeformer": [[24, 0, 0, "-", "attention"], [25, 0, 0, "-", "conv2d"], [26, 0, 0, "-", "convolution"], [27, 0, 0, "-", "encoder"], [28, 0, 0, "-", "encoder_layer"], [29, 0, 0, "-", "positionwise_feed_forward"], [30, 0, 0, "-", "subsampling"]], "wenet.squeezeformer.attention": [[24, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention": [[24, 2, 1, "", "forward"], [24, 2, 1, "", "forward_attention"], [24, 2, 1, "", "init_weights"], [24, 2, 1, "", "rel_shift"], [24, 4, 1, "", "training"]], "wenet.squeezeformer.conv2d": [[25, 1, 1, "", "Conv2dValid"]], "wenet.squeezeformer.conv2d.Conv2dValid": [[25, 4, 1, "", "bias"], [25, 4, 1, "", "dilation"], [25, 2, 1, "", "forward"], [25, 4, 1, "", "groups"], [25, 4, 1, "", "in_channels"], [25, 4, 1, "", "kernel_size"], [25, 4, 1, "", "out_channels"], [25, 4, 1, "", "output_padding"], [25, 4, 1, "", "padding"], [25, 4, 1, "", "padding_mode"], [25, 4, 1, "", "stride"], [25, 4, 1, "", "transposed"], [25, 4, 1, "", "weight"]], "wenet.squeezeformer.convolution": [[26, 1, 1, "", "ConvolutionModule"]], "wenet.squeezeformer.convolution.ConvolutionModule": [[26, 2, 1, "", "forward"], [26, 2, 1, "", "init_weights"], [26, 4, 1, "", "training"]], "wenet.squeezeformer.encoder": [[27, 1, 1, "", "SqueezeformerEncoder"]], "wenet.squeezeformer.encoder.SqueezeformerEncoder": [[27, 2, 1, "", "calculate_downsampling_factor"], [27, 2, 1, "", "check_ascending_list"], [27, 2, 1, "", "forward"], [27, 2, 1, "", "forward_chunk"], [27, 2, 1, "", "forward_chunk_by_chunk"], [27, 2, 1, "", "output_size"], [27, 4, 1, "", "training"]], "wenet.squeezeformer.encoder_layer": [[28, 1, 1, "", "SqueezeformerEncoderLayer"]], "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer": [[28, 2, 1, "", "forward"], [28, 4, 1, "", "training"]], "wenet.squeezeformer.positionwise_feed_forward": [[29, 1, 1, "", "PositionwiseFeedForward"]], "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward": [[29, 2, 1, "", "forward"], [29, 2, 1, "", "init_weights"], [29, 4, 1, "", "training"]], "wenet.squeezeformer.subsampling": [[30, 1, 1, "", "DepthwiseConv2dSubsampling4"], [30, 1, 1, "", "TimeReductionLayer1D"], [30, 1, 1, "", "TimeReductionLayer2D"], [30, 1, 1, "", "TimeReductionLayerStream"]], "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4": [[30, 2, 1, "", "forward"], [30, 4, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer1D": [[30, 2, 1, "", "forward"], [30, 2, 1, "", "init_weights"], [30, 4, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayer2D": [[30, 2, 1, "", "forward"], [30, 2, 1, "", "init_weights"], [30, 4, 1, "", "training"]], "wenet.squeezeformer.subsampling.TimeReductionLayerStream": [[30, 2, 1, "", "forward"], [30, 2, 1, "", "init_weights"], [30, 4, 1, "", "training"]], "wenet.transducer": [[32, 0, 0, "-", "joint"], [33, 0, 0, "-", "predictor"], [34, 0, 0, "-", "transducer"]], "wenet.transducer.joint": [[32, 1, 1, "", "TransducerJoint"]], "wenet.transducer.joint.TransducerJoint": [[32, 2, 1, "", "forward"], [32, 4, 1, "", "training"]], "wenet.transducer.predictor": [[33, 3, 1, "", "ApplyPadding"], [33, 1, 1, "", "ConvPredictor"], [33, 1, 1, "", "EmbeddingPredictor"], [33, 1, 1, "", "PredictorBase"], [33, 1, 1, "", "RNNPredictor"]], "wenet.transducer.predictor.ConvPredictor": [[33, 2, 1, "", "batch_to_cache"], [33, 2, 1, "", "cache_to_batch"], [33, 2, 1, "", "forward"], [33, 2, 1, "", "forward_step"], [33, 2, 1, "", "init_state"], [33, 4, 1, "", "training"]], "wenet.transducer.predictor.EmbeddingPredictor": [[33, 2, 1, "", "batch_to_cache"], [33, 2, 1, "", "cache_to_batch"], [33, 2, 1, "", "forward"], [33, 2, 1, "", "forward_step"], [33, 2, 1, "", "init_state"], [33, 4, 1, "", "training"]], "wenet.transducer.predictor.PredictorBase": [[33, 2, 1, "", "batch_to_cache"], [33, 2, 1, "", "cache_to_batch"], [33, 2, 1, "", "forward"], [33, 2, 1, "", "forward_step"], [33, 2, 1, "", "init_state"], [33, 4, 1, "", "training"]], "wenet.transducer.predictor.RNNPredictor": [[33, 2, 1, "", "batch_to_cache"], [33, 2, 1, "", "cache_to_batch"], [33, 2, 1, "", "forward"], [33, 2, 1, "", "forward_step"], [33, 2, 1, "", "init_state"], [33, 4, 1, "", "training"]], "wenet.transducer.transducer": [[34, 1, 1, "", "Transducer"]], "wenet.transducer.transducer.Transducer": [[34, 2, 1, "", "beam_search"], [34, 2, 1, "", "forward"], [34, 2, 1, "", "forward_encoder_chunk"], [34, 2, 1, "", "forward_joint_step"], [34, 2, 1, "", "forward_predictor_init_state"], [34, 2, 1, "", "forward_predictor_step"], [34, 2, 1, "", "greedy_search"], [34, 2, 1, "", "init_bs"], [34, 4, 1, "", "training"], [34, 2, 1, "", "transducer_attention_rescoring"]], "wenet.transformer": [[36, 0, 0, "-", "asr_model"], [37, 0, 0, "-", "attention"], [38, 0, 0, "-", "cmvn"], [39, 0, 0, "-", "convolution"], [40, 0, 0, "-", "ctc"], [41, 0, 0, "-", "decoder"], [42, 0, 0, "-", "decoder_layer"], [43, 0, 0, "-", "embedding"], [44, 0, 0, "-", "encoder"], [45, 0, 0, "-", "encoder_layer"], [46, 0, 0, "-", "label_smoothing_loss"], [47, 0, 0, "-", "positionwise_feed_forward"], [48, 0, 0, "-", "subsampling"], [49, 0, 0, "-", "swish"]], "wenet.transformer.asr_model": [[36, 1, 1, "", "ASRModel"]], "wenet.transformer.asr_model.ASRModel": [[36, 2, 1, "", "attention_rescoring"], [36, 2, 1, "", "ctc_activation"], [36, 2, 1, "", "ctc_greedy_search"], [36, 2, 1, "", "ctc_prefix_beam_search"], [36, 2, 1, "", "eos_symbol"], [36, 2, 1, "", "forward"], [36, 2, 1, "", "forward_attention_decoder"], [36, 2, 1, "", "forward_encoder_chunk"], [36, 2, 1, "", "hlg_onebest"], [36, 2, 1, "", "hlg_rescore"], [36, 2, 1, "", "is_bidirectional_decoder"], [36, 2, 1, "", "load_hlg_resource_if_necessary"], [36, 2, 1, "", "load_lfmmi_resource"], [36, 2, 1, "", "recognize"], [36, 2, 1, "", "right_context"], [36, 2, 1, "", "sos_symbol"], [36, 2, 1, "", "subsampling_rate"], [36, 4, 1, "", "training"]], "wenet.transformer.attention": [[37, 1, 1, "", "MultiHeadedAttention"], [37, 1, 1, "", "RelPositionMultiHeadedAttention"]], "wenet.transformer.attention.MultiHeadedAttention": [[37, 2, 1, "", "forward"], [37, 2, 1, "", "forward_attention"], [37, 2, 1, "", "forward_qkv"], [37, 4, 1, "", "training"]], "wenet.transformer.attention.RelPositionMultiHeadedAttention": [[37, 2, 1, "", "forward"], [37, 2, 1, "", "rel_shift"], [37, 4, 1, "", "training"]], "wenet.transformer.cmvn": [[38, 1, 1, "", "GlobalCMVN"]], "wenet.transformer.cmvn.GlobalCMVN": [[38, 2, 1, "", "forward"], [38, 4, 1, "", "training"]], "wenet.transformer.convolution": [[39, 1, 1, "", "ConvolutionModule"]], "wenet.transformer.convolution.ConvolutionModule": [[39, 2, 1, "", "forward"], [39, 4, 1, "", "training"]], "wenet.transformer.ctc": [[40, 1, 1, "", "CTC"]], "wenet.transformer.ctc.CTC": [[40, 2, 1, "", "argmax"], [40, 2, 1, "", "forward"], [40, 2, 1, "", "log_softmax"], [40, 4, 1, "", "training"]], "wenet.transformer.decoder": [[41, 1, 1, "", "BiTransformerDecoder"], [41, 1, 1, "", "TransformerDecoder"]], "wenet.transformer.decoder.BiTransformerDecoder": [[41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_one_step"], [41, 4, 1, "", "training"]], "wenet.transformer.decoder.TransformerDecoder": [[41, 2, 1, "", "forward"], [41, 2, 1, "", "forward_one_step"], [41, 4, 1, "", "training"]], "wenet.transformer.decoder_layer": [[42, 1, 1, "", "DecoderLayer"]], "wenet.transformer.decoder_layer.DecoderLayer": [[42, 2, 1, "", "forward"], [42, 4, 1, "", "training"]], "wenet.transformer.embedding": [[43, 1, 1, "", "NoPositionalEncoding"], [43, 1, 1, "", "PositionalEncoding"], [43, 1, 1, "", "RelPositionalEncoding"]], "wenet.transformer.embedding.NoPositionalEncoding": [[43, 2, 1, "", "forward"], [43, 2, 1, "", "position_encoding"], [43, 4, 1, "", "training"]], "wenet.transformer.embedding.PositionalEncoding": [[43, 2, 1, "", "forward"], [43, 2, 1, "", "position_encoding"], [43, 4, 1, "", "training"]], "wenet.transformer.embedding.RelPositionalEncoding": [[43, 2, 1, "", "forward"], [43, 4, 1, "", "training"]], "wenet.transformer.encoder": [[44, 1, 1, "", "BaseEncoder"], [44, 1, 1, "", "ConformerEncoder"], [44, 1, 1, "", "TransformerEncoder"]], "wenet.transformer.encoder.BaseEncoder": [[44, 2, 1, "", "forward"], [44, 2, 1, "", "forward_chunk"], [44, 2, 1, "", "forward_chunk_by_chunk"], [44, 2, 1, "", "output_size"], [44, 4, 1, "", "training"]], "wenet.transformer.encoder.ConformerEncoder": [[44, 4, 1, "", "training"]], "wenet.transformer.encoder.TransformerEncoder": [[44, 4, 1, "", "training"]], "wenet.transformer.encoder_layer": [[45, 1, 1, "", "ConformerEncoderLayer"], [45, 1, 1, "", "TransformerEncoderLayer"]], "wenet.transformer.encoder_layer.ConformerEncoderLayer": [[45, 2, 1, "", "forward"], [45, 4, 1, "", "training"]], "wenet.transformer.encoder_layer.TransformerEncoderLayer": [[45, 2, 1, "", "forward"], [45, 4, 1, "", "training"]], "wenet.transformer.label_smoothing_loss": [[46, 1, 1, "", "LabelSmoothingLoss"]], "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss": [[46, 2, 1, "", "forward"], [46, 4, 1, "", "training"]], "wenet.transformer.positionwise_feed_forward": [[47, 1, 1, "", "PositionwiseFeedForward"]], "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward": [[47, 2, 1, "", "forward"], [47, 4, 1, "", "training"]], "wenet.transformer.subsampling": [[48, 1, 1, "", "BaseSubsampling"], [48, 1, 1, "", "Conv2dSubsampling4"], [48, 1, 1, "", "Conv2dSubsampling6"], [48, 1, 1, "", "Conv2dSubsampling8"], [48, 1, 1, "", "LinearNoSubsampling"]], "wenet.transformer.subsampling.BaseSubsampling": [[48, 2, 1, "", "position_encoding"], [48, 4, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling4": [[48, 2, 1, "", "forward"], [48, 4, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling6": [[48, 2, 1, "", "forward"], [48, 4, 1, "", "training"]], "wenet.transformer.subsampling.Conv2dSubsampling8": [[48, 2, 1, "", "forward"], [48, 4, 1, "", "training"]], "wenet.transformer.subsampling.LinearNoSubsampling": [[48, 2, 1, "", "forward"], [48, 4, 1, "", "training"]], "wenet.transformer.swish": [[49, 1, 1, "", "Swish"]], "wenet.transformer.swish.Swish": [[49, 2, 1, "", "forward"], [49, 4, 1, "", "training"]], "wenet.utils": [[53, 0, 0, "-", "common"], [54, 0, 0, "-", "config"], [56, 0, 0, "-", "executor"], [57, 0, 0, "-", "file_utils"], [59, 0, 0, "-", "mask"], [60, 0, 0, "-", "scheduler"]], "wenet.utils.common": [[53, 3, 1, "", "add_blank"], [53, 3, 1, "", "add_sos_eos"], [53, 3, 1, "", "get_activation"], [53, 3, 1, "", "get_rnn"], [53, 3, 1, "", "get_subsample"], [53, 3, 1, "", "log_add"], [53, 3, 1, "", "pad_list"], [53, 3, 1, "", "remove_duplicates_and_blank"], [53, 3, 1, "", "replace_duplicates_with_blank"], [53, 3, 1, "", "reverse_pad_list"], [53, 3, 1, "", "th_accuracy"]], "wenet.utils.config": [[54, 3, 1, "", "override_config"]], "wenet.utils.executor": [[56, 1, 1, "", "Executor"]], "wenet.utils.executor.Executor": [[56, 2, 1, "", "cv"], [56, 2, 1, "", "train"]], "wenet.utils.file_utils": [[57, 3, 1, "", "read_lists"], [57, 3, 1, "", "read_non_lang_symbols"], [57, 3, 1, "", "read_symbol_table"]], "wenet.utils.mask": [[59, 3, 1, "", "add_optional_chunk_mask"], [59, 3, 1, "", "make_non_pad_mask"], [59, 3, 1, "", "make_pad_mask"], [59, 3, 1, "", "mask_finished_preds"], [59, 3, 1, "", "mask_finished_scores"], [59, 3, 1, "", "subsequent_chunk_mask"], [59, 3, 1, "", "subsequent_mask"]], "wenet.utils.scheduler": [[60, 1, 1, "", "CosineAnnealing"], [60, 1, 1, "", "NoamAnnealing"], [60, 1, 1, "", "NoamHoldAnnealing"], [60, 1, 1, "", "SquareAnnealing"], [60, 1, 1, "", "SquareRootAnnealing"], [60, 1, 1, "", "SquareRootConstantPolicy"], [60, 1, 1, "", "WarmupAnnealHoldPolicy"], [60, 1, 1, "", "WarmupHoldPolicy"], [60, 1, 1, "", "WarmupLR"], [60, 1, 1, "", "WarmupPolicy"]], "wenet.utils.scheduler.NoamAnnealing": [[60, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.NoamHoldAnnealing": [[60, 2, 1, "", "set_step"]], "wenet.utils.scheduler.SquareRootConstantPolicy": [[60, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupAnnealHoldPolicy": [[60, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupHoldPolicy": [[60, 2, 1, "", "get_lr"]], "wenet.utils.scheduler.WarmupLR": [[60, 2, 1, "", "get_lr"], [60, 2, 1, "", "set_step"]], "wenet.utils.scheduler.WarmupPolicy": [[60, 2, 1, "", "get_lr"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"big": 0, "data": [0, 66, 67], "train": [0, 3, 65, 66, 67], "uio": 0, "necess": 0, "upgrad": 0, "io": 0, "mothod": 0, "system": [0, 5], "design": [0, 5, 64], "overal": 0, "chain": 0, "valid": 0, "experi": [0, 66, 67], "aishel": [0, 66], "raw": 0, "v": 0, "shard": 0, "wenetspeech": 0, "usag": [0, 1, 61], "q": 0, "A": 0, "context": 1, "bias": 1, "graph": 1, "ctc": [1, 40], "prefix": 1, "beam": 1, "search": 1, "wfst": 1, "prune": 1, "welcom": 2, "wenet": [2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 67], "": 2, "document": 2, "content": [2, 9, 62, 65], "indic": 2, "tabl": 2, "instal": [3, 61], "prebuilt": 3, "python": [3, 10, 61], "packag": [3, 11, 12, 17, 23, 31, 35, 50], "build": [3, 61], "deploy": 3, "jit": 4, "lm": [5, 67], "motiv": 5, "implement": [5, 64], "result": 5, "how": [5, 65], "us": [5, 66, 67], "paper": 6, "pretrain": [7, 8], "model": [7, 8, 65, 66, 67], "type": [7, 8], "licens": [7, 8], "list": [7, 8], "product": 9, "runtim": [9, 64, 67], "api": 10, "refer": [10, 62, 64], "subpackag": 11, "dataset": [12, 13, 14, 15, 16], "submodul": [12, 17, 23, 31, 35, 50], "modul": [13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "kaldi_io": 14, "processor": 15, "wav_distort": 16, "efficient_conform": [17, 18, 19, 20, 21, 22], "attent": [18, 24, 37], "convolut": [19, 26, 39], "encod": [20, 27, 44], "encoder_lay": [21, 28, 45], "subsampl": [22, 30, 48], "squeezeform": [23, 24, 25, 26, 27, 28, 29, 30], "conv2d": 25, "positionwise_feed_forward": [29, 47], "transduc": [31, 32, 33, 34], "joint": 32, "predictor": 33, "transform": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "asr_model": 36, "cmvn": [38, 52, 66, 67], "decod": 41, "decoder_lay": 42, "embed": 43, "label_smoothing_loss": 46, "swish": 49, "util": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "checkpoint": 51, "common": 53, "config": 54, "ctc_util": 55, "executor": 56, "file_util": 57, "init_model": 58, "mask": 59, "schedul": 60, "bind": 61, "non": 61, "stream": 61, "your": 61, "local": 61, "machin": 61, "platform": 64, "support": 64, "architectur": 64, "interfac": 64, "cach": 64, "detail": 64, "tutori": [66, 67], "setup": [66, 67], "environ": [66, 67], "first": [66, 67], "stage": [66, 67], "1": [66, 67], "download": [66, 67], "0": [66, 67], "prepar": [66, 67], "extract": [66, 67], "optin": [66, 67], "featur": [66, 67], "2": [66, 67], "gener": [66, 67], "label": [66, 67], "token": [66, 67], "dictionari": [66, 67], "3": [66, 67], "format": [66, 67], "4": [66, 67], "neural": [66, 67], "network": [66, 67], "5": [66, 67], "recogn": [66, 67], "wav": [66, 67], "6": [66, 67], "export": [66, 67], "librispeech": 67, "option": 67, "7": 67, "add": 67, "test": 67}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Big Data Training: UIO": [[0, "big-data-training-uio"]], "Necessity of upgrading IO mothod": [[0, "necessity-of-upgrading-io-mothod"]], "System design of UIO": [[0, "system-design-of-uio"]], "Overall design": [[0, "overall-design"]], "Chain IO": [[0, "chain-io"]], "Validation experiments": [[0, "validation-experiments"]], "Aishell(raw vs shard)": [[0, "aishell-raw-vs-shard"]], "WenetSpeech(shard)": [[0, "wenetspeech-shard"]], "Usage of UIO": [[0, "usage-of-uio"]], "Q&A": [[0, "q-a"]], "Context Biasing": [[1, "context-biasing"]], "Context Graph": [[1, "context-graph"]], "CTC Prefix Beam Search": [[1, "ctc-prefix-beam-search"]], "CTC WFST Beam Search": [[1, "ctc-wfst-beam-search"]], "Pruning": [[1, "pruning"]], "Usage": [[1, "usage"], [61, "usage"]], "Welcome to wenet\u2019s documentation!": [[2, "welcome-to-wenet-s-documentation"]], "Contents:": [[2, null], [9, null], [62, null], [65, null]], "Indices and tables": [[2, "indices-and-tables"]], "Install": [[3, "install"], [61, "install"]], "Install prebuilt python package": [[3, "install-prebuilt-python-package"]], "Install for training": [[3, "install-for-training"]], "Build for deployment": [[3, "build-for-deployment"]], "JIT in WeNet": [[4, "jit-in-wenet"]], "LM for WeNet": [[5, "lm-for-wenet"]], "Motivation": [[5, "motivation"]], "System Design": [[5, "system-design"]], "Implementation": [[5, "implementation"]], "Results": [[5, "results"]], "How to use?": [[5, "how-to-use"]], "Papers": [[6, "papers"]], "Pretrained Models in WeNet": [[7, "pretrained-models-in-wenet"], [8, "pretrained-models-in-wenet"]], "Model Types": [[7, "model-types"], [8, "model-types"]], "Model License": [[7, "model-license"], [8, "model-license"]], "Model List": [[7, "model-list"], [8, "model-list"]], "Production Runtime": [[9, "production-runtime"]], "Python API Reference": [[10, "python-api-reference"]], "wenet package": [[11, "module-wenet"]], "Subpackages": [[11, "subpackages"]], "wenet.dataset package": [[12, "module-wenet.dataset"]], "Submodules": [[12, "submodules"], [17, "submodules"], [23, "submodules"], [31, "submodules"], [35, "submodules"], [50, "submodules"]], "wenet.dataset.dataset module": [[13, "module-wenet.dataset.dataset"]], "wenet.dataset.kaldi_io module": [[14, "wenet-dataset-kaldi-io-module"]], "wenet.dataset.processor module": [[15, "module-wenet.dataset.processor"]], "wenet.dataset.wav_distortion module": [[16, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer package": [[17, "module-wenet.efficient_conformer"]], "wenet.efficient_conformer.attention module": [[18, "module-wenet.efficient_conformer.attention"]], "wenet.efficient_conformer.convolution module": [[19, "module-wenet.efficient_conformer.convolution"]], "wenet.efficient_conformer.encoder module": [[20, "module-wenet.efficient_conformer.encoder"]], "wenet.efficient_conformer.encoder_layer module": [[21, "module-wenet.efficient_conformer.encoder_layer"]], "wenet.efficient_conformer.subsampling module": [[22, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer package": [[23, "module-wenet.squeezeformer"]], "wenet.squeezeformer.attention module": [[24, "module-wenet.squeezeformer.attention"]], "wenet.squeezeformer.conv2d module": [[25, "module-wenet.squeezeformer.conv2d"]], "wenet.squeezeformer.convolution module": [[26, "module-wenet.squeezeformer.convolution"]], "wenet.squeezeformer.encoder module": [[27, "module-wenet.squeezeformer.encoder"]], "wenet.squeezeformer.encoder_layer module": [[28, "module-wenet.squeezeformer.encoder_layer"]], "wenet.squeezeformer.positionwise_feed_forward module": [[29, "module-wenet.squeezeformer.positionwise_feed_forward"]], "wenet.squeezeformer.subsampling module": [[30, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer package": [[31, "module-wenet.transducer"]], "wenet.transducer.joint module": [[32, "module-wenet.transducer.joint"]], "wenet.transducer.predictor module": [[33, "module-wenet.transducer.predictor"]], "wenet.transducer.transducer module": [[34, "module-wenet.transducer.transducer"]], "wenet.transformer package": [[35, "module-wenet.transformer"]], "wenet.transformer.asr_model module": [[36, "module-wenet.transformer.asr_model"]], "wenet.transformer.attention module": [[37, "module-wenet.transformer.attention"]], "wenet.transformer.cmvn module": [[38, "module-wenet.transformer.cmvn"]], "wenet.transformer.convolution module": [[39, "module-wenet.transformer.convolution"]], "wenet.transformer.ctc module": [[40, "module-wenet.transformer.ctc"]], "wenet.transformer.decoder module": [[41, "module-wenet.transformer.decoder"]], "wenet.transformer.decoder_layer module": [[42, "module-wenet.transformer.decoder_layer"]], "wenet.transformer.embedding module": [[43, "module-wenet.transformer.embedding"]], "wenet.transformer.encoder module": [[44, "module-wenet.transformer.encoder"]], "wenet.transformer.encoder_layer module": [[45, "module-wenet.transformer.encoder_layer"]], "wenet.transformer.label_smoothing_loss module": [[46, "module-wenet.transformer.label_smoothing_loss"]], "wenet.transformer.positionwise_feed_forward module": [[47, "module-wenet.transformer.positionwise_feed_forward"]], "wenet.transformer.subsampling module": [[48, "module-wenet.transformer.subsampling"]], "wenet.transformer.swish module": [[49, "module-wenet.transformer.swish"]], "wenet.utils package": [[50, "module-wenet.utils"]], "wenet.utils.checkpoint module": [[51, "wenet-utils-checkpoint-module"]], "wenet.utils.cmvn module": [[52, "wenet-utils-cmvn-module"]], "wenet.utils.common module": [[53, "module-wenet.utils.common"]], "wenet.utils.config module": [[54, "module-wenet.utils.config"]], "wenet.utils.ctc_util module": [[55, "wenet-utils-ctc-util-module"]], "wenet.utils.executor module": [[56, "module-wenet.utils.executor"]], "wenet.utils.file_utils module": [[57, "module-wenet.utils.file_utils"]], "wenet.utils.init_model module": [[58, "wenet-utils-init-model-module"]], "wenet.utils.mask module": [[59, "module-wenet.utils.mask"]], "wenet.utils.scheduler module": [[60, "module-wenet.utils.scheduler"]], "Python Binding": [[61, "python-binding"]], "Non-streaming Usage": [[61, "non-streaming-usage"]], "Streaming Usage": [[61, "streaming-usage"]], "Build on Your Local Machine": [[61, "build-on-your-local-machine"]], "Reference": [[62, "reference"]], "Runtime for WeNet": [[64, "runtime-for-wenet"]], "Platforms Supported": [[64, "platforms-supported"]], "Architecture and Implementation": [[64, "architecture-and-implementation"]], "Architecture": [[64, "architecture"]], "Interface Design": [[64, "interface-design"]], "Cache in Details": [[64, "cache-in-details"]], "References": [[64, "references"]], "How to train models?": [[65, "how-to-train-models"]], "Tutorial on AIShell": [[66, "tutorial-on-aishell"]], "Setup environment": [[66, "setup-environment"], [67, "setup-environment"]], "First Experiment": [[66, "first-experiment"], [67, "first-experiment"]], "Stage -1: Download data": [[66, "stage-1-download-data"], [67, "stage-1-download-data"]], "Stage 0: Prepare Training data": [[66, "stage-0-prepare-training-data"], [67, "stage-0-prepare-training-data"]], "Stage 1: Extract optinal cmvn features": [[66, "stage-1-extract-optinal-cmvn-features"], [67, "stage-1-extract-optinal-cmvn-features"]], "Stage 2: Generate label token dictionary": [[66, "stage-2-generate-label-token-dictionary"], [67, "stage-2-generate-label-token-dictionary"]], "Stage 3: Prepare WeNet data format": [[66, "stage-3-prepare-wenet-data-format"], [67, "stage-3-prepare-wenet-data-format"]], "Stage 4: Neural Network training": [[66, "stage-4-neural-network-training"], [67, "stage-4-neural-network-training"]], "Stage 5: Recognize wav using the trained model": [[66, "stage-5-recognize-wav-using-the-trained-model"], [67, "stage-5-recognize-wav-using-the-trained-model"]], "Stage 6: Export the trained model": [[66, "stage-6-export-the-trained-model"]], "Tutorial on LibriSpeech": [[67, "tutorial-on-librispeech"]], "Stage 6(Optional): Export the trained model": [[67, "stage-6-optional-export-the-trained-model"]], "Stage 7(Optional): Add LM and test it with runtime": [[67, "stage-7-optional-add-lm-and-test-it-with-runtime"]]}, "indexentries": {"module": [[11, "module-wenet"], [12, "module-wenet.dataset"], [13, "module-wenet.dataset.dataset"], [15, "module-wenet.dataset.processor"], [16, "module-wenet.dataset.wav_distortion"], [17, "module-wenet.efficient_conformer"], [18, "module-wenet.efficient_conformer.attention"], [19, "module-wenet.efficient_conformer.convolution"], [20, "module-wenet.efficient_conformer.encoder"], [21, "module-wenet.efficient_conformer.encoder_layer"], [22, "module-wenet.efficient_conformer.subsampling"], [23, "module-wenet.squeezeformer"], [24, "module-wenet.squeezeformer.attention"], [25, "module-wenet.squeezeformer.conv2d"], [26, "module-wenet.squeezeformer.convolution"], [27, "module-wenet.squeezeformer.encoder"], [28, "module-wenet.squeezeformer.encoder_layer"], [29, "module-wenet.squeezeformer.positionwise_feed_forward"], [30, "module-wenet.squeezeformer.subsampling"], [31, "module-wenet.transducer"], [32, "module-wenet.transducer.joint"], [33, "module-wenet.transducer.predictor"], [34, "module-wenet.transducer.transducer"], [35, "module-wenet.transformer"], [36, "module-wenet.transformer.asr_model"], [37, "module-wenet.transformer.attention"], [38, "module-wenet.transformer.cmvn"], [39, "module-wenet.transformer.convolution"], [40, "module-wenet.transformer.ctc"], [41, "module-wenet.transformer.decoder"], [42, "module-wenet.transformer.decoder_layer"], [43, "module-wenet.transformer.embedding"], [44, "module-wenet.transformer.encoder"], [45, "module-wenet.transformer.encoder_layer"], [46, "module-wenet.transformer.label_smoothing_loss"], [47, "module-wenet.transformer.positionwise_feed_forward"], [48, "module-wenet.transformer.subsampling"], [49, "module-wenet.transformer.swish"], [50, "module-wenet.utils"], [53, "module-wenet.utils.common"], [54, "module-wenet.utils.config"], [56, "module-wenet.utils.executor"], [57, "module-wenet.utils.file_utils"], [59, "module-wenet.utils.mask"], [60, "module-wenet.utils.scheduler"]], "wenet": [[11, "module-wenet"]], "wenet.dataset": [[12, "module-wenet.dataset"]], "datalist (class in wenet.dataset.dataset)": [[13, "wenet.dataset.dataset.DataList"]], "dataset() (in module wenet.dataset.dataset)": [[13, "wenet.dataset.dataset.Dataset"]], "distributedsampler (class in wenet.dataset.dataset)": [[13, "wenet.dataset.dataset.DistributedSampler"]], "processor (class in wenet.dataset.dataset)": [[13, "wenet.dataset.dataset.Processor"]], "apply() (wenet.dataset.dataset.processor method)": [[13, "wenet.dataset.dataset.Processor.apply"]], "sample() (wenet.dataset.dataset.distributedsampler method)": [[13, "wenet.dataset.dataset.DistributedSampler.sample"]], "set_epoch() (wenet.dataset.dataset.datalist method)": [[13, "wenet.dataset.dataset.DataList.set_epoch"]], "set_epoch() (wenet.dataset.dataset.distributedsampler method)": [[13, "wenet.dataset.dataset.DistributedSampler.set_epoch"]], "set_epoch() (wenet.dataset.dataset.processor method)": [[13, "wenet.dataset.dataset.Processor.set_epoch"]], "update() (wenet.dataset.dataset.distributedsampler method)": [[13, "wenet.dataset.dataset.DistributedSampler.update"]], "wenet.dataset.dataset": [[13, "module-wenet.dataset.dataset"]], "batch() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.batch"]], "compute_fbank() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.compute_fbank"]], "compute_mfcc() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.compute_mfcc"]], "dynamic_batch() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.dynamic_batch"]], "filter() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.filter"]], "padding() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.padding"]], "parse_raw() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.parse_raw"]], "resample() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.resample"]], "shuffle() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.shuffle"]], "sort() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.sort"]], "spec_aug() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.spec_aug"]], "spec_sub() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.spec_sub"]], "spec_trim() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.spec_trim"]], "speed_perturb() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.speed_perturb"]], "static_batch() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.static_batch"]], "tar_file_and_group() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.tar_file_and_group"]], "tokenize() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.tokenize"]], "url_opener() (in module wenet.dataset.processor)": [[15, "wenet.dataset.processor.url_opener"]], "wenet.dataset.processor": [[15, "module-wenet.dataset.processor"]], "amp2db() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.amp2db"]], "db2amp() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.db2amp"]], "distort() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.distort"]], "distort_chain() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.distort_chain"]], "distort_wav_conf() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.distort_wav_conf"]], "distort_wav_conf_and_save() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.distort_wav_conf_and_save"]], "generate_amp_mask() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.generate_amp_mask"]], "make_amp_mask() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_amp_mask"]], "make_fence_distortion() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_fence_distortion"]], "make_gain_db() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_gain_db"]], "make_jag_distortion() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_jag_distortion"]], "make_max_distortion() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_max_distortion"]], "make_poly_distortion() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_poly_distortion"]], "make_quad_distortion() (in module wenet.dataset.wav_distortion)": [[16, "wenet.dataset.wav_distortion.make_quad_distortion"]], "wenet.dataset.wav_distortion": [[16, "module-wenet.dataset.wav_distortion"]], "wenet.efficient_conformer": [[17, "module-wenet.efficient_conformer"]], "groupedrelpositionmultiheadedattention (class in wenet.efficient_conformer.attention)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention"]], "forward() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.forward_attention"]], "pad4group() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.pad4group"]], "rel_shift() (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention method)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.efficient_conformer.attention.groupedrelpositionmultiheadedattention attribute)": [[18, "wenet.efficient_conformer.attention.GroupedRelPositionMultiHeadedAttention.training"]], "wenet.efficient_conformer.attention": [[18, "module-wenet.efficient_conformer.attention"]], "convolutionmodule (class in wenet.efficient_conformer.convolution)": [[19, "wenet.efficient_conformer.convolution.ConvolutionModule"]], "forward() (wenet.efficient_conformer.convolution.convolutionmodule method)": [[19, "wenet.efficient_conformer.convolution.ConvolutionModule.forward"]], "training (wenet.efficient_conformer.convolution.convolutionmodule attribute)": [[19, "wenet.efficient_conformer.convolution.ConvolutionModule.training"]], "wenet.efficient_conformer.convolution": [[19, "module-wenet.efficient_conformer.convolution"]], "efficientconformerencoder (class in wenet.efficient_conformer.encoder)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder"]], "calculate_downsampling_factor() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.calculate_downsampling_factor"]], "forward() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward"]], "forward_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.output_size"]], "set_global_chunk_size() (wenet.efficient_conformer.encoder.efficientconformerencoder method)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.set_global_chunk_size"]], "training (wenet.efficient_conformer.encoder.efficientconformerencoder attribute)": [[20, "wenet.efficient_conformer.encoder.EfficientConformerEncoder.training"]], "wenet.efficient_conformer.encoder": [[20, "module-wenet.efficient_conformer.encoder"]], "strideconformerencoderlayer (class in wenet.efficient_conformer.encoder_layer)": [[21, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer"]], "forward() (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer method)": [[21, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.forward"]], "training (wenet.efficient_conformer.encoder_layer.strideconformerencoderlayer attribute)": [[21, "wenet.efficient_conformer.encoder_layer.StrideConformerEncoderLayer.training"]], "wenet.efficient_conformer.encoder_layer": [[21, "module-wenet.efficient_conformer.encoder_layer"]], "conv2dsubsampling2 (class in wenet.efficient_conformer.subsampling)": [[22, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2"]], "forward() (wenet.efficient_conformer.subsampling.conv2dsubsampling2 method)": [[22, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.forward"]], "training (wenet.efficient_conformer.subsampling.conv2dsubsampling2 attribute)": [[22, "wenet.efficient_conformer.subsampling.Conv2dSubsampling2.training"]], "wenet.efficient_conformer.subsampling": [[22, "module-wenet.efficient_conformer.subsampling"]], "wenet.squeezeformer": [[23, "module-wenet.squeezeformer"]], "relpositionmultiheadedattention (class in wenet.squeezeformer.attention)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.forward_attention"]], "init_weights() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.init_weights"]], "rel_shift() (wenet.squeezeformer.attention.relpositionmultiheadedattention method)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.squeezeformer.attention.relpositionmultiheadedattention attribute)": [[24, "wenet.squeezeformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.squeezeformer.attention": [[24, "module-wenet.squeezeformer.attention"]], "conv2dvalid (class in wenet.squeezeformer.conv2d)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid"]], "bias (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.bias"]], "dilation (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.dilation"]], "forward() (wenet.squeezeformer.conv2d.conv2dvalid method)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.forward"]], "groups (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.groups"]], "in_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.in_channels"]], "kernel_size (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.kernel_size"]], "out_channels (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.out_channels"]], "output_padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.output_padding"]], "padding (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.padding"]], "padding_mode (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.padding_mode"]], "stride (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.stride"]], "transposed (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.transposed"]], "weight (wenet.squeezeformer.conv2d.conv2dvalid attribute)": [[25, "wenet.squeezeformer.conv2d.Conv2dValid.weight"]], "wenet.squeezeformer.conv2d": [[25, "module-wenet.squeezeformer.conv2d"]], "convolutionmodule (class in wenet.squeezeformer.convolution)": [[26, "wenet.squeezeformer.convolution.ConvolutionModule"]], "forward() (wenet.squeezeformer.convolution.convolutionmodule method)": [[26, "wenet.squeezeformer.convolution.ConvolutionModule.forward"]], "init_weights() (wenet.squeezeformer.convolution.convolutionmodule method)": [[26, "wenet.squeezeformer.convolution.ConvolutionModule.init_weights"]], "training (wenet.squeezeformer.convolution.convolutionmodule attribute)": [[26, "wenet.squeezeformer.convolution.ConvolutionModule.training"]], "wenet.squeezeformer.convolution": [[26, "module-wenet.squeezeformer.convolution"]], "squeezeformerencoder (class in wenet.squeezeformer.encoder)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder"]], "calculate_downsampling_factor() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.calculate_downsampling_factor"]], "check_ascending_list() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.check_ascending_list"]], "forward() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward"]], "forward_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.squeezeformer.encoder.squeezeformerencoder method)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.output_size"]], "training (wenet.squeezeformer.encoder.squeezeformerencoder attribute)": [[27, "wenet.squeezeformer.encoder.SqueezeformerEncoder.training"]], "wenet.squeezeformer.encoder": [[27, "module-wenet.squeezeformer.encoder"]], "squeezeformerencoderlayer (class in wenet.squeezeformer.encoder_layer)": [[28, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer"]], "forward() (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer method)": [[28, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.forward"]], "training (wenet.squeezeformer.encoder_layer.squeezeformerencoderlayer attribute)": [[28, "wenet.squeezeformer.encoder_layer.SqueezeformerEncoderLayer.training"]], "wenet.squeezeformer.encoder_layer": [[28, "module-wenet.squeezeformer.encoder_layer"]], "positionwisefeedforward (class in wenet.squeezeformer.positionwise_feed_forward)": [[29, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[29, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "init_weights() (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward method)": [[29, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.init_weights"]], "training (wenet.squeezeformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[29, "wenet.squeezeformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.squeezeformer.positionwise_feed_forward": [[29, "module-wenet.squeezeformer.positionwise_feed_forward"]], "depthwiseconv2dsubsampling4 (class in wenet.squeezeformer.subsampling)": [[30, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4"]], "timereductionlayer1d (class in wenet.squeezeformer.subsampling)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer1D"]], "timereductionlayer2d (class in wenet.squeezeformer.subsampling)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer2D"]], "timereductionlayerstream (class in wenet.squeezeformer.subsampling)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayerStream"]], "forward() (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 method)": [[30, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.forward"]], "forward() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.forward"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer1d method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayer2d method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.init_weights"]], "init_weights() (wenet.squeezeformer.subsampling.timereductionlayerstream method)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.init_weights"]], "training (wenet.squeezeformer.subsampling.depthwiseconv2dsubsampling4 attribute)": [[30, "wenet.squeezeformer.subsampling.DepthwiseConv2dSubsampling4.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer1d attribute)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer1D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayer2d attribute)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayer2D.training"]], "training (wenet.squeezeformer.subsampling.timereductionlayerstream attribute)": [[30, "wenet.squeezeformer.subsampling.TimeReductionLayerStream.training"]], "wenet.squeezeformer.subsampling": [[30, "module-wenet.squeezeformer.subsampling"]], "wenet.transducer": [[31, "module-wenet.transducer"]], "transducerjoint (class in wenet.transducer.joint)": [[32, "wenet.transducer.joint.TransducerJoint"]], "forward() (wenet.transducer.joint.transducerjoint method)": [[32, "wenet.transducer.joint.TransducerJoint.forward"]], "training (wenet.transducer.joint.transducerjoint attribute)": [[32, "wenet.transducer.joint.TransducerJoint.training"]], "wenet.transducer.joint": [[32, "module-wenet.transducer.joint"]], "applypadding() (in module wenet.transducer.predictor)": [[33, "wenet.transducer.predictor.ApplyPadding"]], "convpredictor (class in wenet.transducer.predictor)": [[33, "wenet.transducer.predictor.ConvPredictor"]], "embeddingpredictor (class in wenet.transducer.predictor)": [[33, "wenet.transducer.predictor.EmbeddingPredictor"]], "predictorbase (class in wenet.transducer.predictor)": [[33, "wenet.transducer.predictor.PredictorBase"]], "rnnpredictor (class in wenet.transducer.predictor)": [[33, "wenet.transducer.predictor.RNNPredictor"]], "batch_to_cache() (wenet.transducer.predictor.convpredictor method)": [[33, "wenet.transducer.predictor.ConvPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.embeddingpredictor method)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.predictorbase method)": [[33, "wenet.transducer.predictor.PredictorBase.batch_to_cache"]], "batch_to_cache() (wenet.transducer.predictor.rnnpredictor method)": [[33, "wenet.transducer.predictor.RNNPredictor.batch_to_cache"]], "cache_to_batch() (wenet.transducer.predictor.convpredictor method)": [[33, "wenet.transducer.predictor.ConvPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.embeddingpredictor method)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.predictorbase method)": [[33, "wenet.transducer.predictor.PredictorBase.cache_to_batch"]], "cache_to_batch() (wenet.transducer.predictor.rnnpredictor method)": [[33, "wenet.transducer.predictor.RNNPredictor.cache_to_batch"]], "forward() (wenet.transducer.predictor.convpredictor method)": [[33, "wenet.transducer.predictor.ConvPredictor.forward"]], "forward() (wenet.transducer.predictor.embeddingpredictor method)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.forward"]], "forward() (wenet.transducer.predictor.predictorbase method)": [[33, "wenet.transducer.predictor.PredictorBase.forward"]], "forward() (wenet.transducer.predictor.rnnpredictor method)": [[33, "wenet.transducer.predictor.RNNPredictor.forward"]], "forward_step() (wenet.transducer.predictor.convpredictor method)": [[33, "wenet.transducer.predictor.ConvPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.embeddingpredictor method)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.forward_step"]], "forward_step() (wenet.transducer.predictor.predictorbase method)": [[33, "wenet.transducer.predictor.PredictorBase.forward_step"]], "forward_step() (wenet.transducer.predictor.rnnpredictor method)": [[33, "wenet.transducer.predictor.RNNPredictor.forward_step"]], "init_state() (wenet.transducer.predictor.convpredictor method)": [[33, "wenet.transducer.predictor.ConvPredictor.init_state"]], "init_state() (wenet.transducer.predictor.embeddingpredictor method)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.init_state"]], "init_state() (wenet.transducer.predictor.predictorbase method)": [[33, "wenet.transducer.predictor.PredictorBase.init_state"]], "init_state() (wenet.transducer.predictor.rnnpredictor method)": [[33, "wenet.transducer.predictor.RNNPredictor.init_state"]], "training (wenet.transducer.predictor.convpredictor attribute)": [[33, "wenet.transducer.predictor.ConvPredictor.training"]], "training (wenet.transducer.predictor.embeddingpredictor attribute)": [[33, "wenet.transducer.predictor.EmbeddingPredictor.training"]], "training (wenet.transducer.predictor.predictorbase attribute)": [[33, "wenet.transducer.predictor.PredictorBase.training"]], "training (wenet.transducer.predictor.rnnpredictor attribute)": [[33, "wenet.transducer.predictor.RNNPredictor.training"]], "wenet.transducer.predictor": [[33, "module-wenet.transducer.predictor"]], "transducer (class in wenet.transducer.transducer)": [[34, "wenet.transducer.transducer.Transducer"]], "beam_search() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.beam_search"]], "forward() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.forward"]], "forward_encoder_chunk() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.forward_encoder_chunk"]], "forward_joint_step() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.forward_joint_step"]], "forward_predictor_init_state() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.forward_predictor_init_state"]], "forward_predictor_step() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.forward_predictor_step"]], "greedy_search() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.greedy_search"]], "init_bs() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.init_bs"]], "training (wenet.transducer.transducer.transducer attribute)": [[34, "wenet.transducer.transducer.Transducer.training"]], "transducer_attention_rescoring() (wenet.transducer.transducer.transducer method)": [[34, "wenet.transducer.transducer.Transducer.transducer_attention_rescoring"]], "wenet.transducer.transducer": [[34, "module-wenet.transducer.transducer"]], "wenet.transformer": [[35, "module-wenet.transformer"]], "asrmodel (class in wenet.transformer.asr_model)": [[36, "wenet.transformer.asr_model.ASRModel"]], "attention_rescoring() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.attention_rescoring"]], "ctc_activation() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.ctc_activation"]], "ctc_greedy_search() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.ctc_greedy_search"]], "ctc_prefix_beam_search() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.ctc_prefix_beam_search"]], "eos_symbol() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.eos_symbol"]], "forward() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.forward"]], "forward_attention_decoder() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.forward_attention_decoder"]], "forward_encoder_chunk() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.forward_encoder_chunk"]], "hlg_onebest() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.hlg_onebest"]], "hlg_rescore() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.hlg_rescore"]], "is_bidirectional_decoder() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.is_bidirectional_decoder"]], "load_hlg_resource_if_necessary() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.load_hlg_resource_if_necessary"]], "load_lfmmi_resource() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.load_lfmmi_resource"]], "recognize() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.recognize"]], "right_context() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.right_context"]], "sos_symbol() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.sos_symbol"]], "subsampling_rate() (wenet.transformer.asr_model.asrmodel method)": [[36, "wenet.transformer.asr_model.ASRModel.subsampling_rate"]], "training (wenet.transformer.asr_model.asrmodel attribute)": [[36, "wenet.transformer.asr_model.ASRModel.training"]], "wenet.transformer.asr_model": [[36, "module-wenet.transformer.asr_model"]], "multiheadedattention (class in wenet.transformer.attention)": [[37, "wenet.transformer.attention.MultiHeadedAttention"]], "relpositionmultiheadedattention (class in wenet.transformer.attention)": [[37, "wenet.transformer.attention.RelPositionMultiHeadedAttention"]], "forward() (wenet.transformer.attention.multiheadedattention method)": [[37, "wenet.transformer.attention.MultiHeadedAttention.forward"]], "forward() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[37, "wenet.transformer.attention.RelPositionMultiHeadedAttention.forward"]], "forward_attention() (wenet.transformer.attention.multiheadedattention method)": [[37, "wenet.transformer.attention.MultiHeadedAttention.forward_attention"]], "forward_qkv() (wenet.transformer.attention.multiheadedattention method)": [[37, "wenet.transformer.attention.MultiHeadedAttention.forward_qkv"]], "rel_shift() (wenet.transformer.attention.relpositionmultiheadedattention method)": [[37, "wenet.transformer.attention.RelPositionMultiHeadedAttention.rel_shift"]], "training (wenet.transformer.attention.multiheadedattention attribute)": [[37, "wenet.transformer.attention.MultiHeadedAttention.training"]], "training (wenet.transformer.attention.relpositionmultiheadedattention attribute)": [[37, "wenet.transformer.attention.RelPositionMultiHeadedAttention.training"]], "wenet.transformer.attention": [[37, "module-wenet.transformer.attention"]], "globalcmvn (class in wenet.transformer.cmvn)": [[38, "wenet.transformer.cmvn.GlobalCMVN"]], "forward() (wenet.transformer.cmvn.globalcmvn method)": [[38, "wenet.transformer.cmvn.GlobalCMVN.forward"]], "training (wenet.transformer.cmvn.globalcmvn attribute)": [[38, "wenet.transformer.cmvn.GlobalCMVN.training"]], "wenet.transformer.cmvn": [[38, "module-wenet.transformer.cmvn"]], "convolutionmodule (class in wenet.transformer.convolution)": [[39, "wenet.transformer.convolution.ConvolutionModule"]], "forward() (wenet.transformer.convolution.convolutionmodule method)": [[39, "wenet.transformer.convolution.ConvolutionModule.forward"]], "training (wenet.transformer.convolution.convolutionmodule attribute)": [[39, "wenet.transformer.convolution.ConvolutionModule.training"]], "wenet.transformer.convolution": [[39, "module-wenet.transformer.convolution"]], "ctc (class in wenet.transformer.ctc)": [[40, "wenet.transformer.ctc.CTC"]], "argmax() (wenet.transformer.ctc.ctc method)": [[40, "wenet.transformer.ctc.CTC.argmax"]], "forward() (wenet.transformer.ctc.ctc method)": [[40, "wenet.transformer.ctc.CTC.forward"]], "log_softmax() (wenet.transformer.ctc.ctc method)": [[40, "wenet.transformer.ctc.CTC.log_softmax"]], "training (wenet.transformer.ctc.ctc attribute)": [[40, "wenet.transformer.ctc.CTC.training"]], "wenet.transformer.ctc": [[40, "module-wenet.transformer.ctc"]], "bitransformerdecoder (class in wenet.transformer.decoder)": [[41, "wenet.transformer.decoder.BiTransformerDecoder"]], "transformerdecoder (class in wenet.transformer.decoder)": [[41, "wenet.transformer.decoder.TransformerDecoder"]], "forward() (wenet.transformer.decoder.bitransformerdecoder method)": [[41, "wenet.transformer.decoder.BiTransformerDecoder.forward"]], "forward() (wenet.transformer.decoder.transformerdecoder method)": [[41, "wenet.transformer.decoder.TransformerDecoder.forward"]], "forward_one_step() (wenet.transformer.decoder.bitransformerdecoder method)": [[41, "wenet.transformer.decoder.BiTransformerDecoder.forward_one_step"]], "forward_one_step() (wenet.transformer.decoder.transformerdecoder method)": [[41, "wenet.transformer.decoder.TransformerDecoder.forward_one_step"]], "training (wenet.transformer.decoder.bitransformerdecoder attribute)": [[41, "wenet.transformer.decoder.BiTransformerDecoder.training"]], "training (wenet.transformer.decoder.transformerdecoder attribute)": [[41, "wenet.transformer.decoder.TransformerDecoder.training"]], "wenet.transformer.decoder": [[41, "module-wenet.transformer.decoder"]], "decoderlayer (class in wenet.transformer.decoder_layer)": [[42, "wenet.transformer.decoder_layer.DecoderLayer"]], "forward() (wenet.transformer.decoder_layer.decoderlayer method)": [[42, "wenet.transformer.decoder_layer.DecoderLayer.forward"]], "training (wenet.transformer.decoder_layer.decoderlayer attribute)": [[42, "wenet.transformer.decoder_layer.DecoderLayer.training"]], "wenet.transformer.decoder_layer": [[42, "module-wenet.transformer.decoder_layer"]], "nopositionalencoding (class in wenet.transformer.embedding)": [[43, "wenet.transformer.embedding.NoPositionalEncoding"]], "positionalencoding (class in wenet.transformer.embedding)": [[43, "wenet.transformer.embedding.PositionalEncoding"]], "relpositionalencoding (class in wenet.transformer.embedding)": [[43, "wenet.transformer.embedding.RelPositionalEncoding"]], "forward() (wenet.transformer.embedding.nopositionalencoding method)": [[43, "wenet.transformer.embedding.NoPositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.positionalencoding method)": [[43, "wenet.transformer.embedding.PositionalEncoding.forward"]], "forward() (wenet.transformer.embedding.relpositionalencoding method)": [[43, "wenet.transformer.embedding.RelPositionalEncoding.forward"]], "position_encoding() (wenet.transformer.embedding.nopositionalencoding method)": [[43, "wenet.transformer.embedding.NoPositionalEncoding.position_encoding"]], "position_encoding() (wenet.transformer.embedding.positionalencoding method)": [[43, "wenet.transformer.embedding.PositionalEncoding.position_encoding"]], "training (wenet.transformer.embedding.nopositionalencoding attribute)": [[43, "wenet.transformer.embedding.NoPositionalEncoding.training"]], "training (wenet.transformer.embedding.positionalencoding attribute)": [[43, "wenet.transformer.embedding.PositionalEncoding.training"]], "training (wenet.transformer.embedding.relpositionalencoding attribute)": [[43, "wenet.transformer.embedding.RelPositionalEncoding.training"]], "wenet.transformer.embedding": [[43, "module-wenet.transformer.embedding"]], "baseencoder (class in wenet.transformer.encoder)": [[44, "wenet.transformer.encoder.BaseEncoder"]], "conformerencoder (class in wenet.transformer.encoder)": [[44, "wenet.transformer.encoder.ConformerEncoder"]], "transformerencoder (class in wenet.transformer.encoder)": [[44, "wenet.transformer.encoder.TransformerEncoder"]], "forward() (wenet.transformer.encoder.baseencoder method)": [[44, "wenet.transformer.encoder.BaseEncoder.forward"]], "forward_chunk() (wenet.transformer.encoder.baseencoder method)": [[44, "wenet.transformer.encoder.BaseEncoder.forward_chunk"]], "forward_chunk_by_chunk() (wenet.transformer.encoder.baseencoder method)": [[44, "wenet.transformer.encoder.BaseEncoder.forward_chunk_by_chunk"]], "output_size() (wenet.transformer.encoder.baseencoder method)": [[44, "wenet.transformer.encoder.BaseEncoder.output_size"]], "training (wenet.transformer.encoder.baseencoder attribute)": [[44, "wenet.transformer.encoder.BaseEncoder.training"]], "training (wenet.transformer.encoder.conformerencoder attribute)": [[44, "wenet.transformer.encoder.ConformerEncoder.training"]], "training (wenet.transformer.encoder.transformerencoder attribute)": [[44, "wenet.transformer.encoder.TransformerEncoder.training"]], "wenet.transformer.encoder": [[44, "module-wenet.transformer.encoder"]], "conformerencoderlayer (class in wenet.transformer.encoder_layer)": [[45, "wenet.transformer.encoder_layer.ConformerEncoderLayer"]], "transformerencoderlayer (class in wenet.transformer.encoder_layer)": [[45, "wenet.transformer.encoder_layer.TransformerEncoderLayer"]], "forward() (wenet.transformer.encoder_layer.conformerencoderlayer method)": [[45, "wenet.transformer.encoder_layer.ConformerEncoderLayer.forward"]], "forward() (wenet.transformer.encoder_layer.transformerencoderlayer method)": [[45, "wenet.transformer.encoder_layer.TransformerEncoderLayer.forward"]], "training (wenet.transformer.encoder_layer.conformerencoderlayer attribute)": [[45, "wenet.transformer.encoder_layer.ConformerEncoderLayer.training"]], "training (wenet.transformer.encoder_layer.transformerencoderlayer attribute)": [[45, "wenet.transformer.encoder_layer.TransformerEncoderLayer.training"]], "wenet.transformer.encoder_layer": [[45, "module-wenet.transformer.encoder_layer"]], "labelsmoothingloss (class in wenet.transformer.label_smoothing_loss)": [[46, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss"]], "forward() (wenet.transformer.label_smoothing_loss.labelsmoothingloss method)": [[46, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.forward"]], "training (wenet.transformer.label_smoothing_loss.labelsmoothingloss attribute)": [[46, "wenet.transformer.label_smoothing_loss.LabelSmoothingLoss.training"]], "wenet.transformer.label_smoothing_loss": [[46, "module-wenet.transformer.label_smoothing_loss"]], "positionwisefeedforward (class in wenet.transformer.positionwise_feed_forward)": [[47, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward"]], "forward() (wenet.transformer.positionwise_feed_forward.positionwisefeedforward method)": [[47, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.forward"]], "training (wenet.transformer.positionwise_feed_forward.positionwisefeedforward attribute)": [[47, "wenet.transformer.positionwise_feed_forward.PositionwiseFeedForward.training"]], "wenet.transformer.positionwise_feed_forward": [[47, "module-wenet.transformer.positionwise_feed_forward"]], "basesubsampling (class in wenet.transformer.subsampling)": [[48, "wenet.transformer.subsampling.BaseSubsampling"]], "conv2dsubsampling4 (class in wenet.transformer.subsampling)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling4"]], "conv2dsubsampling6 (class in wenet.transformer.subsampling)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling6"]], "conv2dsubsampling8 (class in wenet.transformer.subsampling)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling8"]], "linearnosubsampling (class in wenet.transformer.subsampling)": [[48, "wenet.transformer.subsampling.LinearNoSubsampling"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling4 method)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling4.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling6 method)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling6.forward"]], "forward() (wenet.transformer.subsampling.conv2dsubsampling8 method)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling8.forward"]], "forward() (wenet.transformer.subsampling.linearnosubsampling method)": [[48, "wenet.transformer.subsampling.LinearNoSubsampling.forward"]], "position_encoding() (wenet.transformer.subsampling.basesubsampling method)": [[48, "wenet.transformer.subsampling.BaseSubsampling.position_encoding"]], "training (wenet.transformer.subsampling.basesubsampling attribute)": [[48, "wenet.transformer.subsampling.BaseSubsampling.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling4 attribute)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling4.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling6 attribute)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling6.training"]], "training (wenet.transformer.subsampling.conv2dsubsampling8 attribute)": [[48, "wenet.transformer.subsampling.Conv2dSubsampling8.training"]], "training (wenet.transformer.subsampling.linearnosubsampling attribute)": [[48, "wenet.transformer.subsampling.LinearNoSubsampling.training"]], "wenet.transformer.subsampling": [[48, "module-wenet.transformer.subsampling"]], "swish (class in wenet.transformer.swish)": [[49, "wenet.transformer.swish.Swish"]], "forward() (wenet.transformer.swish.swish method)": [[49, "wenet.transformer.swish.Swish.forward"]], "training (wenet.transformer.swish.swish attribute)": [[49, "wenet.transformer.swish.Swish.training"]], "wenet.transformer.swish": [[49, "module-wenet.transformer.swish"]], "wenet.utils": [[50, "module-wenet.utils"]], "add_blank() (in module wenet.utils.common)": [[53, "wenet.utils.common.add_blank"]], "add_sos_eos() (in module wenet.utils.common)": [[53, "wenet.utils.common.add_sos_eos"]], "get_activation() (in module wenet.utils.common)": [[53, "wenet.utils.common.get_activation"]], "get_rnn() (in module wenet.utils.common)": [[53, "wenet.utils.common.get_rnn"]], "get_subsample() (in module wenet.utils.common)": [[53, "wenet.utils.common.get_subsample"]], "log_add() (in module wenet.utils.common)": [[53, "wenet.utils.common.log_add"]], "pad_list() (in module wenet.utils.common)": [[53, "wenet.utils.common.pad_list"]], "remove_duplicates_and_blank() (in module wenet.utils.common)": [[53, "wenet.utils.common.remove_duplicates_and_blank"]], "replace_duplicates_with_blank() (in module wenet.utils.common)": [[53, "wenet.utils.common.replace_duplicates_with_blank"]], "reverse_pad_list() (in module wenet.utils.common)": [[53, "wenet.utils.common.reverse_pad_list"]], "th_accuracy() (in module wenet.utils.common)": [[53, "wenet.utils.common.th_accuracy"]], "wenet.utils.common": [[53, "module-wenet.utils.common"]], "override_config() (in module wenet.utils.config)": [[54, "wenet.utils.config.override_config"]], "wenet.utils.config": [[54, "module-wenet.utils.config"]], "executor (class in wenet.utils.executor)": [[56, "wenet.utils.executor.Executor"]], "cv() (wenet.utils.executor.executor method)": [[56, "wenet.utils.executor.Executor.cv"]], "train() (wenet.utils.executor.executor method)": [[56, "wenet.utils.executor.Executor.train"]], "wenet.utils.executor": [[56, "module-wenet.utils.executor"]], "read_lists() (in module wenet.utils.file_utils)": [[57, "wenet.utils.file_utils.read_lists"]], "read_non_lang_symbols() (in module wenet.utils.file_utils)": [[57, "wenet.utils.file_utils.read_non_lang_symbols"]], "read_symbol_table() (in module wenet.utils.file_utils)": [[57, "wenet.utils.file_utils.read_symbol_table"]], "wenet.utils.file_utils": [[57, "module-wenet.utils.file_utils"]], "add_optional_chunk_mask() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.add_optional_chunk_mask"]], "make_non_pad_mask() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.make_non_pad_mask"]], "make_pad_mask() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.make_pad_mask"]], "mask_finished_preds() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.mask_finished_preds"]], "mask_finished_scores() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.mask_finished_scores"]], "subsequent_chunk_mask() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.subsequent_chunk_mask"]], "subsequent_mask() (in module wenet.utils.mask)": [[59, "wenet.utils.mask.subsequent_mask"]], "wenet.utils.mask": [[59, "module-wenet.utils.mask"]], "cosineannealing (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.CosineAnnealing"]], "noamannealing (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.NoamAnnealing"]], "noamholdannealing (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.NoamHoldAnnealing"]], "squareannealing (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.SquareAnnealing"]], "squarerootannealing (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.SquareRootAnnealing"]], "squarerootconstantpolicy (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.SquareRootConstantPolicy"]], "warmupannealholdpolicy (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.WarmupAnnealHoldPolicy"]], "warmupholdpolicy (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.WarmupHoldPolicy"]], "warmuplr (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.WarmupLR"]], "warmuppolicy (class in wenet.utils.scheduler)": [[60, "wenet.utils.scheduler.WarmupPolicy"]], "get_lr() (wenet.utils.scheduler.noamannealing method)": [[60, "wenet.utils.scheduler.NoamAnnealing.get_lr"]], "get_lr() (wenet.utils.scheduler.squarerootconstantpolicy method)": [[60, "wenet.utils.scheduler.SquareRootConstantPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupannealholdpolicy method)": [[60, "wenet.utils.scheduler.WarmupAnnealHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmupholdpolicy method)": [[60, "wenet.utils.scheduler.WarmupHoldPolicy.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuplr method)": [[60, "wenet.utils.scheduler.WarmupLR.get_lr"]], "get_lr() (wenet.utils.scheduler.warmuppolicy method)": [[60, "wenet.utils.scheduler.WarmupPolicy.get_lr"]], "set_step() (wenet.utils.scheduler.noamholdannealing method)": [[60, "wenet.utils.scheduler.NoamHoldAnnealing.set_step"]], "set_step() (wenet.utils.scheduler.warmuplr method)": [[60, "wenet.utils.scheduler.WarmupLR.set_step"]], "wenet.utils.scheduler": [[60, "module-wenet.utils.scheduler"]]}})